Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    ESPACIO
    FN

Grammar

Rule 0     S' -> Start
Rule 1     Start -> code
Rule 2     code -> INICIO cuerpo FIN
Rule 3     cuerpo -> variable
Rule 4     cuerpo -> expresion
Rule 5     cuerpo -> cuerpo_if
Rule 6     cuerpo_if -> variable
Rule 7     cuerpo_if -> expresion_if
Rule 8     expresion_if -> funcion_if expresion_if
Rule 9     expresion_if -> empty empty
Rule 10    funcion_if -> Move_if expresion_if
Rule 11    funcion_if -> Delay_if expresion_if
Rule 12    funcion_if -> Opera_if expresion_if
Rule 13    funcion_if -> Println_if expresion_if
Rule 14    variable -> variableDef1 cuerpo
Rule 15    variable -> variableDef2 cuerpo
Rule 16    variable -> empty empty
Rule 17    variableDef1 -> LET ID PUNTOCOMA
Rule 18    variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA
Rule 19    variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA
Rule 20    variableDef2 -> LET ID EQUAL STRING PUNTOCOMA
Rule 21    expresion -> INTEGER expresion
Rule 22    expresion -> STRING expresion
Rule 23    expresion -> funcion expresion
Rule 24    expresion -> ID expresion
Rule 25    expresion -> condicion expresion
Rule 26    expresion -> operador expresion
Rule 27    expresion -> main
Rule 28    expresion -> empty empty
Rule 29    operador -> SUMA
Rule 30    operador -> RESTA
Rule 31    operador -> MULTIPLICA
Rule 32    operador -> DIVIDE
Rule 33    operador -> POTENCIA
Rule 34    funcion -> Opera
Rule 35    funcion -> Move
Rule 36    funcion -> Delay
Rule 37    funcion -> If
Rule 38    funcion -> While
Rule 39    funcion -> For
Rule 40    funcion -> Loop
Rule 41    funcion -> Println
Rule 42    funcion -> Else
Rule 43    condicion -> Igual expresion
Rule 44    condicion -> Diferente expresion
Rule 45    condicion -> Mayor expresion
Rule 46    condicion -> Menor expresion
Rule 47    condicion -> Mayorigual expresion
Rule 48    condicion -> Menorigual expresion
Rule 49    Igual -> INTEGER IGUAL INTEGER
Rule 50    Igual -> ID IGUAL ID
Rule 51    Igual -> INTEGER IGUAL ID
Rule 52    Igual -> ID IGUAL INTEGER
Rule 53    Diferente -> INTEGER DIFERENTE INTEGER
Rule 54    Diferente -> ID DIFERENTE ID
Rule 55    Diferente -> INTEGER DIFERENTE ID
Rule 56    Diferente -> ID DIFERENTE INTEGER
Rule 57    Mayor -> INTEGER MAYOR INTEGER
Rule 58    Mayor -> ID MAYOR ID
Rule 59    Mayor -> INTEGER MAYOR ID
Rule 60    Mayor -> ID MAYOR INTEGER
Rule 61    Menor -> INTEGER MENOR INTEGER
Rule 62    Menor -> ID MENOR ID
Rule 63    Menor -> INTEGER MENOR ID
Rule 64    Menor -> ID MENOR INTEGER
Rule 65    Mayorigual -> INTEGER MAYORIGUAL INTEGER
Rule 66    Mayorigual -> ID MAYORIGUAL ID
Rule 67    Mayorigual -> INTEGER MAYORIGUAL ID
Rule 68    Mayorigual -> ID MAYORIGUAL INTEGER
Rule 69    Menorigual -> INTEGER MENORIGUAL INTEGER
Rule 70    Menorigual -> ID MENORIGUAL ID
Rule 71    Menorigual -> INTEGER MENORIGUAL ID
Rule 72    Menorigual -> ID MENORIGUAL INTEGER
Rule 73    Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
Rule 74    Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
Rule 75    Move -> MOVE LPAREN ID RPAREN PUNTOCOMA
Rule 76    Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA
Rule 77    Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
Rule 78    Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
Rule 79    If -> IF condicion LLAVEL cuerpo_if LLAVER
Rule 80    Else -> ELSE LLAVEL cuerpo LLAVER
Rule 81    While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
Rule 82    For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
Rule 83    Loop -> LOOP LLAVEL cuerpo LLAVER
Rule 84    Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA
Rule 85    Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
Rule 86    Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA
Rule 87    Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
Rule 88    Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA
Rule 89    Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
Rule 90    Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA
Rule 91    Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
Rule 92    main -> MAIN LPAREN RPAREN PUNTOCOMA
Rule 93    empty -> <empty>

Terminals, with rules where they appear

BOOLEAN              : 19 87 91
COMA                 : 73 73 74 74 77 78
COMENTARIO           : 
DELAY                : 77 78
DIFERENTE            : 53 54 55 56
DIVIDE               : 32
ELSE                 : 80
EQUAL                : 18 19 20
ESPACIO              : 
FIN                  : 2
FN                   : 
FOR                  : 82
ID                   : 17 18 19 20 24 50 50 51 52 54 54 55 56 58 58 59 60 62 62 63 64 66 66 67 68 70 70 71 72 75 76 82 86 90
IF                   : 79
IGUAL                : 49 50 51 52
IN                   : 82
INICIO               : 2
INTEGER              : 18 21 49 49 51 52 53 53 55 56 57 57 59 60 61 61 63 64 65 65 67 68 69 69 71 72 77 78 82 82 85 89
LET                  : 17 18 19 20
LLAVEL               : 79 80 81 82 83
LLAVER               : 79 80 81 82 83
LOOP                 : 83
LPAREN               : 73 74 75 76 77 78 81 84 85 86 87 88 89 90 91 92
MAIN                 : 92
MAYOR                : 57 58 59 60
MAYORIGUAL           : 65 66 67 68
MENOR                : 61 62 63 64
MENORIGUAL           : 69 70 71 72
MOVE                 : 75 76
MULTIPLICA           : 31
OPERA                : 73 74
POTENCIA             : 33
PRINTLN              : 84 85 86 87 88 89 90 91
PUNTOCOMA            : 17 18 19 20 73 74 75 76 77 78 84 85 86 87 88 89 90 91 92
PUNTOS               : 82
RESTA                : 30
RPAREN               : 73 74 75 76 77 78 81 84 85 86 87 88 89 90 91 92
STRING               : 20 22 77 78 84 88
SUMA                 : 29
WHILE                : 81
error                : 

Nonterminals, with rules where they appear

Delay                : 36
Delay_if             : 11
Diferente            : 44
Else                 : 42
For                  : 39
If                   : 37
Igual                : 43
Loop                 : 40
Mayor                : 45
Mayorigual           : 47
Menor                : 46
Menorigual           : 48
Move                 : 35
Move_if              : 10
Opera                : 34
Opera_if             : 12
Println              : 41
Println_if           : 13
Start                : 0
While                : 38
code                 : 1
condicion            : 25 79 81
cuerpo               : 2 14 15 80 81 83
cuerpo_if            : 5 79
empty                : 9 9 16 16 28 28
expresion            : 4 21 22 23 24 25 26 43 44 45 46 47 48 73 73 74 74 82
expresion_if         : 7 8 10 11 12 13
funcion              : 23
funcion_if           : 8
main                 : 27
operador             : 26 73 74
variable             : 3 6
variableDef1         : 14
variableDef2         : 15

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . code
    (2) code -> . INICIO cuerpo FIN

    INICIO          shift and go to state 3

    Start                          shift and go to state 1
    code                           shift and go to state 2

state 1

    (0) S' -> Start .



state 2

    (1) Start -> code .

    $end            reduce using rule 1 (Start -> code .)


state 3

    (2) code -> INICIO . cuerpo FIN
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 4
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 4

    (2) code -> INICIO cuerpo . FIN

    FIN             shift and go to state 55


state 5

    (3) cuerpo -> variable .
    (6) cuerpo_if -> variable .

  ! reduce/reduce conflict for FIN resolved using rule 3 (cuerpo -> variable .)
  ! reduce/reduce conflict for LLAVER resolved using rule 3 (cuerpo -> variable .)
    FIN             reduce using rule 3 (cuerpo -> variable .)
    LLAVER          reduce using rule 3 (cuerpo -> variable .)

  ! FIN             [ reduce using rule 6 (cuerpo_if -> variable .) ]
  ! LLAVER          [ reduce using rule 6 (cuerpo_if -> variable .) ]


state 6

    (4) cuerpo -> expresion .

    FIN             reduce using rule 4 (cuerpo -> expresion .)
    LLAVER          reduce using rule 4 (cuerpo -> expresion .)


state 7

    (5) cuerpo -> cuerpo_if .

    FIN             reduce using rule 5 (cuerpo -> cuerpo_if .)
    LLAVER          reduce using rule 5 (cuerpo -> cuerpo_if .)


state 8

    (14) variable -> variableDef1 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    variableDef1                   shift and go to state 8
    cuerpo                         shift and go to state 56
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 9

    (15) variable -> variableDef2 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    variableDef2                   shift and go to state 9
    cuerpo                         shift and go to state 57
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 10

    (16) variable -> empty . empty
    (28) expresion -> empty . empty
    (9) expresion_if -> empty . empty
    (93) empty -> .

    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)

    empty                          shift and go to state 58

state 11

    (21) expresion -> INTEGER . expresion
    (49) Igual -> INTEGER . IGUAL INTEGER
    (51) Igual -> INTEGER . IGUAL ID
    (53) Diferente -> INTEGER . DIFERENTE INTEGER
    (55) Diferente -> INTEGER . DIFERENTE ID
    (57) Mayor -> INTEGER . MAYOR INTEGER
    (59) Mayor -> INTEGER . MAYOR ID
    (61) Menor -> INTEGER . MENOR INTEGER
    (63) Menor -> INTEGER . MENOR ID
    (65) Mayorigual -> INTEGER . MAYORIGUAL INTEGER
    (67) Mayorigual -> INTEGER . MAYORIGUAL ID
    (69) Menorigual -> INTEGER . MENORIGUAL INTEGER
    (71) Menorigual -> INTEGER . MENORIGUAL ID
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    expresion                      shift and go to state 59
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 12

    (22) expresion -> STRING . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    expresion                      shift and go to state 71
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 13

    (23) expresion -> funcion . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    funcion                        shift and go to state 13
    expresion                      shift and go to state 72
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 14

    (24) expresion -> ID . expresion
    (50) Igual -> ID . IGUAL ID
    (52) Igual -> ID . IGUAL INTEGER
    (54) Diferente -> ID . DIFERENTE ID
    (56) Diferente -> ID . DIFERENTE INTEGER
    (58) Mayor -> ID . MAYOR ID
    (60) Mayor -> ID . MAYOR INTEGER
    (62) Menor -> ID . MENOR ID
    (64) Menor -> ID . MENOR INTEGER
    (66) Mayorigual -> ID . MAYORIGUAL ID
    (68) Mayorigual -> ID . MAYORIGUAL INTEGER
    (70) Menorigual -> ID . MENORIGUAL ID
    (72) Menorigual -> ID . MENORIGUAL INTEGER
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MAYOR           shift and go to state 76
    MENOR           shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    expresion                      shift and go to state 73
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 15

    (25) expresion -> condicion . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    condicion                      shift and go to state 15
    expresion                      shift and go to state 80
    funcion                        shift and go to state 13
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 16

    (26) expresion -> operador . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    operador                       shift and go to state 16
    expresion                      shift and go to state 81
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 17

    (27) expresion -> main .

    FIN             reduce using rule 27 (expresion -> main .)
    LLAVER          reduce using rule 27 (expresion -> main .)
    INTEGER         reduce using rule 27 (expresion -> main .)
    STRING          reduce using rule 27 (expresion -> main .)
    ID              reduce using rule 27 (expresion -> main .)
    SUMA            reduce using rule 27 (expresion -> main .)
    RESTA           reduce using rule 27 (expresion -> main .)
    MULTIPLICA      reduce using rule 27 (expresion -> main .)
    DIVIDE          reduce using rule 27 (expresion -> main .)
    POTENCIA        reduce using rule 27 (expresion -> main .)
    MAIN            reduce using rule 27 (expresion -> main .)
    OPERA           reduce using rule 27 (expresion -> main .)
    MOVE            reduce using rule 27 (expresion -> main .)
    DELAY           reduce using rule 27 (expresion -> main .)
    IF              reduce using rule 27 (expresion -> main .)
    WHILE           reduce using rule 27 (expresion -> main .)
    FOR             reduce using rule 27 (expresion -> main .)
    LOOP            reduce using rule 27 (expresion -> main .)
    PRINTLN         reduce using rule 27 (expresion -> main .)
    ELSE            reduce using rule 27 (expresion -> main .)
    LLAVEL          reduce using rule 27 (expresion -> main .)
    RPAREN          reduce using rule 27 (expresion -> main .)
    COMA            reduce using rule 27 (expresion -> main .)


state 18

    (7) cuerpo_if -> expresion_if .

    FIN             reduce using rule 7 (cuerpo_if -> expresion_if .)
    LLAVER          reduce using rule 7 (cuerpo_if -> expresion_if .)


state 19

    (17) variableDef1 -> LET . ID PUNTOCOMA
    (18) variableDef2 -> LET . ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> LET . ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> LET . ID EQUAL STRING PUNTOCOMA

    ID              shift and go to state 82


state 20

    (34) funcion -> Opera .

    INTEGER         reduce using rule 34 (funcion -> Opera .)
    STRING          reduce using rule 34 (funcion -> Opera .)
    ID              reduce using rule 34 (funcion -> Opera .)
    SUMA            reduce using rule 34 (funcion -> Opera .)
    RESTA           reduce using rule 34 (funcion -> Opera .)
    MULTIPLICA      reduce using rule 34 (funcion -> Opera .)
    DIVIDE          reduce using rule 34 (funcion -> Opera .)
    POTENCIA        reduce using rule 34 (funcion -> Opera .)
    MAIN            reduce using rule 34 (funcion -> Opera .)
    OPERA           reduce using rule 34 (funcion -> Opera .)
    MOVE            reduce using rule 34 (funcion -> Opera .)
    DELAY           reduce using rule 34 (funcion -> Opera .)
    IF              reduce using rule 34 (funcion -> Opera .)
    WHILE           reduce using rule 34 (funcion -> Opera .)
    FOR             reduce using rule 34 (funcion -> Opera .)
    LOOP            reduce using rule 34 (funcion -> Opera .)
    PRINTLN         reduce using rule 34 (funcion -> Opera .)
    ELSE            reduce using rule 34 (funcion -> Opera .)
    FIN             reduce using rule 34 (funcion -> Opera .)
    LLAVER          reduce using rule 34 (funcion -> Opera .)
    LLAVEL          reduce using rule 34 (funcion -> Opera .)
    RPAREN          reduce using rule 34 (funcion -> Opera .)
    COMA            reduce using rule 34 (funcion -> Opera .)


state 21

    (35) funcion -> Move .

    INTEGER         reduce using rule 35 (funcion -> Move .)
    STRING          reduce using rule 35 (funcion -> Move .)
    ID              reduce using rule 35 (funcion -> Move .)
    SUMA            reduce using rule 35 (funcion -> Move .)
    RESTA           reduce using rule 35 (funcion -> Move .)
    MULTIPLICA      reduce using rule 35 (funcion -> Move .)
    DIVIDE          reduce using rule 35 (funcion -> Move .)
    POTENCIA        reduce using rule 35 (funcion -> Move .)
    MAIN            reduce using rule 35 (funcion -> Move .)
    OPERA           reduce using rule 35 (funcion -> Move .)
    MOVE            reduce using rule 35 (funcion -> Move .)
    DELAY           reduce using rule 35 (funcion -> Move .)
    IF              reduce using rule 35 (funcion -> Move .)
    WHILE           reduce using rule 35 (funcion -> Move .)
    FOR             reduce using rule 35 (funcion -> Move .)
    LOOP            reduce using rule 35 (funcion -> Move .)
    PRINTLN         reduce using rule 35 (funcion -> Move .)
    ELSE            reduce using rule 35 (funcion -> Move .)
    FIN             reduce using rule 35 (funcion -> Move .)
    LLAVER          reduce using rule 35 (funcion -> Move .)
    LLAVEL          reduce using rule 35 (funcion -> Move .)
    RPAREN          reduce using rule 35 (funcion -> Move .)
    COMA            reduce using rule 35 (funcion -> Move .)


state 22

    (36) funcion -> Delay .

    INTEGER         reduce using rule 36 (funcion -> Delay .)
    STRING          reduce using rule 36 (funcion -> Delay .)
    ID              reduce using rule 36 (funcion -> Delay .)
    SUMA            reduce using rule 36 (funcion -> Delay .)
    RESTA           reduce using rule 36 (funcion -> Delay .)
    MULTIPLICA      reduce using rule 36 (funcion -> Delay .)
    DIVIDE          reduce using rule 36 (funcion -> Delay .)
    POTENCIA        reduce using rule 36 (funcion -> Delay .)
    MAIN            reduce using rule 36 (funcion -> Delay .)
    OPERA           reduce using rule 36 (funcion -> Delay .)
    MOVE            reduce using rule 36 (funcion -> Delay .)
    DELAY           reduce using rule 36 (funcion -> Delay .)
    IF              reduce using rule 36 (funcion -> Delay .)
    WHILE           reduce using rule 36 (funcion -> Delay .)
    FOR             reduce using rule 36 (funcion -> Delay .)
    LOOP            reduce using rule 36 (funcion -> Delay .)
    PRINTLN         reduce using rule 36 (funcion -> Delay .)
    ELSE            reduce using rule 36 (funcion -> Delay .)
    FIN             reduce using rule 36 (funcion -> Delay .)
    LLAVER          reduce using rule 36 (funcion -> Delay .)
    LLAVEL          reduce using rule 36 (funcion -> Delay .)
    RPAREN          reduce using rule 36 (funcion -> Delay .)
    COMA            reduce using rule 36 (funcion -> Delay .)


state 23

    (37) funcion -> If .

    INTEGER         reduce using rule 37 (funcion -> If .)
    STRING          reduce using rule 37 (funcion -> If .)
    ID              reduce using rule 37 (funcion -> If .)
    SUMA            reduce using rule 37 (funcion -> If .)
    RESTA           reduce using rule 37 (funcion -> If .)
    MULTIPLICA      reduce using rule 37 (funcion -> If .)
    DIVIDE          reduce using rule 37 (funcion -> If .)
    POTENCIA        reduce using rule 37 (funcion -> If .)
    MAIN            reduce using rule 37 (funcion -> If .)
    OPERA           reduce using rule 37 (funcion -> If .)
    MOVE            reduce using rule 37 (funcion -> If .)
    DELAY           reduce using rule 37 (funcion -> If .)
    IF              reduce using rule 37 (funcion -> If .)
    WHILE           reduce using rule 37 (funcion -> If .)
    FOR             reduce using rule 37 (funcion -> If .)
    LOOP            reduce using rule 37 (funcion -> If .)
    PRINTLN         reduce using rule 37 (funcion -> If .)
    ELSE            reduce using rule 37 (funcion -> If .)
    FIN             reduce using rule 37 (funcion -> If .)
    LLAVER          reduce using rule 37 (funcion -> If .)
    LLAVEL          reduce using rule 37 (funcion -> If .)
    RPAREN          reduce using rule 37 (funcion -> If .)
    COMA            reduce using rule 37 (funcion -> If .)


state 24

    (38) funcion -> While .

    INTEGER         reduce using rule 38 (funcion -> While .)
    STRING          reduce using rule 38 (funcion -> While .)
    ID              reduce using rule 38 (funcion -> While .)
    SUMA            reduce using rule 38 (funcion -> While .)
    RESTA           reduce using rule 38 (funcion -> While .)
    MULTIPLICA      reduce using rule 38 (funcion -> While .)
    DIVIDE          reduce using rule 38 (funcion -> While .)
    POTENCIA        reduce using rule 38 (funcion -> While .)
    MAIN            reduce using rule 38 (funcion -> While .)
    OPERA           reduce using rule 38 (funcion -> While .)
    MOVE            reduce using rule 38 (funcion -> While .)
    DELAY           reduce using rule 38 (funcion -> While .)
    IF              reduce using rule 38 (funcion -> While .)
    WHILE           reduce using rule 38 (funcion -> While .)
    FOR             reduce using rule 38 (funcion -> While .)
    LOOP            reduce using rule 38 (funcion -> While .)
    PRINTLN         reduce using rule 38 (funcion -> While .)
    ELSE            reduce using rule 38 (funcion -> While .)
    FIN             reduce using rule 38 (funcion -> While .)
    LLAVER          reduce using rule 38 (funcion -> While .)
    LLAVEL          reduce using rule 38 (funcion -> While .)
    RPAREN          reduce using rule 38 (funcion -> While .)
    COMA            reduce using rule 38 (funcion -> While .)


state 25

    (39) funcion -> For .

    INTEGER         reduce using rule 39 (funcion -> For .)
    STRING          reduce using rule 39 (funcion -> For .)
    ID              reduce using rule 39 (funcion -> For .)
    SUMA            reduce using rule 39 (funcion -> For .)
    RESTA           reduce using rule 39 (funcion -> For .)
    MULTIPLICA      reduce using rule 39 (funcion -> For .)
    DIVIDE          reduce using rule 39 (funcion -> For .)
    POTENCIA        reduce using rule 39 (funcion -> For .)
    MAIN            reduce using rule 39 (funcion -> For .)
    OPERA           reduce using rule 39 (funcion -> For .)
    MOVE            reduce using rule 39 (funcion -> For .)
    DELAY           reduce using rule 39 (funcion -> For .)
    IF              reduce using rule 39 (funcion -> For .)
    WHILE           reduce using rule 39 (funcion -> For .)
    FOR             reduce using rule 39 (funcion -> For .)
    LOOP            reduce using rule 39 (funcion -> For .)
    PRINTLN         reduce using rule 39 (funcion -> For .)
    ELSE            reduce using rule 39 (funcion -> For .)
    FIN             reduce using rule 39 (funcion -> For .)
    LLAVER          reduce using rule 39 (funcion -> For .)
    LLAVEL          reduce using rule 39 (funcion -> For .)
    RPAREN          reduce using rule 39 (funcion -> For .)
    COMA            reduce using rule 39 (funcion -> For .)


state 26

    (40) funcion -> Loop .

    INTEGER         reduce using rule 40 (funcion -> Loop .)
    STRING          reduce using rule 40 (funcion -> Loop .)
    ID              reduce using rule 40 (funcion -> Loop .)
    SUMA            reduce using rule 40 (funcion -> Loop .)
    RESTA           reduce using rule 40 (funcion -> Loop .)
    MULTIPLICA      reduce using rule 40 (funcion -> Loop .)
    DIVIDE          reduce using rule 40 (funcion -> Loop .)
    POTENCIA        reduce using rule 40 (funcion -> Loop .)
    MAIN            reduce using rule 40 (funcion -> Loop .)
    OPERA           reduce using rule 40 (funcion -> Loop .)
    MOVE            reduce using rule 40 (funcion -> Loop .)
    DELAY           reduce using rule 40 (funcion -> Loop .)
    IF              reduce using rule 40 (funcion -> Loop .)
    WHILE           reduce using rule 40 (funcion -> Loop .)
    FOR             reduce using rule 40 (funcion -> Loop .)
    LOOP            reduce using rule 40 (funcion -> Loop .)
    PRINTLN         reduce using rule 40 (funcion -> Loop .)
    ELSE            reduce using rule 40 (funcion -> Loop .)
    FIN             reduce using rule 40 (funcion -> Loop .)
    LLAVER          reduce using rule 40 (funcion -> Loop .)
    LLAVEL          reduce using rule 40 (funcion -> Loop .)
    RPAREN          reduce using rule 40 (funcion -> Loop .)
    COMA            reduce using rule 40 (funcion -> Loop .)


state 27

    (41) funcion -> Println .

    INTEGER         reduce using rule 41 (funcion -> Println .)
    STRING          reduce using rule 41 (funcion -> Println .)
    ID              reduce using rule 41 (funcion -> Println .)
    SUMA            reduce using rule 41 (funcion -> Println .)
    RESTA           reduce using rule 41 (funcion -> Println .)
    MULTIPLICA      reduce using rule 41 (funcion -> Println .)
    DIVIDE          reduce using rule 41 (funcion -> Println .)
    POTENCIA        reduce using rule 41 (funcion -> Println .)
    MAIN            reduce using rule 41 (funcion -> Println .)
    OPERA           reduce using rule 41 (funcion -> Println .)
    MOVE            reduce using rule 41 (funcion -> Println .)
    DELAY           reduce using rule 41 (funcion -> Println .)
    IF              reduce using rule 41 (funcion -> Println .)
    WHILE           reduce using rule 41 (funcion -> Println .)
    FOR             reduce using rule 41 (funcion -> Println .)
    LOOP            reduce using rule 41 (funcion -> Println .)
    PRINTLN         reduce using rule 41 (funcion -> Println .)
    ELSE            reduce using rule 41 (funcion -> Println .)
    FIN             reduce using rule 41 (funcion -> Println .)
    LLAVER          reduce using rule 41 (funcion -> Println .)
    LLAVEL          reduce using rule 41 (funcion -> Println .)
    RPAREN          reduce using rule 41 (funcion -> Println .)
    COMA            reduce using rule 41 (funcion -> Println .)


state 28

    (42) funcion -> Else .

    INTEGER         reduce using rule 42 (funcion -> Else .)
    STRING          reduce using rule 42 (funcion -> Else .)
    ID              reduce using rule 42 (funcion -> Else .)
    SUMA            reduce using rule 42 (funcion -> Else .)
    RESTA           reduce using rule 42 (funcion -> Else .)
    MULTIPLICA      reduce using rule 42 (funcion -> Else .)
    DIVIDE          reduce using rule 42 (funcion -> Else .)
    POTENCIA        reduce using rule 42 (funcion -> Else .)
    MAIN            reduce using rule 42 (funcion -> Else .)
    OPERA           reduce using rule 42 (funcion -> Else .)
    MOVE            reduce using rule 42 (funcion -> Else .)
    DELAY           reduce using rule 42 (funcion -> Else .)
    IF              reduce using rule 42 (funcion -> Else .)
    WHILE           reduce using rule 42 (funcion -> Else .)
    FOR             reduce using rule 42 (funcion -> Else .)
    LOOP            reduce using rule 42 (funcion -> Else .)
    PRINTLN         reduce using rule 42 (funcion -> Else .)
    ELSE            reduce using rule 42 (funcion -> Else .)
    FIN             reduce using rule 42 (funcion -> Else .)
    LLAVER          reduce using rule 42 (funcion -> Else .)
    LLAVEL          reduce using rule 42 (funcion -> Else .)
    RPAREN          reduce using rule 42 (funcion -> Else .)
    COMA            reduce using rule 42 (funcion -> Else .)


state 29

    (43) condicion -> Igual . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Igual                          shift and go to state 29
    expresion                      shift and go to state 83
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 30

    (44) condicion -> Diferente . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Diferente                      shift and go to state 30
    expresion                      shift and go to state 84
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 31

    (45) condicion -> Mayor . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Mayor                          shift and go to state 31
    expresion                      shift and go to state 85
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 32

    (46) condicion -> Menor . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Menor                          shift and go to state 32
    expresion                      shift and go to state 86
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 33

    (47) condicion -> Mayorigual . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Mayorigual                     shift and go to state 33
    expresion                      shift and go to state 87
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Menorigual                     shift and go to state 34

state 34

    (48) condicion -> Menorigual . expresion
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 93 (empty -> .) ]
  ! STRING          [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! SUMA            [ reduce using rule 93 (empty -> .) ]
  ! RESTA           [ reduce using rule 93 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 93 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 93 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 93 (empty -> .) ]
  ! MAIN            [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! LOOP            [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]
  ! ELSE            [ reduce using rule 93 (empty -> .) ]

    Menorigual                     shift and go to state 34
    expresion                      shift and go to state 88
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33

state 35

    (29) operador -> SUMA .

    INTEGER         reduce using rule 29 (operador -> SUMA .)
    STRING          reduce using rule 29 (operador -> SUMA .)
    ID              reduce using rule 29 (operador -> SUMA .)
    SUMA            reduce using rule 29 (operador -> SUMA .)
    RESTA           reduce using rule 29 (operador -> SUMA .)
    MULTIPLICA      reduce using rule 29 (operador -> SUMA .)
    DIVIDE          reduce using rule 29 (operador -> SUMA .)
    POTENCIA        reduce using rule 29 (operador -> SUMA .)
    MAIN            reduce using rule 29 (operador -> SUMA .)
    OPERA           reduce using rule 29 (operador -> SUMA .)
    MOVE            reduce using rule 29 (operador -> SUMA .)
    DELAY           reduce using rule 29 (operador -> SUMA .)
    IF              reduce using rule 29 (operador -> SUMA .)
    WHILE           reduce using rule 29 (operador -> SUMA .)
    FOR             reduce using rule 29 (operador -> SUMA .)
    LOOP            reduce using rule 29 (operador -> SUMA .)
    PRINTLN         reduce using rule 29 (operador -> SUMA .)
    ELSE            reduce using rule 29 (operador -> SUMA .)
    FIN             reduce using rule 29 (operador -> SUMA .)
    LLAVER          reduce using rule 29 (operador -> SUMA .)
    LLAVEL          reduce using rule 29 (operador -> SUMA .)
    RPAREN          reduce using rule 29 (operador -> SUMA .)
    COMA            reduce using rule 29 (operador -> SUMA .)


state 36

    (30) operador -> RESTA .

    INTEGER         reduce using rule 30 (operador -> RESTA .)
    STRING          reduce using rule 30 (operador -> RESTA .)
    ID              reduce using rule 30 (operador -> RESTA .)
    SUMA            reduce using rule 30 (operador -> RESTA .)
    RESTA           reduce using rule 30 (operador -> RESTA .)
    MULTIPLICA      reduce using rule 30 (operador -> RESTA .)
    DIVIDE          reduce using rule 30 (operador -> RESTA .)
    POTENCIA        reduce using rule 30 (operador -> RESTA .)
    MAIN            reduce using rule 30 (operador -> RESTA .)
    OPERA           reduce using rule 30 (operador -> RESTA .)
    MOVE            reduce using rule 30 (operador -> RESTA .)
    DELAY           reduce using rule 30 (operador -> RESTA .)
    IF              reduce using rule 30 (operador -> RESTA .)
    WHILE           reduce using rule 30 (operador -> RESTA .)
    FOR             reduce using rule 30 (operador -> RESTA .)
    LOOP            reduce using rule 30 (operador -> RESTA .)
    PRINTLN         reduce using rule 30 (operador -> RESTA .)
    ELSE            reduce using rule 30 (operador -> RESTA .)
    FIN             reduce using rule 30 (operador -> RESTA .)
    LLAVER          reduce using rule 30 (operador -> RESTA .)
    LLAVEL          reduce using rule 30 (operador -> RESTA .)
    RPAREN          reduce using rule 30 (operador -> RESTA .)
    COMA            reduce using rule 30 (operador -> RESTA .)


state 37

    (31) operador -> MULTIPLICA .

    INTEGER         reduce using rule 31 (operador -> MULTIPLICA .)
    STRING          reduce using rule 31 (operador -> MULTIPLICA .)
    ID              reduce using rule 31 (operador -> MULTIPLICA .)
    SUMA            reduce using rule 31 (operador -> MULTIPLICA .)
    RESTA           reduce using rule 31 (operador -> MULTIPLICA .)
    MULTIPLICA      reduce using rule 31 (operador -> MULTIPLICA .)
    DIVIDE          reduce using rule 31 (operador -> MULTIPLICA .)
    POTENCIA        reduce using rule 31 (operador -> MULTIPLICA .)
    MAIN            reduce using rule 31 (operador -> MULTIPLICA .)
    OPERA           reduce using rule 31 (operador -> MULTIPLICA .)
    MOVE            reduce using rule 31 (operador -> MULTIPLICA .)
    DELAY           reduce using rule 31 (operador -> MULTIPLICA .)
    IF              reduce using rule 31 (operador -> MULTIPLICA .)
    WHILE           reduce using rule 31 (operador -> MULTIPLICA .)
    FOR             reduce using rule 31 (operador -> MULTIPLICA .)
    LOOP            reduce using rule 31 (operador -> MULTIPLICA .)
    PRINTLN         reduce using rule 31 (operador -> MULTIPLICA .)
    ELSE            reduce using rule 31 (operador -> MULTIPLICA .)
    FIN             reduce using rule 31 (operador -> MULTIPLICA .)
    LLAVER          reduce using rule 31 (operador -> MULTIPLICA .)
    LLAVEL          reduce using rule 31 (operador -> MULTIPLICA .)
    RPAREN          reduce using rule 31 (operador -> MULTIPLICA .)
    COMA            reduce using rule 31 (operador -> MULTIPLICA .)


state 38

    (32) operador -> DIVIDE .

    INTEGER         reduce using rule 32 (operador -> DIVIDE .)
    STRING          reduce using rule 32 (operador -> DIVIDE .)
    ID              reduce using rule 32 (operador -> DIVIDE .)
    SUMA            reduce using rule 32 (operador -> DIVIDE .)
    RESTA           reduce using rule 32 (operador -> DIVIDE .)
    MULTIPLICA      reduce using rule 32 (operador -> DIVIDE .)
    DIVIDE          reduce using rule 32 (operador -> DIVIDE .)
    POTENCIA        reduce using rule 32 (operador -> DIVIDE .)
    MAIN            reduce using rule 32 (operador -> DIVIDE .)
    OPERA           reduce using rule 32 (operador -> DIVIDE .)
    MOVE            reduce using rule 32 (operador -> DIVIDE .)
    DELAY           reduce using rule 32 (operador -> DIVIDE .)
    IF              reduce using rule 32 (operador -> DIVIDE .)
    WHILE           reduce using rule 32 (operador -> DIVIDE .)
    FOR             reduce using rule 32 (operador -> DIVIDE .)
    LOOP            reduce using rule 32 (operador -> DIVIDE .)
    PRINTLN         reduce using rule 32 (operador -> DIVIDE .)
    ELSE            reduce using rule 32 (operador -> DIVIDE .)
    FIN             reduce using rule 32 (operador -> DIVIDE .)
    LLAVER          reduce using rule 32 (operador -> DIVIDE .)
    LLAVEL          reduce using rule 32 (operador -> DIVIDE .)
    RPAREN          reduce using rule 32 (operador -> DIVIDE .)
    COMA            reduce using rule 32 (operador -> DIVIDE .)


state 39

    (33) operador -> POTENCIA .

    INTEGER         reduce using rule 33 (operador -> POTENCIA .)
    STRING          reduce using rule 33 (operador -> POTENCIA .)
    ID              reduce using rule 33 (operador -> POTENCIA .)
    SUMA            reduce using rule 33 (operador -> POTENCIA .)
    RESTA           reduce using rule 33 (operador -> POTENCIA .)
    MULTIPLICA      reduce using rule 33 (operador -> POTENCIA .)
    DIVIDE          reduce using rule 33 (operador -> POTENCIA .)
    POTENCIA        reduce using rule 33 (operador -> POTENCIA .)
    MAIN            reduce using rule 33 (operador -> POTENCIA .)
    OPERA           reduce using rule 33 (operador -> POTENCIA .)
    MOVE            reduce using rule 33 (operador -> POTENCIA .)
    DELAY           reduce using rule 33 (operador -> POTENCIA .)
    IF              reduce using rule 33 (operador -> POTENCIA .)
    WHILE           reduce using rule 33 (operador -> POTENCIA .)
    FOR             reduce using rule 33 (operador -> POTENCIA .)
    LOOP            reduce using rule 33 (operador -> POTENCIA .)
    PRINTLN         reduce using rule 33 (operador -> POTENCIA .)
    ELSE            reduce using rule 33 (operador -> POTENCIA .)
    FIN             reduce using rule 33 (operador -> POTENCIA .)
    LLAVER          reduce using rule 33 (operador -> POTENCIA .)
    LLAVEL          reduce using rule 33 (operador -> POTENCIA .)
    RPAREN          reduce using rule 33 (operador -> POTENCIA .)
    COMA            reduce using rule 33 (operador -> POTENCIA .)


state 40

    (92) main -> MAIN . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 89


state 41

    (8) expresion_if -> funcion_if . expresion_if
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (93) empty -> .
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]

    funcion_if                     shift and go to state 41
    expresion_if                   shift and go to state 90
    empty                          shift and go to state 91
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 42

    (73) Opera -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 96


state 43

    (75) Move -> MOVE . LPAREN ID RPAREN PUNTOCOMA
    (76) Move_if -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 97


state 44

    (77) Delay -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (78) Delay_if -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 98


state 45

    (79) If -> IF . condicion LLAVEL cuerpo_if LLAVER
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 100
    ID              shift and go to state 101

    condicion                      shift and go to state 99
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 46

    (81) While -> WHILE . LPAREN condicion RPAREN LLAVEL cuerpo LLAVER

    LPAREN          shift and go to state 102


state 47

    (82) For -> FOR . ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    ID              shift and go to state 103


state 48

    (83) Loop -> LOOP . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 104


state 49

    (84) Println -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA
    (88) Println_if -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 105


state 50

    (80) Else -> ELSE . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 106


state 51

    (10) funcion_if -> Move_if . expresion_if
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (93) empty -> .
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]

    Move_if                        shift and go to state 51
    expresion_if                   shift and go to state 107
    funcion_if                     shift and go to state 41
    empty                          shift and go to state 91
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 52

    (11) funcion_if -> Delay_if . expresion_if
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (93) empty -> .
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]

    Delay_if                       shift and go to state 52
    expresion_if                   shift and go to state 108
    funcion_if                     shift and go to state 41
    empty                          shift and go to state 91
    Move_if                        shift and go to state 51
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 53

    (12) funcion_if -> Opera_if . expresion_if
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (93) empty -> .
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]

    Opera_if                       shift and go to state 53
    expresion_if                   shift and go to state 109
    funcion_if                     shift and go to state 41
    empty                          shift and go to state 91
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Println_if                     shift and go to state 54

state 54

    (13) funcion_if -> Println_if . expresion_if
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (93) empty -> .
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

  ! MOVE            [ reduce using rule 93 (empty -> .) ]
  ! DELAY           [ reduce using rule 93 (empty -> .) ]
  ! OPERA           [ reduce using rule 93 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 93 (empty -> .) ]

    Println_if                     shift and go to state 54
    expresion_if                   shift and go to state 110
    funcion_if                     shift and go to state 41
    empty                          shift and go to state 91
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53

state 55

    (2) code -> INICIO cuerpo FIN .

    $end            reduce using rule 2 (code -> INICIO cuerpo FIN .)


state 56

    (14) variable -> variableDef1 cuerpo .

    FIN             reduce using rule 14 (variable -> variableDef1 cuerpo .)
    LLAVER          reduce using rule 14 (variable -> variableDef1 cuerpo .)


state 57

    (15) variable -> variableDef2 cuerpo .

    FIN             reduce using rule 15 (variable -> variableDef2 cuerpo .)
    LLAVER          reduce using rule 15 (variable -> variableDef2 cuerpo .)


state 58

    (16) variable -> empty empty .
    (28) expresion -> empty empty .
    (9) expresion_if -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 16 (variable -> empty empty .)
  ! reduce/reduce conflict for LLAVER resolved using rule 16 (variable -> empty empty .)
  ! reduce/reduce conflict for FIN resolved using rule 9 (expresion_if -> empty empty .)
  ! reduce/reduce conflict for LLAVER resolved using rule 9 (expresion_if -> empty empty .)
    FIN             reduce using rule 9 (expresion_if -> empty empty .)
    LLAVER          reduce using rule 9 (expresion_if -> empty empty .)

  ! FIN             [ reduce using rule 16 (variable -> empty empty .) ]
  ! LLAVER          [ reduce using rule 16 (variable -> empty empty .) ]
  ! FIN             [ reduce using rule 28 (expresion -> empty empty .) ]
  ! LLAVER          [ reduce using rule 28 (expresion -> empty empty .) ]


state 59

    (21) expresion -> INTEGER expresion .

    FIN             reduce using rule 21 (expresion -> INTEGER expresion .)
    LLAVER          reduce using rule 21 (expresion -> INTEGER expresion .)
    INTEGER         reduce using rule 21 (expresion -> INTEGER expresion .)
    STRING          reduce using rule 21 (expresion -> INTEGER expresion .)
    ID              reduce using rule 21 (expresion -> INTEGER expresion .)
    SUMA            reduce using rule 21 (expresion -> INTEGER expresion .)
    RESTA           reduce using rule 21 (expresion -> INTEGER expresion .)
    MULTIPLICA      reduce using rule 21 (expresion -> INTEGER expresion .)
    DIVIDE          reduce using rule 21 (expresion -> INTEGER expresion .)
    POTENCIA        reduce using rule 21 (expresion -> INTEGER expresion .)
    MAIN            reduce using rule 21 (expresion -> INTEGER expresion .)
    OPERA           reduce using rule 21 (expresion -> INTEGER expresion .)
    MOVE            reduce using rule 21 (expresion -> INTEGER expresion .)
    DELAY           reduce using rule 21 (expresion -> INTEGER expresion .)
    IF              reduce using rule 21 (expresion -> INTEGER expresion .)
    WHILE           reduce using rule 21 (expresion -> INTEGER expresion .)
    FOR             reduce using rule 21 (expresion -> INTEGER expresion .)
    LOOP            reduce using rule 21 (expresion -> INTEGER expresion .)
    PRINTLN         reduce using rule 21 (expresion -> INTEGER expresion .)
    ELSE            reduce using rule 21 (expresion -> INTEGER expresion .)
    LLAVEL          reduce using rule 21 (expresion -> INTEGER expresion .)
    RPAREN          reduce using rule 21 (expresion -> INTEGER expresion .)
    COMA            reduce using rule 21 (expresion -> INTEGER expresion .)


state 60

    (49) Igual -> INTEGER IGUAL . INTEGER
    (51) Igual -> INTEGER IGUAL . ID

    INTEGER         shift and go to state 111
    ID              shift and go to state 112


state 61

    (53) Diferente -> INTEGER DIFERENTE . INTEGER
    (55) Diferente -> INTEGER DIFERENTE . ID

    INTEGER         shift and go to state 113
    ID              shift and go to state 114


state 62

    (57) Mayor -> INTEGER MAYOR . INTEGER
    (59) Mayor -> INTEGER MAYOR . ID

    INTEGER         shift and go to state 115
    ID              shift and go to state 116


state 63

    (61) Menor -> INTEGER MENOR . INTEGER
    (63) Menor -> INTEGER MENOR . ID

    INTEGER         shift and go to state 117
    ID              shift and go to state 118


state 64

    (65) Mayorigual -> INTEGER MAYORIGUAL . INTEGER
    (67) Mayorigual -> INTEGER MAYORIGUAL . ID

    INTEGER         shift and go to state 119
    ID              shift and go to state 120


state 65

    (69) Menorigual -> INTEGER MENORIGUAL . INTEGER
    (71) Menorigual -> INTEGER MENORIGUAL . ID

    INTEGER         shift and go to state 121
    ID              shift and go to state 122


state 66

    (28) expresion -> empty . empty
    (93) empty -> .

    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    INTEGER         reduce using rule 93 (empty -> .)
    STRING          reduce using rule 93 (empty -> .)
    ID              reduce using rule 93 (empty -> .)
    SUMA            reduce using rule 93 (empty -> .)
    RESTA           reduce using rule 93 (empty -> .)
    MULTIPLICA      reduce using rule 93 (empty -> .)
    DIVIDE          reduce using rule 93 (empty -> .)
    POTENCIA        reduce using rule 93 (empty -> .)
    MAIN            reduce using rule 93 (empty -> .)
    OPERA           reduce using rule 93 (empty -> .)
    MOVE            reduce using rule 93 (empty -> .)
    DELAY           reduce using rule 93 (empty -> .)
    IF              reduce using rule 93 (empty -> .)
    WHILE           reduce using rule 93 (empty -> .)
    FOR             reduce using rule 93 (empty -> .)
    LOOP            reduce using rule 93 (empty -> .)
    PRINTLN         reduce using rule 93 (empty -> .)
    ELSE            reduce using rule 93 (empty -> .)
    LLAVEL          reduce using rule 93 (empty -> .)
    RPAREN          reduce using rule 93 (empty -> .)
    COMA            reduce using rule 93 (empty -> .)

    empty                          shift and go to state 123

state 67

    (73) Opera -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 124


state 68

    (75) Move -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 125


state 69

    (77) Delay -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 126


state 70

    (84) Println -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 127


state 71

    (22) expresion -> STRING expresion .

    FIN             reduce using rule 22 (expresion -> STRING expresion .)
    LLAVER          reduce using rule 22 (expresion -> STRING expresion .)
    INTEGER         reduce using rule 22 (expresion -> STRING expresion .)
    STRING          reduce using rule 22 (expresion -> STRING expresion .)
    ID              reduce using rule 22 (expresion -> STRING expresion .)
    SUMA            reduce using rule 22 (expresion -> STRING expresion .)
    RESTA           reduce using rule 22 (expresion -> STRING expresion .)
    MULTIPLICA      reduce using rule 22 (expresion -> STRING expresion .)
    DIVIDE          reduce using rule 22 (expresion -> STRING expresion .)
    POTENCIA        reduce using rule 22 (expresion -> STRING expresion .)
    MAIN            reduce using rule 22 (expresion -> STRING expresion .)
    OPERA           reduce using rule 22 (expresion -> STRING expresion .)
    MOVE            reduce using rule 22 (expresion -> STRING expresion .)
    DELAY           reduce using rule 22 (expresion -> STRING expresion .)
    IF              reduce using rule 22 (expresion -> STRING expresion .)
    WHILE           reduce using rule 22 (expresion -> STRING expresion .)
    FOR             reduce using rule 22 (expresion -> STRING expresion .)
    LOOP            reduce using rule 22 (expresion -> STRING expresion .)
    PRINTLN         reduce using rule 22 (expresion -> STRING expresion .)
    ELSE            reduce using rule 22 (expresion -> STRING expresion .)
    LLAVEL          reduce using rule 22 (expresion -> STRING expresion .)
    RPAREN          reduce using rule 22 (expresion -> STRING expresion .)
    COMA            reduce using rule 22 (expresion -> STRING expresion .)


state 72

    (23) expresion -> funcion expresion .

    FIN             reduce using rule 23 (expresion -> funcion expresion .)
    LLAVER          reduce using rule 23 (expresion -> funcion expresion .)
    INTEGER         reduce using rule 23 (expresion -> funcion expresion .)
    STRING          reduce using rule 23 (expresion -> funcion expresion .)
    ID              reduce using rule 23 (expresion -> funcion expresion .)
    SUMA            reduce using rule 23 (expresion -> funcion expresion .)
    RESTA           reduce using rule 23 (expresion -> funcion expresion .)
    MULTIPLICA      reduce using rule 23 (expresion -> funcion expresion .)
    DIVIDE          reduce using rule 23 (expresion -> funcion expresion .)
    POTENCIA        reduce using rule 23 (expresion -> funcion expresion .)
    MAIN            reduce using rule 23 (expresion -> funcion expresion .)
    OPERA           reduce using rule 23 (expresion -> funcion expresion .)
    MOVE            reduce using rule 23 (expresion -> funcion expresion .)
    DELAY           reduce using rule 23 (expresion -> funcion expresion .)
    IF              reduce using rule 23 (expresion -> funcion expresion .)
    WHILE           reduce using rule 23 (expresion -> funcion expresion .)
    FOR             reduce using rule 23 (expresion -> funcion expresion .)
    LOOP            reduce using rule 23 (expresion -> funcion expresion .)
    PRINTLN         reduce using rule 23 (expresion -> funcion expresion .)
    ELSE            reduce using rule 23 (expresion -> funcion expresion .)
    LLAVEL          reduce using rule 23 (expresion -> funcion expresion .)
    RPAREN          reduce using rule 23 (expresion -> funcion expresion .)
    COMA            reduce using rule 23 (expresion -> funcion expresion .)


state 73

    (24) expresion -> ID expresion .

    FIN             reduce using rule 24 (expresion -> ID expresion .)
    LLAVER          reduce using rule 24 (expresion -> ID expresion .)
    INTEGER         reduce using rule 24 (expresion -> ID expresion .)
    STRING          reduce using rule 24 (expresion -> ID expresion .)
    ID              reduce using rule 24 (expresion -> ID expresion .)
    SUMA            reduce using rule 24 (expresion -> ID expresion .)
    RESTA           reduce using rule 24 (expresion -> ID expresion .)
    MULTIPLICA      reduce using rule 24 (expresion -> ID expresion .)
    DIVIDE          reduce using rule 24 (expresion -> ID expresion .)
    POTENCIA        reduce using rule 24 (expresion -> ID expresion .)
    MAIN            reduce using rule 24 (expresion -> ID expresion .)
    OPERA           reduce using rule 24 (expresion -> ID expresion .)
    MOVE            reduce using rule 24 (expresion -> ID expresion .)
    DELAY           reduce using rule 24 (expresion -> ID expresion .)
    IF              reduce using rule 24 (expresion -> ID expresion .)
    WHILE           reduce using rule 24 (expresion -> ID expresion .)
    FOR             reduce using rule 24 (expresion -> ID expresion .)
    LOOP            reduce using rule 24 (expresion -> ID expresion .)
    PRINTLN         reduce using rule 24 (expresion -> ID expresion .)
    ELSE            reduce using rule 24 (expresion -> ID expresion .)
    LLAVEL          reduce using rule 24 (expresion -> ID expresion .)
    RPAREN          reduce using rule 24 (expresion -> ID expresion .)
    COMA            reduce using rule 24 (expresion -> ID expresion .)


state 74

    (50) Igual -> ID IGUAL . ID
    (52) Igual -> ID IGUAL . INTEGER

    ID              shift and go to state 128
    INTEGER         shift and go to state 129


state 75

    (54) Diferente -> ID DIFERENTE . ID
    (56) Diferente -> ID DIFERENTE . INTEGER

    ID              shift and go to state 130
    INTEGER         shift and go to state 131


state 76

    (58) Mayor -> ID MAYOR . ID
    (60) Mayor -> ID MAYOR . INTEGER

    ID              shift and go to state 132
    INTEGER         shift and go to state 133


state 77

    (62) Menor -> ID MENOR . ID
    (64) Menor -> ID MENOR . INTEGER

    ID              shift and go to state 134
    INTEGER         shift and go to state 135


state 78

    (66) Mayorigual -> ID MAYORIGUAL . ID
    (68) Mayorigual -> ID MAYORIGUAL . INTEGER

    ID              shift and go to state 136
    INTEGER         shift and go to state 137


state 79

    (70) Menorigual -> ID MENORIGUAL . ID
    (72) Menorigual -> ID MENORIGUAL . INTEGER

    ID              shift and go to state 138
    INTEGER         shift and go to state 139


state 80

    (25) expresion -> condicion expresion .

    FIN             reduce using rule 25 (expresion -> condicion expresion .)
    LLAVER          reduce using rule 25 (expresion -> condicion expresion .)
    INTEGER         reduce using rule 25 (expresion -> condicion expresion .)
    STRING          reduce using rule 25 (expresion -> condicion expresion .)
    ID              reduce using rule 25 (expresion -> condicion expresion .)
    SUMA            reduce using rule 25 (expresion -> condicion expresion .)
    RESTA           reduce using rule 25 (expresion -> condicion expresion .)
    MULTIPLICA      reduce using rule 25 (expresion -> condicion expresion .)
    DIVIDE          reduce using rule 25 (expresion -> condicion expresion .)
    POTENCIA        reduce using rule 25 (expresion -> condicion expresion .)
    MAIN            reduce using rule 25 (expresion -> condicion expresion .)
    OPERA           reduce using rule 25 (expresion -> condicion expresion .)
    MOVE            reduce using rule 25 (expresion -> condicion expresion .)
    DELAY           reduce using rule 25 (expresion -> condicion expresion .)
    IF              reduce using rule 25 (expresion -> condicion expresion .)
    WHILE           reduce using rule 25 (expresion -> condicion expresion .)
    FOR             reduce using rule 25 (expresion -> condicion expresion .)
    LOOP            reduce using rule 25 (expresion -> condicion expresion .)
    PRINTLN         reduce using rule 25 (expresion -> condicion expresion .)
    ELSE            reduce using rule 25 (expresion -> condicion expresion .)
    LLAVEL          reduce using rule 25 (expresion -> condicion expresion .)
    RPAREN          reduce using rule 25 (expresion -> condicion expresion .)
    COMA            reduce using rule 25 (expresion -> condicion expresion .)


state 81

    (26) expresion -> operador expresion .

    FIN             reduce using rule 26 (expresion -> operador expresion .)
    LLAVER          reduce using rule 26 (expresion -> operador expresion .)
    INTEGER         reduce using rule 26 (expresion -> operador expresion .)
    STRING          reduce using rule 26 (expresion -> operador expresion .)
    ID              reduce using rule 26 (expresion -> operador expresion .)
    SUMA            reduce using rule 26 (expresion -> operador expresion .)
    RESTA           reduce using rule 26 (expresion -> operador expresion .)
    MULTIPLICA      reduce using rule 26 (expresion -> operador expresion .)
    DIVIDE          reduce using rule 26 (expresion -> operador expresion .)
    POTENCIA        reduce using rule 26 (expresion -> operador expresion .)
    MAIN            reduce using rule 26 (expresion -> operador expresion .)
    OPERA           reduce using rule 26 (expresion -> operador expresion .)
    MOVE            reduce using rule 26 (expresion -> operador expresion .)
    DELAY           reduce using rule 26 (expresion -> operador expresion .)
    IF              reduce using rule 26 (expresion -> operador expresion .)
    WHILE           reduce using rule 26 (expresion -> operador expresion .)
    FOR             reduce using rule 26 (expresion -> operador expresion .)
    LOOP            reduce using rule 26 (expresion -> operador expresion .)
    PRINTLN         reduce using rule 26 (expresion -> operador expresion .)
    ELSE            reduce using rule 26 (expresion -> operador expresion .)
    LLAVEL          reduce using rule 26 (expresion -> operador expresion .)
    RPAREN          reduce using rule 26 (expresion -> operador expresion .)
    COMA            reduce using rule 26 (expresion -> operador expresion .)


state 82

    (17) variableDef1 -> LET ID . PUNTOCOMA
    (18) variableDef2 -> LET ID . EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> LET ID . EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> LET ID . EQUAL STRING PUNTOCOMA

    PUNTOCOMA       shift and go to state 140
    EQUAL           shift and go to state 141


state 83

    (43) condicion -> Igual expresion .

    INTEGER         reduce using rule 43 (condicion -> Igual expresion .)
    STRING          reduce using rule 43 (condicion -> Igual expresion .)
    ID              reduce using rule 43 (condicion -> Igual expresion .)
    SUMA            reduce using rule 43 (condicion -> Igual expresion .)
    RESTA           reduce using rule 43 (condicion -> Igual expresion .)
    MULTIPLICA      reduce using rule 43 (condicion -> Igual expresion .)
    DIVIDE          reduce using rule 43 (condicion -> Igual expresion .)
    POTENCIA        reduce using rule 43 (condicion -> Igual expresion .)
    MAIN            reduce using rule 43 (condicion -> Igual expresion .)
    OPERA           reduce using rule 43 (condicion -> Igual expresion .)
    MOVE            reduce using rule 43 (condicion -> Igual expresion .)
    DELAY           reduce using rule 43 (condicion -> Igual expresion .)
    IF              reduce using rule 43 (condicion -> Igual expresion .)
    WHILE           reduce using rule 43 (condicion -> Igual expresion .)
    FOR             reduce using rule 43 (condicion -> Igual expresion .)
    LOOP            reduce using rule 43 (condicion -> Igual expresion .)
    PRINTLN         reduce using rule 43 (condicion -> Igual expresion .)
    ELSE            reduce using rule 43 (condicion -> Igual expresion .)
    FIN             reduce using rule 43 (condicion -> Igual expresion .)
    LLAVER          reduce using rule 43 (condicion -> Igual expresion .)
    LLAVEL          reduce using rule 43 (condicion -> Igual expresion .)
    RPAREN          reduce using rule 43 (condicion -> Igual expresion .)
    COMA            reduce using rule 43 (condicion -> Igual expresion .)


state 84

    (44) condicion -> Diferente expresion .

    INTEGER         reduce using rule 44 (condicion -> Diferente expresion .)
    STRING          reduce using rule 44 (condicion -> Diferente expresion .)
    ID              reduce using rule 44 (condicion -> Diferente expresion .)
    SUMA            reduce using rule 44 (condicion -> Diferente expresion .)
    RESTA           reduce using rule 44 (condicion -> Diferente expresion .)
    MULTIPLICA      reduce using rule 44 (condicion -> Diferente expresion .)
    DIVIDE          reduce using rule 44 (condicion -> Diferente expresion .)
    POTENCIA        reduce using rule 44 (condicion -> Diferente expresion .)
    MAIN            reduce using rule 44 (condicion -> Diferente expresion .)
    OPERA           reduce using rule 44 (condicion -> Diferente expresion .)
    MOVE            reduce using rule 44 (condicion -> Diferente expresion .)
    DELAY           reduce using rule 44 (condicion -> Diferente expresion .)
    IF              reduce using rule 44 (condicion -> Diferente expresion .)
    WHILE           reduce using rule 44 (condicion -> Diferente expresion .)
    FOR             reduce using rule 44 (condicion -> Diferente expresion .)
    LOOP            reduce using rule 44 (condicion -> Diferente expresion .)
    PRINTLN         reduce using rule 44 (condicion -> Diferente expresion .)
    ELSE            reduce using rule 44 (condicion -> Diferente expresion .)
    FIN             reduce using rule 44 (condicion -> Diferente expresion .)
    LLAVER          reduce using rule 44 (condicion -> Diferente expresion .)
    LLAVEL          reduce using rule 44 (condicion -> Diferente expresion .)
    RPAREN          reduce using rule 44 (condicion -> Diferente expresion .)
    COMA            reduce using rule 44 (condicion -> Diferente expresion .)


state 85

    (45) condicion -> Mayor expresion .

    INTEGER         reduce using rule 45 (condicion -> Mayor expresion .)
    STRING          reduce using rule 45 (condicion -> Mayor expresion .)
    ID              reduce using rule 45 (condicion -> Mayor expresion .)
    SUMA            reduce using rule 45 (condicion -> Mayor expresion .)
    RESTA           reduce using rule 45 (condicion -> Mayor expresion .)
    MULTIPLICA      reduce using rule 45 (condicion -> Mayor expresion .)
    DIVIDE          reduce using rule 45 (condicion -> Mayor expresion .)
    POTENCIA        reduce using rule 45 (condicion -> Mayor expresion .)
    MAIN            reduce using rule 45 (condicion -> Mayor expresion .)
    OPERA           reduce using rule 45 (condicion -> Mayor expresion .)
    MOVE            reduce using rule 45 (condicion -> Mayor expresion .)
    DELAY           reduce using rule 45 (condicion -> Mayor expresion .)
    IF              reduce using rule 45 (condicion -> Mayor expresion .)
    WHILE           reduce using rule 45 (condicion -> Mayor expresion .)
    FOR             reduce using rule 45 (condicion -> Mayor expresion .)
    LOOP            reduce using rule 45 (condicion -> Mayor expresion .)
    PRINTLN         reduce using rule 45 (condicion -> Mayor expresion .)
    ELSE            reduce using rule 45 (condicion -> Mayor expresion .)
    FIN             reduce using rule 45 (condicion -> Mayor expresion .)
    LLAVER          reduce using rule 45 (condicion -> Mayor expresion .)
    LLAVEL          reduce using rule 45 (condicion -> Mayor expresion .)
    RPAREN          reduce using rule 45 (condicion -> Mayor expresion .)
    COMA            reduce using rule 45 (condicion -> Mayor expresion .)


state 86

    (46) condicion -> Menor expresion .

    INTEGER         reduce using rule 46 (condicion -> Menor expresion .)
    STRING          reduce using rule 46 (condicion -> Menor expresion .)
    ID              reduce using rule 46 (condicion -> Menor expresion .)
    SUMA            reduce using rule 46 (condicion -> Menor expresion .)
    RESTA           reduce using rule 46 (condicion -> Menor expresion .)
    MULTIPLICA      reduce using rule 46 (condicion -> Menor expresion .)
    DIVIDE          reduce using rule 46 (condicion -> Menor expresion .)
    POTENCIA        reduce using rule 46 (condicion -> Menor expresion .)
    MAIN            reduce using rule 46 (condicion -> Menor expresion .)
    OPERA           reduce using rule 46 (condicion -> Menor expresion .)
    MOVE            reduce using rule 46 (condicion -> Menor expresion .)
    DELAY           reduce using rule 46 (condicion -> Menor expresion .)
    IF              reduce using rule 46 (condicion -> Menor expresion .)
    WHILE           reduce using rule 46 (condicion -> Menor expresion .)
    FOR             reduce using rule 46 (condicion -> Menor expresion .)
    LOOP            reduce using rule 46 (condicion -> Menor expresion .)
    PRINTLN         reduce using rule 46 (condicion -> Menor expresion .)
    ELSE            reduce using rule 46 (condicion -> Menor expresion .)
    FIN             reduce using rule 46 (condicion -> Menor expresion .)
    LLAVER          reduce using rule 46 (condicion -> Menor expresion .)
    LLAVEL          reduce using rule 46 (condicion -> Menor expresion .)
    RPAREN          reduce using rule 46 (condicion -> Menor expresion .)
    COMA            reduce using rule 46 (condicion -> Menor expresion .)


state 87

    (47) condicion -> Mayorigual expresion .

    INTEGER         reduce using rule 47 (condicion -> Mayorigual expresion .)
    STRING          reduce using rule 47 (condicion -> Mayorigual expresion .)
    ID              reduce using rule 47 (condicion -> Mayorigual expresion .)
    SUMA            reduce using rule 47 (condicion -> Mayorigual expresion .)
    RESTA           reduce using rule 47 (condicion -> Mayorigual expresion .)
    MULTIPLICA      reduce using rule 47 (condicion -> Mayorigual expresion .)
    DIVIDE          reduce using rule 47 (condicion -> Mayorigual expresion .)
    POTENCIA        reduce using rule 47 (condicion -> Mayorigual expresion .)
    MAIN            reduce using rule 47 (condicion -> Mayorigual expresion .)
    OPERA           reduce using rule 47 (condicion -> Mayorigual expresion .)
    MOVE            reduce using rule 47 (condicion -> Mayorigual expresion .)
    DELAY           reduce using rule 47 (condicion -> Mayorigual expresion .)
    IF              reduce using rule 47 (condicion -> Mayorigual expresion .)
    WHILE           reduce using rule 47 (condicion -> Mayorigual expresion .)
    FOR             reduce using rule 47 (condicion -> Mayorigual expresion .)
    LOOP            reduce using rule 47 (condicion -> Mayorigual expresion .)
    PRINTLN         reduce using rule 47 (condicion -> Mayorigual expresion .)
    ELSE            reduce using rule 47 (condicion -> Mayorigual expresion .)
    FIN             reduce using rule 47 (condicion -> Mayorigual expresion .)
    LLAVER          reduce using rule 47 (condicion -> Mayorigual expresion .)
    LLAVEL          reduce using rule 47 (condicion -> Mayorigual expresion .)
    RPAREN          reduce using rule 47 (condicion -> Mayorigual expresion .)
    COMA            reduce using rule 47 (condicion -> Mayorigual expresion .)


state 88

    (48) condicion -> Menorigual expresion .

    INTEGER         reduce using rule 48 (condicion -> Menorigual expresion .)
    STRING          reduce using rule 48 (condicion -> Menorigual expresion .)
    ID              reduce using rule 48 (condicion -> Menorigual expresion .)
    SUMA            reduce using rule 48 (condicion -> Menorigual expresion .)
    RESTA           reduce using rule 48 (condicion -> Menorigual expresion .)
    MULTIPLICA      reduce using rule 48 (condicion -> Menorigual expresion .)
    DIVIDE          reduce using rule 48 (condicion -> Menorigual expresion .)
    POTENCIA        reduce using rule 48 (condicion -> Menorigual expresion .)
    MAIN            reduce using rule 48 (condicion -> Menorigual expresion .)
    OPERA           reduce using rule 48 (condicion -> Menorigual expresion .)
    MOVE            reduce using rule 48 (condicion -> Menorigual expresion .)
    DELAY           reduce using rule 48 (condicion -> Menorigual expresion .)
    IF              reduce using rule 48 (condicion -> Menorigual expresion .)
    WHILE           reduce using rule 48 (condicion -> Menorigual expresion .)
    FOR             reduce using rule 48 (condicion -> Menorigual expresion .)
    LOOP            reduce using rule 48 (condicion -> Menorigual expresion .)
    PRINTLN         reduce using rule 48 (condicion -> Menorigual expresion .)
    ELSE            reduce using rule 48 (condicion -> Menorigual expresion .)
    FIN             reduce using rule 48 (condicion -> Menorigual expresion .)
    LLAVER          reduce using rule 48 (condicion -> Menorigual expresion .)
    LLAVEL          reduce using rule 48 (condicion -> Menorigual expresion .)
    RPAREN          reduce using rule 48 (condicion -> Menorigual expresion .)
    COMA            reduce using rule 48 (condicion -> Menorigual expresion .)


state 89

    (92) main -> MAIN LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 142


state 90

    (8) expresion_if -> funcion_if expresion_if .

    FIN             reduce using rule 8 (expresion_if -> funcion_if expresion_if .)
    LLAVER          reduce using rule 8 (expresion_if -> funcion_if expresion_if .)
    MOVE            reduce using rule 8 (expresion_if -> funcion_if expresion_if .)
    DELAY           reduce using rule 8 (expresion_if -> funcion_if expresion_if .)
    OPERA           reduce using rule 8 (expresion_if -> funcion_if expresion_if .)
    PRINTLN         reduce using rule 8 (expresion_if -> funcion_if expresion_if .)


state 91

    (9) expresion_if -> empty . empty
    (93) empty -> .

    FIN             reduce using rule 93 (empty -> .)
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            reduce using rule 93 (empty -> .)
    DELAY           reduce using rule 93 (empty -> .)
    OPERA           reduce using rule 93 (empty -> .)
    PRINTLN         reduce using rule 93 (empty -> .)

    empty                          shift and go to state 143

state 92

    (76) Move_if -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 144


state 93

    (78) Delay_if -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 145


state 94

    (74) Opera_if -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 146


state 95

    (88) Println_if -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 147


state 96

    (73) Opera -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 148

state 97

    (75) Move -> MOVE LPAREN . ID RPAREN PUNTOCOMA
    (76) Move_if -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 149


state 98

    (77) Delay -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA
    (78) Delay_if -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 150


state 99

    (79) If -> IF condicion . LLAVEL cuerpo_if LLAVER

    LLAVEL          shift and go to state 151


state 100

    (49) Igual -> INTEGER . IGUAL INTEGER
    (51) Igual -> INTEGER . IGUAL ID
    (53) Diferente -> INTEGER . DIFERENTE INTEGER
    (55) Diferente -> INTEGER . DIFERENTE ID
    (57) Mayor -> INTEGER . MAYOR INTEGER
    (59) Mayor -> INTEGER . MAYOR ID
    (61) Menor -> INTEGER . MENOR INTEGER
    (63) Menor -> INTEGER . MENOR ID
    (65) Mayorigual -> INTEGER . MAYORIGUAL INTEGER
    (67) Mayorigual -> INTEGER . MAYORIGUAL ID
    (69) Menorigual -> INTEGER . MENORIGUAL INTEGER
    (71) Menorigual -> INTEGER . MENORIGUAL ID

    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65


state 101

    (50) Igual -> ID . IGUAL ID
    (52) Igual -> ID . IGUAL INTEGER
    (54) Diferente -> ID . DIFERENTE ID
    (56) Diferente -> ID . DIFERENTE INTEGER
    (58) Mayor -> ID . MAYOR ID
    (60) Mayor -> ID . MAYOR INTEGER
    (62) Menor -> ID . MENOR ID
    (64) Menor -> ID . MENOR INTEGER
    (66) Mayorigual -> ID . MAYORIGUAL ID
    (68) Mayorigual -> ID . MAYORIGUAL INTEGER
    (70) Menorigual -> ID . MENORIGUAL ID
    (72) Menorigual -> ID . MENORIGUAL INTEGER

    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MAYOR           shift and go to state 76
    MENOR           shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79


state 102

    (81) While -> WHILE LPAREN . condicion RPAREN LLAVEL cuerpo LLAVER
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 100
    ID              shift and go to state 101

    condicion                      shift and go to state 152
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 103

    (82) For -> FOR ID . IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    IN              shift and go to state 153


state 104

    (83) Loop -> LOOP LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 154
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 105

    (84) Println -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (85) Println -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (86) Println -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (87) Println -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA
    (88) Println_if -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (89) Println_if -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (91) Println_if -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 155
    INTEGER         shift and go to state 156
    ID              shift and go to state 157
    BOOLEAN         shift and go to state 158


state 106

    (80) Else -> ELSE LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 159
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 107

    (10) funcion_if -> Move_if expresion_if .

    MOVE            reduce using rule 10 (funcion_if -> Move_if expresion_if .)
    DELAY           reduce using rule 10 (funcion_if -> Move_if expresion_if .)
    OPERA           reduce using rule 10 (funcion_if -> Move_if expresion_if .)
    PRINTLN         reduce using rule 10 (funcion_if -> Move_if expresion_if .)
    FIN             reduce using rule 10 (funcion_if -> Move_if expresion_if .)
    LLAVER          reduce using rule 10 (funcion_if -> Move_if expresion_if .)


state 108

    (11) funcion_if -> Delay_if expresion_if .

    MOVE            reduce using rule 11 (funcion_if -> Delay_if expresion_if .)
    DELAY           reduce using rule 11 (funcion_if -> Delay_if expresion_if .)
    OPERA           reduce using rule 11 (funcion_if -> Delay_if expresion_if .)
    PRINTLN         reduce using rule 11 (funcion_if -> Delay_if expresion_if .)
    FIN             reduce using rule 11 (funcion_if -> Delay_if expresion_if .)
    LLAVER          reduce using rule 11 (funcion_if -> Delay_if expresion_if .)


state 109

    (12) funcion_if -> Opera_if expresion_if .

    MOVE            reduce using rule 12 (funcion_if -> Opera_if expresion_if .)
    DELAY           reduce using rule 12 (funcion_if -> Opera_if expresion_if .)
    OPERA           reduce using rule 12 (funcion_if -> Opera_if expresion_if .)
    PRINTLN         reduce using rule 12 (funcion_if -> Opera_if expresion_if .)
    FIN             reduce using rule 12 (funcion_if -> Opera_if expresion_if .)
    LLAVER          reduce using rule 12 (funcion_if -> Opera_if expresion_if .)


state 110

    (13) funcion_if -> Println_if expresion_if .

    MOVE            reduce using rule 13 (funcion_if -> Println_if expresion_if .)
    DELAY           reduce using rule 13 (funcion_if -> Println_if expresion_if .)
    OPERA           reduce using rule 13 (funcion_if -> Println_if expresion_if .)
    PRINTLN         reduce using rule 13 (funcion_if -> Println_if expresion_if .)
    FIN             reduce using rule 13 (funcion_if -> Println_if expresion_if .)
    LLAVER          reduce using rule 13 (funcion_if -> Println_if expresion_if .)


state 111

    (49) Igual -> INTEGER IGUAL INTEGER .

    INTEGER         reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    STRING          reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    ID              reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    SUMA            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    RESTA           reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    MULTIPLICA      reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    DIVIDE          reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    POTENCIA        reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    MAIN            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    OPERA           reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    MOVE            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    DELAY           reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    IF              reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    WHILE           reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    FOR             reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    LOOP            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    PRINTLN         reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    ELSE            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    FIN             reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    LLAVER          reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    LLAVEL          reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    RPAREN          reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)
    COMA            reduce using rule 49 (Igual -> INTEGER IGUAL INTEGER .)


state 112

    (51) Igual -> INTEGER IGUAL ID .

    INTEGER         reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    STRING          reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    ID              reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    SUMA            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    RESTA           reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    MULTIPLICA      reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    DIVIDE          reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    POTENCIA        reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    MAIN            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    OPERA           reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    MOVE            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    DELAY           reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    IF              reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    WHILE           reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    FOR             reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    LOOP            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    PRINTLN         reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    ELSE            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    FIN             reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    LLAVER          reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    LLAVEL          reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    RPAREN          reduce using rule 51 (Igual -> INTEGER IGUAL ID .)
    COMA            reduce using rule 51 (Igual -> INTEGER IGUAL ID .)


state 113

    (53) Diferente -> INTEGER DIFERENTE INTEGER .

    INTEGER         reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    STRING          reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    ID              reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    SUMA            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    RESTA           reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MULTIPLICA      reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    DIVIDE          reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    POTENCIA        reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MAIN            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    OPERA           reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MOVE            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    DELAY           reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    IF              reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    WHILE           reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    FOR             reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LOOP            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    PRINTLN         reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    ELSE            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    FIN             reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LLAVER          reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LLAVEL          reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    RPAREN          reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)
    COMA            reduce using rule 53 (Diferente -> INTEGER DIFERENTE INTEGER .)


state 114

    (55) Diferente -> INTEGER DIFERENTE ID .

    INTEGER         reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    STRING          reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    ID              reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    SUMA            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    RESTA           reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    MULTIPLICA      reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    DIVIDE          reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    POTENCIA        reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    MAIN            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    OPERA           reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    MOVE            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    DELAY           reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    IF              reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    WHILE           reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    FOR             reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    LOOP            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    PRINTLN         reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    ELSE            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    FIN             reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    LLAVER          reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    LLAVEL          reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    RPAREN          reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)
    COMA            reduce using rule 55 (Diferente -> INTEGER DIFERENTE ID .)


state 115

    (57) Mayor -> INTEGER MAYOR INTEGER .

    INTEGER         reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    STRING          reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    ID              reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    SUMA            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    RESTA           reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    MULTIPLICA      reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    DIVIDE          reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    POTENCIA        reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    MAIN            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    OPERA           reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    MOVE            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    DELAY           reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    IF              reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    WHILE           reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    FOR             reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    LOOP            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    PRINTLN         reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    ELSE            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    FIN             reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    LLAVER          reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    LLAVEL          reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    RPAREN          reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)
    COMA            reduce using rule 57 (Mayor -> INTEGER MAYOR INTEGER .)


state 116

    (59) Mayor -> INTEGER MAYOR ID .

    INTEGER         reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    STRING          reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    ID              reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    SUMA            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    RESTA           reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    MULTIPLICA      reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    DIVIDE          reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    POTENCIA        reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    MAIN            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    OPERA           reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    MOVE            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    DELAY           reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    IF              reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    WHILE           reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    FOR             reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    LOOP            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    PRINTLN         reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    ELSE            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    FIN             reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    LLAVER          reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    LLAVEL          reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    RPAREN          reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)
    COMA            reduce using rule 59 (Mayor -> INTEGER MAYOR ID .)


state 117

    (61) Menor -> INTEGER MENOR INTEGER .

    INTEGER         reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    STRING          reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    ID              reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    SUMA            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    RESTA           reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    MULTIPLICA      reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    DIVIDE          reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    POTENCIA        reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    MAIN            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    OPERA           reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    MOVE            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    DELAY           reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    IF              reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    WHILE           reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    FOR             reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    LOOP            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    PRINTLN         reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    ELSE            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    FIN             reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    LLAVER          reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    LLAVEL          reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    RPAREN          reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)
    COMA            reduce using rule 61 (Menor -> INTEGER MENOR INTEGER .)


state 118

    (63) Menor -> INTEGER MENOR ID .

    INTEGER         reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    STRING          reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    ID              reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    SUMA            reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    RESTA           reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    MULTIPLICA      reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    DIVIDE          reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    POTENCIA        reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    MAIN            reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    OPERA           reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    MOVE            reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    DELAY           reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    IF              reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    WHILE           reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    FOR             reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    LOOP            reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    PRINTLN         reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    ELSE            reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    FIN             reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    LLAVER          reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    LLAVEL          reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    RPAREN          reduce using rule 63 (Menor -> INTEGER MENOR ID .)
    COMA            reduce using rule 63 (Menor -> INTEGER MENOR ID .)


state 119

    (65) Mayorigual -> INTEGER MAYORIGUAL INTEGER .

    INTEGER         reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    STRING          reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    ID              reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    SUMA            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    RESTA           reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    DIVIDE          reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    POTENCIA        reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MAIN            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    OPERA           reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MOVE            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    DELAY           reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    IF              reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    WHILE           reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    FOR             reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LOOP            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    PRINTLN         reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    ELSE            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    FIN             reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LLAVER          reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LLAVEL          reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    RPAREN          reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    COMA            reduce using rule 65 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)


state 120

    (67) Mayorigual -> INTEGER MAYORIGUAL ID .

    INTEGER         reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    STRING          reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    ID              reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    SUMA            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    RESTA           reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MULTIPLICA      reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    DIVIDE          reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    POTENCIA        reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MAIN            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    OPERA           reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MOVE            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    DELAY           reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    IF              reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    WHILE           reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    FOR             reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LOOP            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    PRINTLN         reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    ELSE            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    FIN             reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LLAVER          reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LLAVEL          reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    RPAREN          reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    COMA            reduce using rule 67 (Mayorigual -> INTEGER MAYORIGUAL ID .)


state 121

    (69) Menorigual -> INTEGER MENORIGUAL INTEGER .

    INTEGER         reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    STRING          reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    ID              reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    SUMA            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    RESTA           reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    DIVIDE          reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    POTENCIA        reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MAIN            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    OPERA           reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MOVE            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    DELAY           reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    IF              reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    WHILE           reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    FOR             reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LOOP            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    PRINTLN         reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    ELSE            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    FIN             reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LLAVER          reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LLAVEL          reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    RPAREN          reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    COMA            reduce using rule 69 (Menorigual -> INTEGER MENORIGUAL INTEGER .)


state 122

    (71) Menorigual -> INTEGER MENORIGUAL ID .

    INTEGER         reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    STRING          reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    ID              reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    SUMA            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    RESTA           reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    MULTIPLICA      reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    DIVIDE          reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    POTENCIA        reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    MAIN            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    OPERA           reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    MOVE            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    DELAY           reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    IF              reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    WHILE           reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    FOR             reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    LOOP            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    PRINTLN         reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    ELSE            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    FIN             reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    LLAVER          reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    LLAVEL          reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    RPAREN          reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)
    COMA            reduce using rule 71 (Menorigual -> INTEGER MENORIGUAL ID .)


state 123

    (28) expresion -> empty empty .

    FIN             reduce using rule 28 (expresion -> empty empty .)
    LLAVER          reduce using rule 28 (expresion -> empty empty .)
    INTEGER         reduce using rule 28 (expresion -> empty empty .)
    STRING          reduce using rule 28 (expresion -> empty empty .)
    ID              reduce using rule 28 (expresion -> empty empty .)
    SUMA            reduce using rule 28 (expresion -> empty empty .)
    RESTA           reduce using rule 28 (expresion -> empty empty .)
    MULTIPLICA      reduce using rule 28 (expresion -> empty empty .)
    DIVIDE          reduce using rule 28 (expresion -> empty empty .)
    POTENCIA        reduce using rule 28 (expresion -> empty empty .)
    MAIN            reduce using rule 28 (expresion -> empty empty .)
    OPERA           reduce using rule 28 (expresion -> empty empty .)
    MOVE            reduce using rule 28 (expresion -> empty empty .)
    DELAY           reduce using rule 28 (expresion -> empty empty .)
    IF              reduce using rule 28 (expresion -> empty empty .)
    WHILE           reduce using rule 28 (expresion -> empty empty .)
    FOR             reduce using rule 28 (expresion -> empty empty .)
    LOOP            reduce using rule 28 (expresion -> empty empty .)
    PRINTLN         reduce using rule 28 (expresion -> empty empty .)
    ELSE            reduce using rule 28 (expresion -> empty empty .)
    LLAVEL          reduce using rule 28 (expresion -> empty empty .)
    RPAREN          reduce using rule 28 (expresion -> empty empty .)
    COMA            reduce using rule 28 (expresion -> empty empty .)


state 124

    (73) Opera -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 160

state 125

    (75) Move -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 161


state 126

    (77) Delay -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 162


state 127

    (84) Println -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (85) Println -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (86) Println -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (87) Println -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 163
    INTEGER         shift and go to state 164
    ID              shift and go to state 165
    BOOLEAN         shift and go to state 166


state 128

    (50) Igual -> ID IGUAL ID .

    INTEGER         reduce using rule 50 (Igual -> ID IGUAL ID .)
    STRING          reduce using rule 50 (Igual -> ID IGUAL ID .)
    ID              reduce using rule 50 (Igual -> ID IGUAL ID .)
    SUMA            reduce using rule 50 (Igual -> ID IGUAL ID .)
    RESTA           reduce using rule 50 (Igual -> ID IGUAL ID .)
    MULTIPLICA      reduce using rule 50 (Igual -> ID IGUAL ID .)
    DIVIDE          reduce using rule 50 (Igual -> ID IGUAL ID .)
    POTENCIA        reduce using rule 50 (Igual -> ID IGUAL ID .)
    MAIN            reduce using rule 50 (Igual -> ID IGUAL ID .)
    OPERA           reduce using rule 50 (Igual -> ID IGUAL ID .)
    MOVE            reduce using rule 50 (Igual -> ID IGUAL ID .)
    DELAY           reduce using rule 50 (Igual -> ID IGUAL ID .)
    IF              reduce using rule 50 (Igual -> ID IGUAL ID .)
    WHILE           reduce using rule 50 (Igual -> ID IGUAL ID .)
    FOR             reduce using rule 50 (Igual -> ID IGUAL ID .)
    LOOP            reduce using rule 50 (Igual -> ID IGUAL ID .)
    PRINTLN         reduce using rule 50 (Igual -> ID IGUAL ID .)
    ELSE            reduce using rule 50 (Igual -> ID IGUAL ID .)
    FIN             reduce using rule 50 (Igual -> ID IGUAL ID .)
    LLAVER          reduce using rule 50 (Igual -> ID IGUAL ID .)
    LLAVEL          reduce using rule 50 (Igual -> ID IGUAL ID .)
    RPAREN          reduce using rule 50 (Igual -> ID IGUAL ID .)
    COMA            reduce using rule 50 (Igual -> ID IGUAL ID .)


state 129

    (52) Igual -> ID IGUAL INTEGER .

    INTEGER         reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    STRING          reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    ID              reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    SUMA            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    RESTA           reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    MULTIPLICA      reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    DIVIDE          reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    POTENCIA        reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    MAIN            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    OPERA           reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    MOVE            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    DELAY           reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    IF              reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    WHILE           reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    FOR             reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    LOOP            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    PRINTLN         reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    ELSE            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    FIN             reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    LLAVER          reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    LLAVEL          reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    RPAREN          reduce using rule 52 (Igual -> ID IGUAL INTEGER .)
    COMA            reduce using rule 52 (Igual -> ID IGUAL INTEGER .)


state 130

    (54) Diferente -> ID DIFERENTE ID .

    INTEGER         reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    STRING          reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    ID              reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    SUMA            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    RESTA           reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    MULTIPLICA      reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    DIVIDE          reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    POTENCIA        reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    MAIN            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    OPERA           reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    MOVE            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    DELAY           reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    IF              reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    WHILE           reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    FOR             reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    LOOP            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    PRINTLN         reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    ELSE            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    FIN             reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    LLAVER          reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    LLAVEL          reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    RPAREN          reduce using rule 54 (Diferente -> ID DIFERENTE ID .)
    COMA            reduce using rule 54 (Diferente -> ID DIFERENTE ID .)


state 131

    (56) Diferente -> ID DIFERENTE INTEGER .

    INTEGER         reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    STRING          reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    ID              reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    SUMA            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    RESTA           reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    MULTIPLICA      reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    DIVIDE          reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    POTENCIA        reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    MAIN            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    OPERA           reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    MOVE            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    DELAY           reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    IF              reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    WHILE           reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    FOR             reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    LOOP            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    PRINTLN         reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    ELSE            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    FIN             reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    LLAVER          reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    LLAVEL          reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    RPAREN          reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)
    COMA            reduce using rule 56 (Diferente -> ID DIFERENTE INTEGER .)


state 132

    (58) Mayor -> ID MAYOR ID .

    INTEGER         reduce using rule 58 (Mayor -> ID MAYOR ID .)
    STRING          reduce using rule 58 (Mayor -> ID MAYOR ID .)
    ID              reduce using rule 58 (Mayor -> ID MAYOR ID .)
    SUMA            reduce using rule 58 (Mayor -> ID MAYOR ID .)
    RESTA           reduce using rule 58 (Mayor -> ID MAYOR ID .)
    MULTIPLICA      reduce using rule 58 (Mayor -> ID MAYOR ID .)
    DIVIDE          reduce using rule 58 (Mayor -> ID MAYOR ID .)
    POTENCIA        reduce using rule 58 (Mayor -> ID MAYOR ID .)
    MAIN            reduce using rule 58 (Mayor -> ID MAYOR ID .)
    OPERA           reduce using rule 58 (Mayor -> ID MAYOR ID .)
    MOVE            reduce using rule 58 (Mayor -> ID MAYOR ID .)
    DELAY           reduce using rule 58 (Mayor -> ID MAYOR ID .)
    IF              reduce using rule 58 (Mayor -> ID MAYOR ID .)
    WHILE           reduce using rule 58 (Mayor -> ID MAYOR ID .)
    FOR             reduce using rule 58 (Mayor -> ID MAYOR ID .)
    LOOP            reduce using rule 58 (Mayor -> ID MAYOR ID .)
    PRINTLN         reduce using rule 58 (Mayor -> ID MAYOR ID .)
    ELSE            reduce using rule 58 (Mayor -> ID MAYOR ID .)
    FIN             reduce using rule 58 (Mayor -> ID MAYOR ID .)
    LLAVER          reduce using rule 58 (Mayor -> ID MAYOR ID .)
    LLAVEL          reduce using rule 58 (Mayor -> ID MAYOR ID .)
    RPAREN          reduce using rule 58 (Mayor -> ID MAYOR ID .)
    COMA            reduce using rule 58 (Mayor -> ID MAYOR ID .)


state 133

    (60) Mayor -> ID MAYOR INTEGER .

    INTEGER         reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    STRING          reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    ID              reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    SUMA            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    RESTA           reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    MULTIPLICA      reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    DIVIDE          reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    POTENCIA        reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    MAIN            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    OPERA           reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    MOVE            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    DELAY           reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    IF              reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    WHILE           reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    FOR             reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    LOOP            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    PRINTLN         reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    ELSE            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    FIN             reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    LLAVER          reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    LLAVEL          reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    RPAREN          reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)
    COMA            reduce using rule 60 (Mayor -> ID MAYOR INTEGER .)


state 134

    (62) Menor -> ID MENOR ID .

    INTEGER         reduce using rule 62 (Menor -> ID MENOR ID .)
    STRING          reduce using rule 62 (Menor -> ID MENOR ID .)
    ID              reduce using rule 62 (Menor -> ID MENOR ID .)
    SUMA            reduce using rule 62 (Menor -> ID MENOR ID .)
    RESTA           reduce using rule 62 (Menor -> ID MENOR ID .)
    MULTIPLICA      reduce using rule 62 (Menor -> ID MENOR ID .)
    DIVIDE          reduce using rule 62 (Menor -> ID MENOR ID .)
    POTENCIA        reduce using rule 62 (Menor -> ID MENOR ID .)
    MAIN            reduce using rule 62 (Menor -> ID MENOR ID .)
    OPERA           reduce using rule 62 (Menor -> ID MENOR ID .)
    MOVE            reduce using rule 62 (Menor -> ID MENOR ID .)
    DELAY           reduce using rule 62 (Menor -> ID MENOR ID .)
    IF              reduce using rule 62 (Menor -> ID MENOR ID .)
    WHILE           reduce using rule 62 (Menor -> ID MENOR ID .)
    FOR             reduce using rule 62 (Menor -> ID MENOR ID .)
    LOOP            reduce using rule 62 (Menor -> ID MENOR ID .)
    PRINTLN         reduce using rule 62 (Menor -> ID MENOR ID .)
    ELSE            reduce using rule 62 (Menor -> ID MENOR ID .)
    FIN             reduce using rule 62 (Menor -> ID MENOR ID .)
    LLAVER          reduce using rule 62 (Menor -> ID MENOR ID .)
    LLAVEL          reduce using rule 62 (Menor -> ID MENOR ID .)
    RPAREN          reduce using rule 62 (Menor -> ID MENOR ID .)
    COMA            reduce using rule 62 (Menor -> ID MENOR ID .)


state 135

    (64) Menor -> ID MENOR INTEGER .

    INTEGER         reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    STRING          reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    ID              reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    SUMA            reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    RESTA           reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    MULTIPLICA      reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    DIVIDE          reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    POTENCIA        reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    MAIN            reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    OPERA           reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    MOVE            reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    DELAY           reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    IF              reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    WHILE           reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    FOR             reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    LOOP            reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    PRINTLN         reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    ELSE            reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    FIN             reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    LLAVER          reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    LLAVEL          reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    RPAREN          reduce using rule 64 (Menor -> ID MENOR INTEGER .)
    COMA            reduce using rule 64 (Menor -> ID MENOR INTEGER .)


state 136

    (66) Mayorigual -> ID MAYORIGUAL ID .

    INTEGER         reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    STRING          reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    ID              reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    SUMA            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    RESTA           reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    MULTIPLICA      reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    DIVIDE          reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    POTENCIA        reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    MAIN            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    OPERA           reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    MOVE            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    DELAY           reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    IF              reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    WHILE           reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    FOR             reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    LOOP            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    PRINTLN         reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    ELSE            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    FIN             reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    LLAVER          reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    LLAVEL          reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    RPAREN          reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)
    COMA            reduce using rule 66 (Mayorigual -> ID MAYORIGUAL ID .)


state 137

    (68) Mayorigual -> ID MAYORIGUAL INTEGER .

    INTEGER         reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    STRING          reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    ID              reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    SUMA            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    RESTA           reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    DIVIDE          reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    POTENCIA        reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MAIN            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    OPERA           reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MOVE            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    DELAY           reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    IF              reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    WHILE           reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    FOR             reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LOOP            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    PRINTLN         reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    ELSE            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    FIN             reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LLAVER          reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LLAVEL          reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    RPAREN          reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    COMA            reduce using rule 68 (Mayorigual -> ID MAYORIGUAL INTEGER .)


state 138

    (70) Menorigual -> ID MENORIGUAL ID .

    INTEGER         reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    STRING          reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    ID              reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    SUMA            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    RESTA           reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    MULTIPLICA      reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    DIVIDE          reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    POTENCIA        reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    MAIN            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    OPERA           reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    MOVE            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    DELAY           reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    IF              reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    WHILE           reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    FOR             reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    LOOP            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    PRINTLN         reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    ELSE            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    FIN             reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    LLAVER          reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    LLAVEL          reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    RPAREN          reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)
    COMA            reduce using rule 70 (Menorigual -> ID MENORIGUAL ID .)


state 139

    (72) Menorigual -> ID MENORIGUAL INTEGER .

    INTEGER         reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    STRING          reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    ID              reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    SUMA            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    RESTA           reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    DIVIDE          reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    POTENCIA        reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    MAIN            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    OPERA           reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    MOVE            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    DELAY           reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    IF              reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    WHILE           reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    FOR             reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    LOOP            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    PRINTLN         reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    ELSE            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    FIN             reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    LLAVER          reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    LLAVEL          reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    RPAREN          reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)
    COMA            reduce using rule 72 (Menorigual -> ID MENORIGUAL INTEGER .)


state 140

    (17) variableDef1 -> LET ID PUNTOCOMA .

    INTEGER         reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    STRING          reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    ID              reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    LET             reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    SUMA            reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    RESTA           reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    MULTIPLICA      reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    DIVIDE          reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    POTENCIA        reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    MAIN            reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    OPERA           reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    MOVE            reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    DELAY           reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    IF              reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    WHILE           reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    FOR             reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    LOOP            reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    PRINTLN         reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    ELSE            reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    FIN             reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)
    LLAVER          reduce using rule 17 (variableDef1 -> LET ID PUNTOCOMA .)


state 141

    (18) variableDef2 -> LET ID EQUAL . INTEGER PUNTOCOMA
    (19) variableDef2 -> LET ID EQUAL . BOOLEAN PUNTOCOMA
    (20) variableDef2 -> LET ID EQUAL . STRING PUNTOCOMA

    INTEGER         shift and go to state 167
    BOOLEAN         shift and go to state 168
    STRING          shift and go to state 169


state 142

    (92) main -> MAIN LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 170


state 143

    (9) expresion_if -> empty empty .

    FIN             reduce using rule 9 (expresion_if -> empty empty .)
    LLAVER          reduce using rule 9 (expresion_if -> empty empty .)
    MOVE            reduce using rule 9 (expresion_if -> empty empty .)
    DELAY           reduce using rule 9 (expresion_if -> empty empty .)
    OPERA           reduce using rule 9 (expresion_if -> empty empty .)
    PRINTLN         reduce using rule 9 (expresion_if -> empty empty .)


state 144

    (76) Move_if -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 171


state 145

    (78) Delay_if -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 172


state 146

    (74) Opera_if -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 173

state 147

    (88) Println_if -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (89) Println_if -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (91) Println_if -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 174
    INTEGER         shift and go to state 175
    ID              shift and go to state 176
    BOOLEAN         shift and go to state 177


state 148

    (73) Opera -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 178


state 149

    (75) Move -> MOVE LPAREN ID . RPAREN PUNTOCOMA
    (76) Move_if -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 179


state 150

    (77) Delay -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA
    (78) Delay_if -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 180


state 151

    (79) If -> IF condicion LLAVEL . cuerpo_if LLAVER
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    LET             shift and go to state 19
    LLAVER          reduce using rule 93 (empty -> .)
    MOVE            shift and go to state 92
    DELAY           shift and go to state 93
    OPERA           shift and go to state 94
    PRINTLN         shift and go to state 95

    cuerpo_if                      shift and go to state 181
    variable                       shift and go to state 182
    expresion_if                   shift and go to state 18
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 183
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 152

    (81) While -> WHILE LPAREN condicion . RPAREN LLAVEL cuerpo LLAVER

    RPAREN          shift and go to state 184


state 153

    (82) For -> FOR ID IN . INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    INTEGER         shift and go to state 185


state 154

    (83) Loop -> LOOP LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 186


state 155

    (84) Println -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA
    (88) Println_if -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 187


state 156

    (85) Println -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA
    (89) Println_if -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 188


state 157

    (86) Println -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA
    (90) Println_if -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 189


state 158

    (87) Println -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA
    (91) Println_if -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 190


state 159

    (80) Else -> ELSE LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 191


state 160

    (73) Opera -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 192


state 161

    (75) Move -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 193


state 162

    (77) Delay -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 194


state 163

    (84) Println -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 195


state 164

    (85) Println -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 196


state 165

    (86) Println -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 197


state 166

    (87) Println -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 198


state 167

    (18) variableDef2 -> LET ID EQUAL INTEGER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 199


state 168

    (19) variableDef2 -> LET ID EQUAL BOOLEAN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 200


state 169

    (20) variableDef2 -> LET ID EQUAL STRING . PUNTOCOMA

    PUNTOCOMA       shift and go to state 201


state 170

    (92) main -> MAIN LPAREN RPAREN PUNTOCOMA .

    FIN             reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    ID              reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    IF              reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    COMA            reduce using rule 92 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)


state 171

    (76) Move_if -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 202


state 172

    (78) Delay_if -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 203


state 173

    (74) Opera_if -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 204


state 174

    (88) Println_if -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 205


state 175

    (89) Println_if -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 206


state 176

    (90) Println_if -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 207


state 177

    (91) Println_if -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 208


state 178

    (73) Opera -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 209
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 179

    (75) Move -> MOVE LPAREN ID RPAREN . PUNTOCOMA
    (76) Move_if -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 210


state 180

    (77) Delay -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA
    (78) Delay_if -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 211


state 181

    (79) If -> IF condicion LLAVEL cuerpo_if . LLAVER

    LLAVER          shift and go to state 212


state 182

    (6) cuerpo_if -> variable .

    LLAVER          reduce using rule 6 (cuerpo_if -> variable .)


state 183

    (16) variable -> empty . empty
    (9) expresion_if -> empty . empty
    (93) empty -> .

    LLAVER          reduce using rule 93 (empty -> .)

    empty                          shift and go to state 213

state 184

    (81) While -> WHILE LPAREN condicion RPAREN . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 214


state 185

    (82) For -> FOR ID IN INTEGER . PUNTOS INTEGER LLAVEL expresion LLAVER

    PUNTOS          shift and go to state 215


state 186

    (83) Loop -> LOOP LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 83 (Loop -> LOOP LLAVEL cuerpo LLAVER .)


state 187

    (84) Println -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA
    (88) Println_if -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 216


state 188

    (85) Println -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA
    (89) Println_if -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 217


state 189

    (86) Println -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA
    (90) Println_if -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 218


state 190

    (87) Println -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA
    (91) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 219


state 191

    (80) Else -> ELSE LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 80 (Else -> ELSE LLAVEL cuerpo LLAVER .)


state 192

    (73) Opera -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 220
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 193

    (75) Move -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 221


state 194

    (77) Delay -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 222


state 195

    (84) Println -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 223


state 196

    (85) Println -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 224


state 197

    (86) Println -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 225


state 198

    (87) Println -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 226


state 199

    (18) variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .

    INTEGER         reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    STRING          reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    ID              reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LET             reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    SUMA            reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    RESTA           reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MULTIPLICA      reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    DIVIDE          reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    POTENCIA        reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MAIN            reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    OPERA           reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MOVE            reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    DELAY           reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    IF              reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    WHILE           reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    FOR             reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LOOP            reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    PRINTLN         reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    ELSE            reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    FIN             reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LLAVER          reduce using rule 18 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)


state 200

    (19) variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .

    INTEGER         reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    STRING          reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    ID              reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LET             reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    SUMA            reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    RESTA           reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    DIVIDE          reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    POTENCIA        reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MAIN            reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    OPERA           reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MOVE            reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    DELAY           reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    IF              reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    WHILE           reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    FOR             reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LOOP            reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    PRINTLN         reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    ELSE            reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    FIN             reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LLAVER          reduce using rule 19 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)


state 201

    (20) variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .

    INTEGER         reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    STRING          reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    ID              reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LET             reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    SUMA            reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    RESTA           reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MULTIPLICA      reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    DIVIDE          reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    POTENCIA        reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MAIN            reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    OPERA           reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MOVE            reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    DELAY           reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    IF              reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    WHILE           reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    FOR             reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LOOP            reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    PRINTLN         reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    ELSE            reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    FIN             reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LLAVER          reduce using rule 20 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)


state 202

    (76) Move_if -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 227


state 203

    (78) Delay_if -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 228


state 204

    (74) Opera_if -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 229
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 205

    (88) Println_if -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 230


state 206

    (89) Println_if -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 231


state 207

    (90) Println_if -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 232


state 208

    (91) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 233


state 209

    (73) Opera -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 234


state 210

    (75) Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .
    (76) Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]


state 211

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA
    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 235


state 212

    (79) If -> IF condicion LLAVEL cuerpo_if LLAVER .

    INTEGER         reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    STRING          reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    ID              reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    SUMA            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    RESTA           reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MULTIPLICA      reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    DIVIDE          reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    POTENCIA        reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MAIN            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    OPERA           reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MOVE            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    DELAY           reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    IF              reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    WHILE           reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    FOR             reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LOOP            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    PRINTLN         reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    ELSE            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    FIN             reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LLAVER          reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LLAVEL          reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    RPAREN          reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    COMA            reduce using rule 79 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)


state 213

    (16) variable -> empty empty .
    (9) expresion_if -> empty empty .

  ! reduce/reduce conflict for LLAVER resolved using rule 9 (expresion_if -> empty empty .)
    LLAVER          reduce using rule 9 (expresion_if -> empty empty .)

  ! LLAVER          [ reduce using rule 16 (variable -> empty empty .) ]


state 214

    (81) While -> WHILE LPAREN condicion RPAREN LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (14) variable -> . variableDef1 cuerpo
    (15) variable -> . variableDef2 cuerpo
    (16) variable -> . empty empty
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (17) variableDef1 -> . LET ID PUNTOCOMA
    (18) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (19) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (20) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (93) empty -> .
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion_if
    (9) expresion_if -> . empty empty
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER
    (10) funcion_if -> . Move_if expresion_if
    (11) funcion_if -> . Delay_if expresion_if
    (12) funcion_if -> . Opera_if expresion_if
    (13) funcion_if -> . Println_if expresion_if
    (76) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (78) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (74) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (88) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (89) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (90) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (91) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 93 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    condicion                      shift and go to state 15
    cuerpo                         shift and go to state 236
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 215

    (82) For -> FOR ID IN INTEGER PUNTOS . INTEGER LLAVEL expresion LLAVER

    INTEGER         shift and go to state 237


state 216

    (84) Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .
    (88) Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]


state 217

    (85) Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .
    (89) Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    STRING          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ID              reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    IF              reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FOR             reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FIN             reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]


state 218

    (86) Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .
    (90) Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]


state 219

    (87) Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .
    (91) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ID              reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    IF              reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FIN             reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]


state 220

    (73) Opera -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 238


state 221

    (75) Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    COMA            reduce using rule 75 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)


state 222

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 239


state 223

    (84) Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    COMA            reduce using rule 84 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)


state 224

    (85) Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    STRING          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ID              reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    IF              reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FOR             reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FIN             reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    COMA            reduce using rule 85 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)


state 225

    (86) Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    COMA            reduce using rule 86 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)


state 226

    (87) Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ID              reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    IF              reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FIN             reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    COMA            reduce using rule 87 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)


state 227

    (76) Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .

    MOVE            reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 76 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)


state 228

    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 240


state 229

    (74) Opera_if -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 241


state 230

    (88) Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

    MOVE            reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 88 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)


state 231

    (89) Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

    MOVE            reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FIN             reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 89 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)


state 232

    (90) Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

    MOVE            reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 90 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)


state 233

    (91) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

    MOVE            reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FIN             reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 91 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)


state 234

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 242
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 235

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA
    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 236

    (81) While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 244


state 237

    (82) For -> FOR ID IN INTEGER PUNTOS INTEGER . LLAVEL expresion LLAVER

    LLAVEL          shift and go to state 245


state 238

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 246
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 239

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 247


state 240

    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 248


state 241

    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 249
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 242

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 250


state 243

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .
    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]


state 244

    (81) While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 81 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)


state 245

    (82) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL . expresion LLAVER
    (21) expresion -> . INTEGER expresion
    (22) expresion -> . STRING expresion
    (23) expresion -> . funcion expresion
    (24) expresion -> . ID expresion
    (25) expresion -> . condicion expresion
    (26) expresion -> . operador expresion
    (27) expresion -> . main
    (28) expresion -> . empty empty
    (34) funcion -> . Opera
    (35) funcion -> . Move
    (36) funcion -> . Delay
    (37) funcion -> . If
    (38) funcion -> . While
    (39) funcion -> . For
    (40) funcion -> . Loop
    (41) funcion -> . Println
    (42) funcion -> . Else
    (43) condicion -> . Igual expresion
    (44) condicion -> . Diferente expresion
    (45) condicion -> . Mayor expresion
    (46) condicion -> . Menor expresion
    (47) condicion -> . Mayorigual expresion
    (48) condicion -> . Menorigual expresion
    (29) operador -> . SUMA
    (30) operador -> . RESTA
    (31) operador -> . MULTIPLICA
    (32) operador -> . DIVIDE
    (33) operador -> . POTENCIA
    (92) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (93) empty -> .
    (73) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (75) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (77) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (79) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (81) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (82) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (83) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (84) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (85) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (86) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (87) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (80) Else -> . ELSE LLAVEL cuerpo LLAVER
    (49) Igual -> . INTEGER IGUAL INTEGER
    (50) Igual -> . ID IGUAL ID
    (51) Igual -> . INTEGER IGUAL ID
    (52) Igual -> . ID IGUAL INTEGER
    (53) Diferente -> . INTEGER DIFERENTE INTEGER
    (54) Diferente -> . ID DIFERENTE ID
    (55) Diferente -> . INTEGER DIFERENTE ID
    (56) Diferente -> . ID DIFERENTE INTEGER
    (57) Mayor -> . INTEGER MAYOR INTEGER
    (58) Mayor -> . ID MAYOR ID
    (59) Mayor -> . INTEGER MAYOR ID
    (60) Mayor -> . ID MAYOR INTEGER
    (61) Menor -> . INTEGER MENOR INTEGER
    (62) Menor -> . ID MENOR ID
    (63) Menor -> . INTEGER MENOR ID
    (64) Menor -> . ID MENOR INTEGER
    (65) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (66) Mayorigual -> . ID MAYORIGUAL ID
    (67) Mayorigual -> . INTEGER MAYORIGUAL ID
    (68) Mayorigual -> . ID MAYORIGUAL INTEGER
    (69) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (70) Menorigual -> . ID MENORIGUAL ID
    (71) Menorigual -> . INTEGER MENORIGUAL ID
    (72) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    LLAVER          reduce using rule 93 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    expresion                      shift and go to state 251
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 246

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 252


state 247

    (77) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    COMA            reduce using rule 77 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)


state 248

    (78) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

    MOVE            reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 78 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)


state 249

    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 253


state 250

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA
    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 254


state 251

    (82) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion . LLAVER

    LLAVER          shift and go to state 255


state 252

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 256


state 253

    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 257


state 254

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .
    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for MOVE resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    STRING          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ID              reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    IF              reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FOR             reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FIN             reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)

  ! MOVE            [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]


state 255

    (82) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .

    INTEGER         reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    STRING          reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    ID              reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    SUMA            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    RESTA           reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MULTIPLICA      reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    DIVIDE          reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    POTENCIA        reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MAIN            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    OPERA           reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MOVE            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    DELAY           reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    IF              reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    WHILE           reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    FOR             reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LOOP            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    PRINTLN         reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    ELSE            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    FIN             reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LLAVER          reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LLAVEL          reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    RPAREN          reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    COMA            reduce using rule 82 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)


state 256

    (73) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    STRING          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ID              reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    IF              reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FOR             reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FIN             reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    COMA            reduce using rule 73 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)


state 257

    (74) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

    MOVE            reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FIN             reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 74 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTEGER in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 11 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 11 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 11 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 11 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 11 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 11 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 12 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 12 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 12 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 12 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 12 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 12 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for FOR in state 12 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 12 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 12 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 13 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 13 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 13 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 13 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 13 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 13 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 13 resolved as shift
WARNING: shift/reduce conflict for FOR in state 13 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 13 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 13 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 13 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 14 resolved as shift
WARNING: shift/reduce conflict for STRING in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 14 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 14 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 14 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 14 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 14 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 14 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for FOR in state 14 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 14 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 14 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 15 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 15 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 15 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 15 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 15 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 15 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 15 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 15 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 16 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 16 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 16 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 16 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 16 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 16 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 16 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 16 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 16 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 16 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 29 resolved as shift
WARNING: shift/reduce conflict for STRING in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 29 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 29 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 29 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 29 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 29 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 29 resolved as shift
WARNING: shift/reduce conflict for IF in state 29 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 29 resolved as shift
WARNING: shift/reduce conflict for FOR in state 29 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 29 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 29 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 29 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 30 resolved as shift
WARNING: shift/reduce conflict for STRING in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 30 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 30 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 30 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 30 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 30 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 30 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 30 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 30 resolved as shift
WARNING: shift/reduce conflict for FOR in state 30 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 30 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 30 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 30 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 31 resolved as shift
WARNING: shift/reduce conflict for STRING in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 31 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 31 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 31 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 31 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 31 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 31 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 31 resolved as shift
WARNING: shift/reduce conflict for IF in state 31 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for FOR in state 31 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 31 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 31 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 31 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 32 resolved as shift
WARNING: shift/reduce conflict for STRING in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 32 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 32 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 32 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 32 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 32 resolved as shift
WARNING: shift/reduce conflict for IF in state 32 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 32 resolved as shift
WARNING: shift/reduce conflict for FOR in state 32 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 32 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 32 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 32 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 33 resolved as shift
WARNING: shift/reduce conflict for STRING in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 33 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 33 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 33 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 33 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 33 resolved as shift
WARNING: shift/reduce conflict for FOR in state 33 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 33 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 33 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 33 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 34 resolved as shift
WARNING: shift/reduce conflict for STRING in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 34 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 34 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 34 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 34 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 34 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 34 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 34 resolved as shift
WARNING: shift/reduce conflict for IF in state 34 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 34 resolved as shift
WARNING: shift/reduce conflict for FOR in state 34 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 34 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 34 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 34 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 41 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 41 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 41 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 41 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 51 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 51 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 51 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 51 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 52 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 52 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 52 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 52 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 53 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 53 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 53 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 54 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 54 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 54 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 54 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (cuerpo -> variable)
WARNING: rejected rule (cuerpo_if -> variable) in state 5
WARNING: reduce/reduce conflict in state 58 resolved using rule (variable -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 58
WARNING: reduce/reduce conflict in state 58 resolved using rule (expresion_if -> empty empty)
WARNING: rejected rule (variable -> empty empty) in state 58
WARNING: reduce/reduce conflict in state 210 resolved using rule (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA)
WARNING: rejected rule (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA) in state 210
WARNING: reduce/reduce conflict in state 213 resolved using rule (expresion_if -> empty empty)
WARNING: rejected rule (variable -> empty empty) in state 213
WARNING: reduce/reduce conflict in state 216 resolved using rule (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA)
WARNING: rejected rule (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA) in state 216
WARNING: reduce/reduce conflict in state 217 resolved using rule (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA)
WARNING: rejected rule (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA) in state 217
WARNING: reduce/reduce conflict in state 218 resolved using rule (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA)
WARNING: rejected rule (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA) in state 218
WARNING: reduce/reduce conflict in state 219 resolved using rule (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA)
WARNING: rejected rule (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA) in state 219
WARNING: reduce/reduce conflict in state 243 resolved using rule (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA)
WARNING: rejected rule (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA) in state 243
WARNING: reduce/reduce conflict in state 254 resolved using rule (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA)
WARNING: rejected rule (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA) in state 254
WARNING: Rule (variable -> empty empty) is never reduced
