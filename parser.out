Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    ESPACIO
    FN

Grammar

Rule 0     S' -> Start
Rule 1     Start -> code
Rule 2     code -> INICIO cuerpo FIN
Rule 3     cuerpo -> variable
Rule 4     cuerpo -> expresion
Rule 5     cuerpo -> cuerpo_if
Rule 6     cuerpo_if -> variable
Rule 7     cuerpo_if -> expresion_if
Rule 8     expresion_if -> funcion_if expresion
Rule 9     funcion_if -> Move_if
Rule 10    funcion_if -> Delay_if
Rule 11    funcion_if -> Opera_if
Rule 12    funcion_if -> Println_if
Rule 13    Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA
Rule 14    Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
Rule 15    Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
Rule 16    Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA
Rule 17    Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
Rule 18    Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA
Rule 19    Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
Rule 20    variable -> variableDef1 cuerpo
Rule 21    variable -> variableDef2 cuerpo
Rule 22    variable -> empty empty
Rule 23    variableDef1 -> LET ID PUNTOCOMA
Rule 24    variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA
Rule 25    variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA
Rule 26    variableDef2 -> LET ID EQUAL STRING PUNTOCOMA
Rule 27    expresion -> INTEGER expresion
Rule 28    expresion -> STRING expresion
Rule 29    expresion -> funcion expresion
Rule 30    expresion -> ID expresion
Rule 31    expresion -> condicion expresion
Rule 32    expresion -> operador expresion
Rule 33    expresion -> main
Rule 34    expresion -> empty empty
Rule 35    operador -> SUMA
Rule 36    operador -> RESTA
Rule 37    operador -> MULTIPLICA
Rule 38    operador -> DIVIDE
Rule 39    operador -> POTENCIA
Rule 40    funcion -> Opera
Rule 41    funcion -> Move
Rule 42    funcion -> Delay
Rule 43    funcion -> If
Rule 44    funcion -> While
Rule 45    funcion -> For
Rule 46    funcion -> Loop
Rule 47    funcion -> Println
Rule 48    funcion -> Else
Rule 49    condicion -> Igual expresion
Rule 50    condicion -> Diferente expresion
Rule 51    condicion -> Mayor expresion
Rule 52    condicion -> Menor expresion
Rule 53    condicion -> Mayorigual expresion
Rule 54    condicion -> Menorigual expresion
Rule 55    Igual -> INTEGER IGUAL INTEGER
Rule 56    Igual -> ID IGUAL ID
Rule 57    Igual -> INTEGER IGUAL ID
Rule 58    Igual -> ID IGUAL INTEGER
Rule 59    Diferente -> INTEGER DIFERENTE INTEGER
Rule 60    Diferente -> ID DIFERENTE ID
Rule 61    Diferente -> INTEGER DIFERENTE ID
Rule 62    Diferente -> ID DIFERENTE INTEGER
Rule 63    Mayor -> INTEGER MAYOR INTEGER
Rule 64    Mayor -> ID MAYOR ID
Rule 65    Mayor -> INTEGER MAYOR ID
Rule 66    Mayor -> ID MAYOR INTEGER
Rule 67    Menor -> INTEGER MENOR INTEGER
Rule 68    Menor -> ID MENOR ID
Rule 69    Menor -> INTEGER MENOR ID
Rule 70    Menor -> ID MENOR INTEGER
Rule 71    Mayorigual -> INTEGER MAYORIGUAL INTEGER
Rule 72    Mayorigual -> ID MAYORIGUAL ID
Rule 73    Mayorigual -> INTEGER MAYORIGUAL ID
Rule 74    Mayorigual -> ID MAYORIGUAL INTEGER
Rule 75    Menorigual -> INTEGER MENORIGUAL INTEGER
Rule 76    Menorigual -> ID MENORIGUAL ID
Rule 77    Menorigual -> INTEGER MENORIGUAL ID
Rule 78    Menorigual -> ID MENORIGUAL INTEGER
Rule 79    Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
Rule 80    Move -> MOVE LPAREN ID RPAREN PUNTOCOMA
Rule 81    Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
Rule 82    If -> IF condicion LLAVEL cuerpo_if LLAVER
Rule 83    Else -> ELSE LLAVEL cuerpo LLAVER
Rule 84    While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
Rule 85    For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
Rule 86    Loop -> LOOP LLAVEL cuerpo LLAVER
Rule 87    Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA
Rule 88    Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
Rule 89    Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA
Rule 90    Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
Rule 91    main -> MAIN LPAREN RPAREN PUNTOCOMA
Rule 92    empty -> <empty>

Terminals, with rules where they appear

BOOLEAN              : 19 25 90
COMA                 : 14 15 15 79 79 81
COMENTARIO           : 
DELAY                : 14 81
DIFERENTE            : 59 60 61 62
DIVIDE               : 38
ELSE                 : 83
EQUAL                : 24 25 26
ESPACIO              : 
FIN                  : 2
FN                   : 
FOR                  : 85
ID                   : 13 18 23 24 25 26 30 56 56 57 58 60 60 61 62 64 64 65 66 68 68 69 70 72 72 73 74 76 76 77 78 80 85 89
IF                   : 82
IGUAL                : 55 56 57 58
IN                   : 85
INICIO               : 2
INTEGER              : 14 17 24 27 55 55 57 58 59 59 61 62 63 63 65 66 67 67 69 70 71 71 73 74 75 75 77 78 81 85 85 88
LET                  : 23 24 25 26
LLAVEL               : 82 83 84 85 86
LLAVER               : 82 83 84 85 86
LOOP                 : 86
LPAREN               : 13 14 15 16 17 18 19 79 80 81 84 87 88 89 90 91
MAIN                 : 91
MAYOR                : 63 64 65 66
MAYORIGUAL           : 71 72 73 74
MENOR                : 67 68 69 70
MENORIGUAL           : 75 76 77 78
MOVE                 : 13 80
MULTIPLICA           : 37
OPERA                : 15 79
POTENCIA             : 39
PRINTLN              : 16 17 18 19 87 88 89 90
PUNTOCOMA            : 13 14 15 16 17 18 19 23 24 25 26 79 80 81 87 88 89 90 91
PUNTOS               : 85
RESTA                : 36
RPAREN               : 13 14 15 16 17 18 19 79 80 81 84 87 88 89 90 91
STRING               : 14 16 26 28 81 87
SUMA                 : 35
WHILE                : 84
error                : 

Nonterminals, with rules where they appear

Delay                : 42
Delay_if             : 10
Diferente            : 50
Else                 : 48
For                  : 45
If                   : 43
Igual                : 49
Loop                 : 46
Mayor                : 51
Mayorigual           : 53
Menor                : 52
Menorigual           : 54
Move                 : 41
Move_if              : 9
Opera                : 40
Opera_if             : 11
Println              : 47
Println_if           : 12
Start                : 0
While                : 44
code                 : 1
condicion            : 31 82 84
cuerpo               : 2 20 21 83 84 86
cuerpo_if            : 5 82
empty                : 22 22 34 34
expresion            : 4 8 15 15 27 28 29 30 31 32 49 50 51 52 53 54 79 79 85
expresion_if         : 7
funcion              : 29
funcion_if           : 8
main                 : 33
operador             : 15 32 79
variable             : 3 6
variableDef1         : 20
variableDef2         : 21

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . code
    (2) code -> . INICIO cuerpo FIN

    INICIO          shift and go to state 3

    Start                          shift and go to state 1
    code                           shift and go to state 2

state 1

    (0) S' -> Start .



state 2

    (1) Start -> code .

    $end            reduce using rule 1 (Start -> code .)


state 3

    (2) code -> INICIO . cuerpo FIN
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 4
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 4

    (2) code -> INICIO cuerpo . FIN

    FIN             shift and go to state 55


state 5

    (3) cuerpo -> variable .
    (6) cuerpo_if -> variable .

  ! reduce/reduce conflict for FIN resolved using rule 3 (cuerpo -> variable .)
  ! reduce/reduce conflict for LLAVER resolved using rule 3 (cuerpo -> variable .)
    FIN             reduce using rule 3 (cuerpo -> variable .)
    LLAVER          reduce using rule 3 (cuerpo -> variable .)

  ! FIN             [ reduce using rule 6 (cuerpo_if -> variable .) ]
  ! LLAVER          [ reduce using rule 6 (cuerpo_if -> variable .) ]


state 6

    (4) cuerpo -> expresion .

    FIN             reduce using rule 4 (cuerpo -> expresion .)
    LLAVER          reduce using rule 4 (cuerpo -> expresion .)


state 7

    (5) cuerpo -> cuerpo_if .

    FIN             reduce using rule 5 (cuerpo -> cuerpo_if .)
    LLAVER          reduce using rule 5 (cuerpo -> cuerpo_if .)


state 8

    (20) variable -> variableDef1 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    variableDef1                   shift and go to state 8
    cuerpo                         shift and go to state 56
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 9

    (21) variable -> variableDef2 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    variableDef2                   shift and go to state 9
    cuerpo                         shift and go to state 57
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 10

    (22) variable -> empty . empty
    (34) expresion -> empty . empty
    (92) empty -> .

    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)

    empty                          shift and go to state 58

state 11

    (27) expresion -> INTEGER . expresion
    (55) Igual -> INTEGER . IGUAL INTEGER
    (57) Igual -> INTEGER . IGUAL ID
    (59) Diferente -> INTEGER . DIFERENTE INTEGER
    (61) Diferente -> INTEGER . DIFERENTE ID
    (63) Mayor -> INTEGER . MAYOR INTEGER
    (65) Mayor -> INTEGER . MAYOR ID
    (67) Menor -> INTEGER . MENOR INTEGER
    (69) Menor -> INTEGER . MENOR ID
    (71) Mayorigual -> INTEGER . MAYORIGUAL INTEGER
    (73) Mayorigual -> INTEGER . MAYORIGUAL ID
    (75) Menorigual -> INTEGER . MENORIGUAL INTEGER
    (77) Menorigual -> INTEGER . MENORIGUAL ID
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    expresion                      shift and go to state 59
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 12

    (28) expresion -> STRING . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    expresion                      shift and go to state 71
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 13

    (29) expresion -> funcion . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    funcion                        shift and go to state 13
    expresion                      shift and go to state 72
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 14

    (30) expresion -> ID . expresion
    (56) Igual -> ID . IGUAL ID
    (58) Igual -> ID . IGUAL INTEGER
    (60) Diferente -> ID . DIFERENTE ID
    (62) Diferente -> ID . DIFERENTE INTEGER
    (64) Mayor -> ID . MAYOR ID
    (66) Mayor -> ID . MAYOR INTEGER
    (68) Menor -> ID . MENOR ID
    (70) Menor -> ID . MENOR INTEGER
    (72) Mayorigual -> ID . MAYORIGUAL ID
    (74) Mayorigual -> ID . MAYORIGUAL INTEGER
    (76) Menorigual -> ID . MENORIGUAL ID
    (78) Menorigual -> ID . MENORIGUAL INTEGER
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MAYOR           shift and go to state 76
    MENOR           shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    expresion                      shift and go to state 73
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 15

    (31) expresion -> condicion . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    condicion                      shift and go to state 15
    expresion                      shift and go to state 80
    funcion                        shift and go to state 13
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 16

    (32) expresion -> operador . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    operador                       shift and go to state 16
    expresion                      shift and go to state 81
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 17

    (33) expresion -> main .

    FIN             reduce using rule 33 (expresion -> main .)
    LLAVER          reduce using rule 33 (expresion -> main .)
    INTEGER         reduce using rule 33 (expresion -> main .)
    STRING          reduce using rule 33 (expresion -> main .)
    ID              reduce using rule 33 (expresion -> main .)
    SUMA            reduce using rule 33 (expresion -> main .)
    RESTA           reduce using rule 33 (expresion -> main .)
    MULTIPLICA      reduce using rule 33 (expresion -> main .)
    DIVIDE          reduce using rule 33 (expresion -> main .)
    POTENCIA        reduce using rule 33 (expresion -> main .)
    MAIN            reduce using rule 33 (expresion -> main .)
    OPERA           reduce using rule 33 (expresion -> main .)
    MOVE            reduce using rule 33 (expresion -> main .)
    DELAY           reduce using rule 33 (expresion -> main .)
    IF              reduce using rule 33 (expresion -> main .)
    WHILE           reduce using rule 33 (expresion -> main .)
    FOR             reduce using rule 33 (expresion -> main .)
    LOOP            reduce using rule 33 (expresion -> main .)
    PRINTLN         reduce using rule 33 (expresion -> main .)
    ELSE            reduce using rule 33 (expresion -> main .)
    LLAVEL          reduce using rule 33 (expresion -> main .)
    RPAREN          reduce using rule 33 (expresion -> main .)
    COMA            reduce using rule 33 (expresion -> main .)


state 18

    (7) cuerpo_if -> expresion_if .

    FIN             reduce using rule 7 (cuerpo_if -> expresion_if .)
    LLAVER          reduce using rule 7 (cuerpo_if -> expresion_if .)


state 19

    (23) variableDef1 -> LET . ID PUNTOCOMA
    (24) variableDef2 -> LET . ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> LET . ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> LET . ID EQUAL STRING PUNTOCOMA

    ID              shift and go to state 82


state 20

    (40) funcion -> Opera .

    INTEGER         reduce using rule 40 (funcion -> Opera .)
    STRING          reduce using rule 40 (funcion -> Opera .)
    ID              reduce using rule 40 (funcion -> Opera .)
    SUMA            reduce using rule 40 (funcion -> Opera .)
    RESTA           reduce using rule 40 (funcion -> Opera .)
    MULTIPLICA      reduce using rule 40 (funcion -> Opera .)
    DIVIDE          reduce using rule 40 (funcion -> Opera .)
    POTENCIA        reduce using rule 40 (funcion -> Opera .)
    MAIN            reduce using rule 40 (funcion -> Opera .)
    OPERA           reduce using rule 40 (funcion -> Opera .)
    MOVE            reduce using rule 40 (funcion -> Opera .)
    DELAY           reduce using rule 40 (funcion -> Opera .)
    IF              reduce using rule 40 (funcion -> Opera .)
    WHILE           reduce using rule 40 (funcion -> Opera .)
    FOR             reduce using rule 40 (funcion -> Opera .)
    LOOP            reduce using rule 40 (funcion -> Opera .)
    PRINTLN         reduce using rule 40 (funcion -> Opera .)
    ELSE            reduce using rule 40 (funcion -> Opera .)
    FIN             reduce using rule 40 (funcion -> Opera .)
    LLAVER          reduce using rule 40 (funcion -> Opera .)
    LLAVEL          reduce using rule 40 (funcion -> Opera .)
    RPAREN          reduce using rule 40 (funcion -> Opera .)
    COMA            reduce using rule 40 (funcion -> Opera .)


state 21

    (41) funcion -> Move .

    INTEGER         reduce using rule 41 (funcion -> Move .)
    STRING          reduce using rule 41 (funcion -> Move .)
    ID              reduce using rule 41 (funcion -> Move .)
    SUMA            reduce using rule 41 (funcion -> Move .)
    RESTA           reduce using rule 41 (funcion -> Move .)
    MULTIPLICA      reduce using rule 41 (funcion -> Move .)
    DIVIDE          reduce using rule 41 (funcion -> Move .)
    POTENCIA        reduce using rule 41 (funcion -> Move .)
    MAIN            reduce using rule 41 (funcion -> Move .)
    OPERA           reduce using rule 41 (funcion -> Move .)
    MOVE            reduce using rule 41 (funcion -> Move .)
    DELAY           reduce using rule 41 (funcion -> Move .)
    IF              reduce using rule 41 (funcion -> Move .)
    WHILE           reduce using rule 41 (funcion -> Move .)
    FOR             reduce using rule 41 (funcion -> Move .)
    LOOP            reduce using rule 41 (funcion -> Move .)
    PRINTLN         reduce using rule 41 (funcion -> Move .)
    ELSE            reduce using rule 41 (funcion -> Move .)
    FIN             reduce using rule 41 (funcion -> Move .)
    LLAVER          reduce using rule 41 (funcion -> Move .)
    LLAVEL          reduce using rule 41 (funcion -> Move .)
    RPAREN          reduce using rule 41 (funcion -> Move .)
    COMA            reduce using rule 41 (funcion -> Move .)


state 22

    (42) funcion -> Delay .

    INTEGER         reduce using rule 42 (funcion -> Delay .)
    STRING          reduce using rule 42 (funcion -> Delay .)
    ID              reduce using rule 42 (funcion -> Delay .)
    SUMA            reduce using rule 42 (funcion -> Delay .)
    RESTA           reduce using rule 42 (funcion -> Delay .)
    MULTIPLICA      reduce using rule 42 (funcion -> Delay .)
    DIVIDE          reduce using rule 42 (funcion -> Delay .)
    POTENCIA        reduce using rule 42 (funcion -> Delay .)
    MAIN            reduce using rule 42 (funcion -> Delay .)
    OPERA           reduce using rule 42 (funcion -> Delay .)
    MOVE            reduce using rule 42 (funcion -> Delay .)
    DELAY           reduce using rule 42 (funcion -> Delay .)
    IF              reduce using rule 42 (funcion -> Delay .)
    WHILE           reduce using rule 42 (funcion -> Delay .)
    FOR             reduce using rule 42 (funcion -> Delay .)
    LOOP            reduce using rule 42 (funcion -> Delay .)
    PRINTLN         reduce using rule 42 (funcion -> Delay .)
    ELSE            reduce using rule 42 (funcion -> Delay .)
    FIN             reduce using rule 42 (funcion -> Delay .)
    LLAVER          reduce using rule 42 (funcion -> Delay .)
    LLAVEL          reduce using rule 42 (funcion -> Delay .)
    RPAREN          reduce using rule 42 (funcion -> Delay .)
    COMA            reduce using rule 42 (funcion -> Delay .)


state 23

    (43) funcion -> If .

    INTEGER         reduce using rule 43 (funcion -> If .)
    STRING          reduce using rule 43 (funcion -> If .)
    ID              reduce using rule 43 (funcion -> If .)
    SUMA            reduce using rule 43 (funcion -> If .)
    RESTA           reduce using rule 43 (funcion -> If .)
    MULTIPLICA      reduce using rule 43 (funcion -> If .)
    DIVIDE          reduce using rule 43 (funcion -> If .)
    POTENCIA        reduce using rule 43 (funcion -> If .)
    MAIN            reduce using rule 43 (funcion -> If .)
    OPERA           reduce using rule 43 (funcion -> If .)
    MOVE            reduce using rule 43 (funcion -> If .)
    DELAY           reduce using rule 43 (funcion -> If .)
    IF              reduce using rule 43 (funcion -> If .)
    WHILE           reduce using rule 43 (funcion -> If .)
    FOR             reduce using rule 43 (funcion -> If .)
    LOOP            reduce using rule 43 (funcion -> If .)
    PRINTLN         reduce using rule 43 (funcion -> If .)
    ELSE            reduce using rule 43 (funcion -> If .)
    FIN             reduce using rule 43 (funcion -> If .)
    LLAVER          reduce using rule 43 (funcion -> If .)
    LLAVEL          reduce using rule 43 (funcion -> If .)
    RPAREN          reduce using rule 43 (funcion -> If .)
    COMA            reduce using rule 43 (funcion -> If .)


state 24

    (44) funcion -> While .

    INTEGER         reduce using rule 44 (funcion -> While .)
    STRING          reduce using rule 44 (funcion -> While .)
    ID              reduce using rule 44 (funcion -> While .)
    SUMA            reduce using rule 44 (funcion -> While .)
    RESTA           reduce using rule 44 (funcion -> While .)
    MULTIPLICA      reduce using rule 44 (funcion -> While .)
    DIVIDE          reduce using rule 44 (funcion -> While .)
    POTENCIA        reduce using rule 44 (funcion -> While .)
    MAIN            reduce using rule 44 (funcion -> While .)
    OPERA           reduce using rule 44 (funcion -> While .)
    MOVE            reduce using rule 44 (funcion -> While .)
    DELAY           reduce using rule 44 (funcion -> While .)
    IF              reduce using rule 44 (funcion -> While .)
    WHILE           reduce using rule 44 (funcion -> While .)
    FOR             reduce using rule 44 (funcion -> While .)
    LOOP            reduce using rule 44 (funcion -> While .)
    PRINTLN         reduce using rule 44 (funcion -> While .)
    ELSE            reduce using rule 44 (funcion -> While .)
    FIN             reduce using rule 44 (funcion -> While .)
    LLAVER          reduce using rule 44 (funcion -> While .)
    LLAVEL          reduce using rule 44 (funcion -> While .)
    RPAREN          reduce using rule 44 (funcion -> While .)
    COMA            reduce using rule 44 (funcion -> While .)


state 25

    (45) funcion -> For .

    INTEGER         reduce using rule 45 (funcion -> For .)
    STRING          reduce using rule 45 (funcion -> For .)
    ID              reduce using rule 45 (funcion -> For .)
    SUMA            reduce using rule 45 (funcion -> For .)
    RESTA           reduce using rule 45 (funcion -> For .)
    MULTIPLICA      reduce using rule 45 (funcion -> For .)
    DIVIDE          reduce using rule 45 (funcion -> For .)
    POTENCIA        reduce using rule 45 (funcion -> For .)
    MAIN            reduce using rule 45 (funcion -> For .)
    OPERA           reduce using rule 45 (funcion -> For .)
    MOVE            reduce using rule 45 (funcion -> For .)
    DELAY           reduce using rule 45 (funcion -> For .)
    IF              reduce using rule 45 (funcion -> For .)
    WHILE           reduce using rule 45 (funcion -> For .)
    FOR             reduce using rule 45 (funcion -> For .)
    LOOP            reduce using rule 45 (funcion -> For .)
    PRINTLN         reduce using rule 45 (funcion -> For .)
    ELSE            reduce using rule 45 (funcion -> For .)
    FIN             reduce using rule 45 (funcion -> For .)
    LLAVER          reduce using rule 45 (funcion -> For .)
    LLAVEL          reduce using rule 45 (funcion -> For .)
    RPAREN          reduce using rule 45 (funcion -> For .)
    COMA            reduce using rule 45 (funcion -> For .)


state 26

    (46) funcion -> Loop .

    INTEGER         reduce using rule 46 (funcion -> Loop .)
    STRING          reduce using rule 46 (funcion -> Loop .)
    ID              reduce using rule 46 (funcion -> Loop .)
    SUMA            reduce using rule 46 (funcion -> Loop .)
    RESTA           reduce using rule 46 (funcion -> Loop .)
    MULTIPLICA      reduce using rule 46 (funcion -> Loop .)
    DIVIDE          reduce using rule 46 (funcion -> Loop .)
    POTENCIA        reduce using rule 46 (funcion -> Loop .)
    MAIN            reduce using rule 46 (funcion -> Loop .)
    OPERA           reduce using rule 46 (funcion -> Loop .)
    MOVE            reduce using rule 46 (funcion -> Loop .)
    DELAY           reduce using rule 46 (funcion -> Loop .)
    IF              reduce using rule 46 (funcion -> Loop .)
    WHILE           reduce using rule 46 (funcion -> Loop .)
    FOR             reduce using rule 46 (funcion -> Loop .)
    LOOP            reduce using rule 46 (funcion -> Loop .)
    PRINTLN         reduce using rule 46 (funcion -> Loop .)
    ELSE            reduce using rule 46 (funcion -> Loop .)
    FIN             reduce using rule 46 (funcion -> Loop .)
    LLAVER          reduce using rule 46 (funcion -> Loop .)
    LLAVEL          reduce using rule 46 (funcion -> Loop .)
    RPAREN          reduce using rule 46 (funcion -> Loop .)
    COMA            reduce using rule 46 (funcion -> Loop .)


state 27

    (47) funcion -> Println .

    INTEGER         reduce using rule 47 (funcion -> Println .)
    STRING          reduce using rule 47 (funcion -> Println .)
    ID              reduce using rule 47 (funcion -> Println .)
    SUMA            reduce using rule 47 (funcion -> Println .)
    RESTA           reduce using rule 47 (funcion -> Println .)
    MULTIPLICA      reduce using rule 47 (funcion -> Println .)
    DIVIDE          reduce using rule 47 (funcion -> Println .)
    POTENCIA        reduce using rule 47 (funcion -> Println .)
    MAIN            reduce using rule 47 (funcion -> Println .)
    OPERA           reduce using rule 47 (funcion -> Println .)
    MOVE            reduce using rule 47 (funcion -> Println .)
    DELAY           reduce using rule 47 (funcion -> Println .)
    IF              reduce using rule 47 (funcion -> Println .)
    WHILE           reduce using rule 47 (funcion -> Println .)
    FOR             reduce using rule 47 (funcion -> Println .)
    LOOP            reduce using rule 47 (funcion -> Println .)
    PRINTLN         reduce using rule 47 (funcion -> Println .)
    ELSE            reduce using rule 47 (funcion -> Println .)
    FIN             reduce using rule 47 (funcion -> Println .)
    LLAVER          reduce using rule 47 (funcion -> Println .)
    LLAVEL          reduce using rule 47 (funcion -> Println .)
    RPAREN          reduce using rule 47 (funcion -> Println .)
    COMA            reduce using rule 47 (funcion -> Println .)


state 28

    (48) funcion -> Else .

    INTEGER         reduce using rule 48 (funcion -> Else .)
    STRING          reduce using rule 48 (funcion -> Else .)
    ID              reduce using rule 48 (funcion -> Else .)
    SUMA            reduce using rule 48 (funcion -> Else .)
    RESTA           reduce using rule 48 (funcion -> Else .)
    MULTIPLICA      reduce using rule 48 (funcion -> Else .)
    DIVIDE          reduce using rule 48 (funcion -> Else .)
    POTENCIA        reduce using rule 48 (funcion -> Else .)
    MAIN            reduce using rule 48 (funcion -> Else .)
    OPERA           reduce using rule 48 (funcion -> Else .)
    MOVE            reduce using rule 48 (funcion -> Else .)
    DELAY           reduce using rule 48 (funcion -> Else .)
    IF              reduce using rule 48 (funcion -> Else .)
    WHILE           reduce using rule 48 (funcion -> Else .)
    FOR             reduce using rule 48 (funcion -> Else .)
    LOOP            reduce using rule 48 (funcion -> Else .)
    PRINTLN         reduce using rule 48 (funcion -> Else .)
    ELSE            reduce using rule 48 (funcion -> Else .)
    FIN             reduce using rule 48 (funcion -> Else .)
    LLAVER          reduce using rule 48 (funcion -> Else .)
    LLAVEL          reduce using rule 48 (funcion -> Else .)
    RPAREN          reduce using rule 48 (funcion -> Else .)
    COMA            reduce using rule 48 (funcion -> Else .)


state 29

    (49) condicion -> Igual . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Igual                          shift and go to state 29
    expresion                      shift and go to state 83
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 30

    (50) condicion -> Diferente . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Diferente                      shift and go to state 30
    expresion                      shift and go to state 84
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 31

    (51) condicion -> Mayor . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Mayor                          shift and go to state 31
    expresion                      shift and go to state 85
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 32

    (52) condicion -> Menor . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Menor                          shift and go to state 32
    expresion                      shift and go to state 86
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 33

    (53) condicion -> Mayorigual . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Mayorigual                     shift and go to state 33
    expresion                      shift and go to state 87
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Menorigual                     shift and go to state 34

state 34

    (54) condicion -> Menorigual . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICA resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for OPERA resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for DELAY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

  ! INTEGER         [ reduce using rule 92 (empty -> .) ]
  ! STRING          [ reduce using rule 92 (empty -> .) ]
  ! ID              [ reduce using rule 92 (empty -> .) ]
  ! SUMA            [ reduce using rule 92 (empty -> .) ]
  ! RESTA           [ reduce using rule 92 (empty -> .) ]
  ! MULTIPLICA      [ reduce using rule 92 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 92 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 92 (empty -> .) ]
  ! MAIN            [ reduce using rule 92 (empty -> .) ]
  ! OPERA           [ reduce using rule 92 (empty -> .) ]
  ! MOVE            [ reduce using rule 92 (empty -> .) ]
  ! DELAY           [ reduce using rule 92 (empty -> .) ]
  ! IF              [ reduce using rule 92 (empty -> .) ]
  ! WHILE           [ reduce using rule 92 (empty -> .) ]
  ! FOR             [ reduce using rule 92 (empty -> .) ]
  ! LOOP            [ reduce using rule 92 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 92 (empty -> .) ]
  ! ELSE            [ reduce using rule 92 (empty -> .) ]

    Menorigual                     shift and go to state 34
    expresion                      shift and go to state 88
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33

state 35

    (35) operador -> SUMA .

    INTEGER         reduce using rule 35 (operador -> SUMA .)
    STRING          reduce using rule 35 (operador -> SUMA .)
    ID              reduce using rule 35 (operador -> SUMA .)
    SUMA            reduce using rule 35 (operador -> SUMA .)
    RESTA           reduce using rule 35 (operador -> SUMA .)
    MULTIPLICA      reduce using rule 35 (operador -> SUMA .)
    DIVIDE          reduce using rule 35 (operador -> SUMA .)
    POTENCIA        reduce using rule 35 (operador -> SUMA .)
    MAIN            reduce using rule 35 (operador -> SUMA .)
    OPERA           reduce using rule 35 (operador -> SUMA .)
    MOVE            reduce using rule 35 (operador -> SUMA .)
    DELAY           reduce using rule 35 (operador -> SUMA .)
    IF              reduce using rule 35 (operador -> SUMA .)
    WHILE           reduce using rule 35 (operador -> SUMA .)
    FOR             reduce using rule 35 (operador -> SUMA .)
    LOOP            reduce using rule 35 (operador -> SUMA .)
    PRINTLN         reduce using rule 35 (operador -> SUMA .)
    ELSE            reduce using rule 35 (operador -> SUMA .)
    FIN             reduce using rule 35 (operador -> SUMA .)
    LLAVER          reduce using rule 35 (operador -> SUMA .)
    LLAVEL          reduce using rule 35 (operador -> SUMA .)
    RPAREN          reduce using rule 35 (operador -> SUMA .)
    COMA            reduce using rule 35 (operador -> SUMA .)


state 36

    (36) operador -> RESTA .

    INTEGER         reduce using rule 36 (operador -> RESTA .)
    STRING          reduce using rule 36 (operador -> RESTA .)
    ID              reduce using rule 36 (operador -> RESTA .)
    SUMA            reduce using rule 36 (operador -> RESTA .)
    RESTA           reduce using rule 36 (operador -> RESTA .)
    MULTIPLICA      reduce using rule 36 (operador -> RESTA .)
    DIVIDE          reduce using rule 36 (operador -> RESTA .)
    POTENCIA        reduce using rule 36 (operador -> RESTA .)
    MAIN            reduce using rule 36 (operador -> RESTA .)
    OPERA           reduce using rule 36 (operador -> RESTA .)
    MOVE            reduce using rule 36 (operador -> RESTA .)
    DELAY           reduce using rule 36 (operador -> RESTA .)
    IF              reduce using rule 36 (operador -> RESTA .)
    WHILE           reduce using rule 36 (operador -> RESTA .)
    FOR             reduce using rule 36 (operador -> RESTA .)
    LOOP            reduce using rule 36 (operador -> RESTA .)
    PRINTLN         reduce using rule 36 (operador -> RESTA .)
    ELSE            reduce using rule 36 (operador -> RESTA .)
    FIN             reduce using rule 36 (operador -> RESTA .)
    LLAVER          reduce using rule 36 (operador -> RESTA .)
    LLAVEL          reduce using rule 36 (operador -> RESTA .)
    RPAREN          reduce using rule 36 (operador -> RESTA .)
    COMA            reduce using rule 36 (operador -> RESTA .)


state 37

    (37) operador -> MULTIPLICA .

    INTEGER         reduce using rule 37 (operador -> MULTIPLICA .)
    STRING          reduce using rule 37 (operador -> MULTIPLICA .)
    ID              reduce using rule 37 (operador -> MULTIPLICA .)
    SUMA            reduce using rule 37 (operador -> MULTIPLICA .)
    RESTA           reduce using rule 37 (operador -> MULTIPLICA .)
    MULTIPLICA      reduce using rule 37 (operador -> MULTIPLICA .)
    DIVIDE          reduce using rule 37 (operador -> MULTIPLICA .)
    POTENCIA        reduce using rule 37 (operador -> MULTIPLICA .)
    MAIN            reduce using rule 37 (operador -> MULTIPLICA .)
    OPERA           reduce using rule 37 (operador -> MULTIPLICA .)
    MOVE            reduce using rule 37 (operador -> MULTIPLICA .)
    DELAY           reduce using rule 37 (operador -> MULTIPLICA .)
    IF              reduce using rule 37 (operador -> MULTIPLICA .)
    WHILE           reduce using rule 37 (operador -> MULTIPLICA .)
    FOR             reduce using rule 37 (operador -> MULTIPLICA .)
    LOOP            reduce using rule 37 (operador -> MULTIPLICA .)
    PRINTLN         reduce using rule 37 (operador -> MULTIPLICA .)
    ELSE            reduce using rule 37 (operador -> MULTIPLICA .)
    FIN             reduce using rule 37 (operador -> MULTIPLICA .)
    LLAVER          reduce using rule 37 (operador -> MULTIPLICA .)
    LLAVEL          reduce using rule 37 (operador -> MULTIPLICA .)
    RPAREN          reduce using rule 37 (operador -> MULTIPLICA .)
    COMA            reduce using rule 37 (operador -> MULTIPLICA .)


state 38

    (38) operador -> DIVIDE .

    INTEGER         reduce using rule 38 (operador -> DIVIDE .)
    STRING          reduce using rule 38 (operador -> DIVIDE .)
    ID              reduce using rule 38 (operador -> DIVIDE .)
    SUMA            reduce using rule 38 (operador -> DIVIDE .)
    RESTA           reduce using rule 38 (operador -> DIVIDE .)
    MULTIPLICA      reduce using rule 38 (operador -> DIVIDE .)
    DIVIDE          reduce using rule 38 (operador -> DIVIDE .)
    POTENCIA        reduce using rule 38 (operador -> DIVIDE .)
    MAIN            reduce using rule 38 (operador -> DIVIDE .)
    OPERA           reduce using rule 38 (operador -> DIVIDE .)
    MOVE            reduce using rule 38 (operador -> DIVIDE .)
    DELAY           reduce using rule 38 (operador -> DIVIDE .)
    IF              reduce using rule 38 (operador -> DIVIDE .)
    WHILE           reduce using rule 38 (operador -> DIVIDE .)
    FOR             reduce using rule 38 (operador -> DIVIDE .)
    LOOP            reduce using rule 38 (operador -> DIVIDE .)
    PRINTLN         reduce using rule 38 (operador -> DIVIDE .)
    ELSE            reduce using rule 38 (operador -> DIVIDE .)
    FIN             reduce using rule 38 (operador -> DIVIDE .)
    LLAVER          reduce using rule 38 (operador -> DIVIDE .)
    LLAVEL          reduce using rule 38 (operador -> DIVIDE .)
    RPAREN          reduce using rule 38 (operador -> DIVIDE .)
    COMA            reduce using rule 38 (operador -> DIVIDE .)


state 39

    (39) operador -> POTENCIA .

    INTEGER         reduce using rule 39 (operador -> POTENCIA .)
    STRING          reduce using rule 39 (operador -> POTENCIA .)
    ID              reduce using rule 39 (operador -> POTENCIA .)
    SUMA            reduce using rule 39 (operador -> POTENCIA .)
    RESTA           reduce using rule 39 (operador -> POTENCIA .)
    MULTIPLICA      reduce using rule 39 (operador -> POTENCIA .)
    DIVIDE          reduce using rule 39 (operador -> POTENCIA .)
    POTENCIA        reduce using rule 39 (operador -> POTENCIA .)
    MAIN            reduce using rule 39 (operador -> POTENCIA .)
    OPERA           reduce using rule 39 (operador -> POTENCIA .)
    MOVE            reduce using rule 39 (operador -> POTENCIA .)
    DELAY           reduce using rule 39 (operador -> POTENCIA .)
    IF              reduce using rule 39 (operador -> POTENCIA .)
    WHILE           reduce using rule 39 (operador -> POTENCIA .)
    FOR             reduce using rule 39 (operador -> POTENCIA .)
    LOOP            reduce using rule 39 (operador -> POTENCIA .)
    PRINTLN         reduce using rule 39 (operador -> POTENCIA .)
    ELSE            reduce using rule 39 (operador -> POTENCIA .)
    FIN             reduce using rule 39 (operador -> POTENCIA .)
    LLAVER          reduce using rule 39 (operador -> POTENCIA .)
    LLAVEL          reduce using rule 39 (operador -> POTENCIA .)
    RPAREN          reduce using rule 39 (operador -> POTENCIA .)
    COMA            reduce using rule 39 (operador -> POTENCIA .)


state 40

    (91) main -> MAIN . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 89


state 41

    (8) expresion_if -> funcion_if . expresion
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    expresion                      shift and go to state 90
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 42

    (79) Opera -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 91


state 43

    (80) Move -> MOVE . LPAREN ID RPAREN PUNTOCOMA
    (13) Move_if -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 92


state 44

    (81) Delay -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (14) Delay_if -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 93


state 45

    (82) If -> IF . condicion LLAVEL cuerpo_if LLAVER
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 95
    ID              shift and go to state 96

    condicion                      shift and go to state 94
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 46

    (84) While -> WHILE . LPAREN condicion RPAREN LLAVEL cuerpo LLAVER

    LPAREN          shift and go to state 97


state 47

    (85) For -> FOR . ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    ID              shift and go to state 98


state 48

    (86) Loop -> LOOP . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 99


state 49

    (87) Println -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA
    (16) Println_if -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 100


state 50

    (83) Else -> ELSE . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 101


state 51

    (9) funcion_if -> Move_if .

    INTEGER         reduce using rule 9 (funcion_if -> Move_if .)
    STRING          reduce using rule 9 (funcion_if -> Move_if .)
    ID              reduce using rule 9 (funcion_if -> Move_if .)
    SUMA            reduce using rule 9 (funcion_if -> Move_if .)
    RESTA           reduce using rule 9 (funcion_if -> Move_if .)
    MULTIPLICA      reduce using rule 9 (funcion_if -> Move_if .)
    DIVIDE          reduce using rule 9 (funcion_if -> Move_if .)
    POTENCIA        reduce using rule 9 (funcion_if -> Move_if .)
    MAIN            reduce using rule 9 (funcion_if -> Move_if .)
    OPERA           reduce using rule 9 (funcion_if -> Move_if .)
    MOVE            reduce using rule 9 (funcion_if -> Move_if .)
    DELAY           reduce using rule 9 (funcion_if -> Move_if .)
    IF              reduce using rule 9 (funcion_if -> Move_if .)
    WHILE           reduce using rule 9 (funcion_if -> Move_if .)
    FOR             reduce using rule 9 (funcion_if -> Move_if .)
    LOOP            reduce using rule 9 (funcion_if -> Move_if .)
    PRINTLN         reduce using rule 9 (funcion_if -> Move_if .)
    ELSE            reduce using rule 9 (funcion_if -> Move_if .)
    FIN             reduce using rule 9 (funcion_if -> Move_if .)
    LLAVER          reduce using rule 9 (funcion_if -> Move_if .)


state 52

    (10) funcion_if -> Delay_if .

    INTEGER         reduce using rule 10 (funcion_if -> Delay_if .)
    STRING          reduce using rule 10 (funcion_if -> Delay_if .)
    ID              reduce using rule 10 (funcion_if -> Delay_if .)
    SUMA            reduce using rule 10 (funcion_if -> Delay_if .)
    RESTA           reduce using rule 10 (funcion_if -> Delay_if .)
    MULTIPLICA      reduce using rule 10 (funcion_if -> Delay_if .)
    DIVIDE          reduce using rule 10 (funcion_if -> Delay_if .)
    POTENCIA        reduce using rule 10 (funcion_if -> Delay_if .)
    MAIN            reduce using rule 10 (funcion_if -> Delay_if .)
    OPERA           reduce using rule 10 (funcion_if -> Delay_if .)
    MOVE            reduce using rule 10 (funcion_if -> Delay_if .)
    DELAY           reduce using rule 10 (funcion_if -> Delay_if .)
    IF              reduce using rule 10 (funcion_if -> Delay_if .)
    WHILE           reduce using rule 10 (funcion_if -> Delay_if .)
    FOR             reduce using rule 10 (funcion_if -> Delay_if .)
    LOOP            reduce using rule 10 (funcion_if -> Delay_if .)
    PRINTLN         reduce using rule 10 (funcion_if -> Delay_if .)
    ELSE            reduce using rule 10 (funcion_if -> Delay_if .)
    FIN             reduce using rule 10 (funcion_if -> Delay_if .)
    LLAVER          reduce using rule 10 (funcion_if -> Delay_if .)


state 53

    (11) funcion_if -> Opera_if .

    INTEGER         reduce using rule 11 (funcion_if -> Opera_if .)
    STRING          reduce using rule 11 (funcion_if -> Opera_if .)
    ID              reduce using rule 11 (funcion_if -> Opera_if .)
    SUMA            reduce using rule 11 (funcion_if -> Opera_if .)
    RESTA           reduce using rule 11 (funcion_if -> Opera_if .)
    MULTIPLICA      reduce using rule 11 (funcion_if -> Opera_if .)
    DIVIDE          reduce using rule 11 (funcion_if -> Opera_if .)
    POTENCIA        reduce using rule 11 (funcion_if -> Opera_if .)
    MAIN            reduce using rule 11 (funcion_if -> Opera_if .)
    OPERA           reduce using rule 11 (funcion_if -> Opera_if .)
    MOVE            reduce using rule 11 (funcion_if -> Opera_if .)
    DELAY           reduce using rule 11 (funcion_if -> Opera_if .)
    IF              reduce using rule 11 (funcion_if -> Opera_if .)
    WHILE           reduce using rule 11 (funcion_if -> Opera_if .)
    FOR             reduce using rule 11 (funcion_if -> Opera_if .)
    LOOP            reduce using rule 11 (funcion_if -> Opera_if .)
    PRINTLN         reduce using rule 11 (funcion_if -> Opera_if .)
    ELSE            reduce using rule 11 (funcion_if -> Opera_if .)
    FIN             reduce using rule 11 (funcion_if -> Opera_if .)
    LLAVER          reduce using rule 11 (funcion_if -> Opera_if .)


state 54

    (12) funcion_if -> Println_if .

    INTEGER         reduce using rule 12 (funcion_if -> Println_if .)
    STRING          reduce using rule 12 (funcion_if -> Println_if .)
    ID              reduce using rule 12 (funcion_if -> Println_if .)
    SUMA            reduce using rule 12 (funcion_if -> Println_if .)
    RESTA           reduce using rule 12 (funcion_if -> Println_if .)
    MULTIPLICA      reduce using rule 12 (funcion_if -> Println_if .)
    DIVIDE          reduce using rule 12 (funcion_if -> Println_if .)
    POTENCIA        reduce using rule 12 (funcion_if -> Println_if .)
    MAIN            reduce using rule 12 (funcion_if -> Println_if .)
    OPERA           reduce using rule 12 (funcion_if -> Println_if .)
    MOVE            reduce using rule 12 (funcion_if -> Println_if .)
    DELAY           reduce using rule 12 (funcion_if -> Println_if .)
    IF              reduce using rule 12 (funcion_if -> Println_if .)
    WHILE           reduce using rule 12 (funcion_if -> Println_if .)
    FOR             reduce using rule 12 (funcion_if -> Println_if .)
    LOOP            reduce using rule 12 (funcion_if -> Println_if .)
    PRINTLN         reduce using rule 12 (funcion_if -> Println_if .)
    ELSE            reduce using rule 12 (funcion_if -> Println_if .)
    FIN             reduce using rule 12 (funcion_if -> Println_if .)
    LLAVER          reduce using rule 12 (funcion_if -> Println_if .)


state 55

    (2) code -> INICIO cuerpo FIN .

    $end            reduce using rule 2 (code -> INICIO cuerpo FIN .)


state 56

    (20) variable -> variableDef1 cuerpo .

    FIN             reduce using rule 20 (variable -> variableDef1 cuerpo .)
    LLAVER          reduce using rule 20 (variable -> variableDef1 cuerpo .)


state 57

    (21) variable -> variableDef2 cuerpo .

    FIN             reduce using rule 21 (variable -> variableDef2 cuerpo .)
    LLAVER          reduce using rule 21 (variable -> variableDef2 cuerpo .)


state 58

    (22) variable -> empty empty .
    (34) expresion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 22 (variable -> empty empty .)
  ! reduce/reduce conflict for LLAVER resolved using rule 22 (variable -> empty empty .)
    FIN             reduce using rule 22 (variable -> empty empty .)
    LLAVER          reduce using rule 22 (variable -> empty empty .)

  ! FIN             [ reduce using rule 34 (expresion -> empty empty .) ]
  ! LLAVER          [ reduce using rule 34 (expresion -> empty empty .) ]


state 59

    (27) expresion -> INTEGER expresion .

    FIN             reduce using rule 27 (expresion -> INTEGER expresion .)
    LLAVER          reduce using rule 27 (expresion -> INTEGER expresion .)
    INTEGER         reduce using rule 27 (expresion -> INTEGER expresion .)
    STRING          reduce using rule 27 (expresion -> INTEGER expresion .)
    ID              reduce using rule 27 (expresion -> INTEGER expresion .)
    SUMA            reduce using rule 27 (expresion -> INTEGER expresion .)
    RESTA           reduce using rule 27 (expresion -> INTEGER expresion .)
    MULTIPLICA      reduce using rule 27 (expresion -> INTEGER expresion .)
    DIVIDE          reduce using rule 27 (expresion -> INTEGER expresion .)
    POTENCIA        reduce using rule 27 (expresion -> INTEGER expresion .)
    MAIN            reduce using rule 27 (expresion -> INTEGER expresion .)
    OPERA           reduce using rule 27 (expresion -> INTEGER expresion .)
    MOVE            reduce using rule 27 (expresion -> INTEGER expresion .)
    DELAY           reduce using rule 27 (expresion -> INTEGER expresion .)
    IF              reduce using rule 27 (expresion -> INTEGER expresion .)
    WHILE           reduce using rule 27 (expresion -> INTEGER expresion .)
    FOR             reduce using rule 27 (expresion -> INTEGER expresion .)
    LOOP            reduce using rule 27 (expresion -> INTEGER expresion .)
    PRINTLN         reduce using rule 27 (expresion -> INTEGER expresion .)
    ELSE            reduce using rule 27 (expresion -> INTEGER expresion .)
    LLAVEL          reduce using rule 27 (expresion -> INTEGER expresion .)
    RPAREN          reduce using rule 27 (expresion -> INTEGER expresion .)
    COMA            reduce using rule 27 (expresion -> INTEGER expresion .)


state 60

    (55) Igual -> INTEGER IGUAL . INTEGER
    (57) Igual -> INTEGER IGUAL . ID

    INTEGER         shift and go to state 102
    ID              shift and go to state 103


state 61

    (59) Diferente -> INTEGER DIFERENTE . INTEGER
    (61) Diferente -> INTEGER DIFERENTE . ID

    INTEGER         shift and go to state 104
    ID              shift and go to state 105


state 62

    (63) Mayor -> INTEGER MAYOR . INTEGER
    (65) Mayor -> INTEGER MAYOR . ID

    INTEGER         shift and go to state 106
    ID              shift and go to state 107


state 63

    (67) Menor -> INTEGER MENOR . INTEGER
    (69) Menor -> INTEGER MENOR . ID

    INTEGER         shift and go to state 108
    ID              shift and go to state 109


state 64

    (71) Mayorigual -> INTEGER MAYORIGUAL . INTEGER
    (73) Mayorigual -> INTEGER MAYORIGUAL . ID

    INTEGER         shift and go to state 110
    ID              shift and go to state 111


state 65

    (75) Menorigual -> INTEGER MENORIGUAL . INTEGER
    (77) Menorigual -> INTEGER MENORIGUAL . ID

    INTEGER         shift and go to state 112
    ID              shift and go to state 113


state 66

    (34) expresion -> empty . empty
    (92) empty -> .

    FIN             reduce using rule 92 (empty -> .)
    LLAVER          reduce using rule 92 (empty -> .)
    INTEGER         reduce using rule 92 (empty -> .)
    STRING          reduce using rule 92 (empty -> .)
    ID              reduce using rule 92 (empty -> .)
    SUMA            reduce using rule 92 (empty -> .)
    RESTA           reduce using rule 92 (empty -> .)
    MULTIPLICA      reduce using rule 92 (empty -> .)
    DIVIDE          reduce using rule 92 (empty -> .)
    POTENCIA        reduce using rule 92 (empty -> .)
    MAIN            reduce using rule 92 (empty -> .)
    OPERA           reduce using rule 92 (empty -> .)
    MOVE            reduce using rule 92 (empty -> .)
    DELAY           reduce using rule 92 (empty -> .)
    IF              reduce using rule 92 (empty -> .)
    WHILE           reduce using rule 92 (empty -> .)
    FOR             reduce using rule 92 (empty -> .)
    LOOP            reduce using rule 92 (empty -> .)
    PRINTLN         reduce using rule 92 (empty -> .)
    ELSE            reduce using rule 92 (empty -> .)
    LLAVEL          reduce using rule 92 (empty -> .)
    RPAREN          reduce using rule 92 (empty -> .)
    COMA            reduce using rule 92 (empty -> .)

    empty                          shift and go to state 114

state 67

    (79) Opera -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 115


state 68

    (80) Move -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 116


state 69

    (81) Delay -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 117


state 70

    (87) Println -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 118


state 71

    (28) expresion -> STRING expresion .

    FIN             reduce using rule 28 (expresion -> STRING expresion .)
    LLAVER          reduce using rule 28 (expresion -> STRING expresion .)
    INTEGER         reduce using rule 28 (expresion -> STRING expresion .)
    STRING          reduce using rule 28 (expresion -> STRING expresion .)
    ID              reduce using rule 28 (expresion -> STRING expresion .)
    SUMA            reduce using rule 28 (expresion -> STRING expresion .)
    RESTA           reduce using rule 28 (expresion -> STRING expresion .)
    MULTIPLICA      reduce using rule 28 (expresion -> STRING expresion .)
    DIVIDE          reduce using rule 28 (expresion -> STRING expresion .)
    POTENCIA        reduce using rule 28 (expresion -> STRING expresion .)
    MAIN            reduce using rule 28 (expresion -> STRING expresion .)
    OPERA           reduce using rule 28 (expresion -> STRING expresion .)
    MOVE            reduce using rule 28 (expresion -> STRING expresion .)
    DELAY           reduce using rule 28 (expresion -> STRING expresion .)
    IF              reduce using rule 28 (expresion -> STRING expresion .)
    WHILE           reduce using rule 28 (expresion -> STRING expresion .)
    FOR             reduce using rule 28 (expresion -> STRING expresion .)
    LOOP            reduce using rule 28 (expresion -> STRING expresion .)
    PRINTLN         reduce using rule 28 (expresion -> STRING expresion .)
    ELSE            reduce using rule 28 (expresion -> STRING expresion .)
    LLAVEL          reduce using rule 28 (expresion -> STRING expresion .)
    RPAREN          reduce using rule 28 (expresion -> STRING expresion .)
    COMA            reduce using rule 28 (expresion -> STRING expresion .)


state 72

    (29) expresion -> funcion expresion .

    FIN             reduce using rule 29 (expresion -> funcion expresion .)
    LLAVER          reduce using rule 29 (expresion -> funcion expresion .)
    INTEGER         reduce using rule 29 (expresion -> funcion expresion .)
    STRING          reduce using rule 29 (expresion -> funcion expresion .)
    ID              reduce using rule 29 (expresion -> funcion expresion .)
    SUMA            reduce using rule 29 (expresion -> funcion expresion .)
    RESTA           reduce using rule 29 (expresion -> funcion expresion .)
    MULTIPLICA      reduce using rule 29 (expresion -> funcion expresion .)
    DIVIDE          reduce using rule 29 (expresion -> funcion expresion .)
    POTENCIA        reduce using rule 29 (expresion -> funcion expresion .)
    MAIN            reduce using rule 29 (expresion -> funcion expresion .)
    OPERA           reduce using rule 29 (expresion -> funcion expresion .)
    MOVE            reduce using rule 29 (expresion -> funcion expresion .)
    DELAY           reduce using rule 29 (expresion -> funcion expresion .)
    IF              reduce using rule 29 (expresion -> funcion expresion .)
    WHILE           reduce using rule 29 (expresion -> funcion expresion .)
    FOR             reduce using rule 29 (expresion -> funcion expresion .)
    LOOP            reduce using rule 29 (expresion -> funcion expresion .)
    PRINTLN         reduce using rule 29 (expresion -> funcion expresion .)
    ELSE            reduce using rule 29 (expresion -> funcion expresion .)
    LLAVEL          reduce using rule 29 (expresion -> funcion expresion .)
    RPAREN          reduce using rule 29 (expresion -> funcion expresion .)
    COMA            reduce using rule 29 (expresion -> funcion expresion .)


state 73

    (30) expresion -> ID expresion .

    FIN             reduce using rule 30 (expresion -> ID expresion .)
    LLAVER          reduce using rule 30 (expresion -> ID expresion .)
    INTEGER         reduce using rule 30 (expresion -> ID expresion .)
    STRING          reduce using rule 30 (expresion -> ID expresion .)
    ID              reduce using rule 30 (expresion -> ID expresion .)
    SUMA            reduce using rule 30 (expresion -> ID expresion .)
    RESTA           reduce using rule 30 (expresion -> ID expresion .)
    MULTIPLICA      reduce using rule 30 (expresion -> ID expresion .)
    DIVIDE          reduce using rule 30 (expresion -> ID expresion .)
    POTENCIA        reduce using rule 30 (expresion -> ID expresion .)
    MAIN            reduce using rule 30 (expresion -> ID expresion .)
    OPERA           reduce using rule 30 (expresion -> ID expresion .)
    MOVE            reduce using rule 30 (expresion -> ID expresion .)
    DELAY           reduce using rule 30 (expresion -> ID expresion .)
    IF              reduce using rule 30 (expresion -> ID expresion .)
    WHILE           reduce using rule 30 (expresion -> ID expresion .)
    FOR             reduce using rule 30 (expresion -> ID expresion .)
    LOOP            reduce using rule 30 (expresion -> ID expresion .)
    PRINTLN         reduce using rule 30 (expresion -> ID expresion .)
    ELSE            reduce using rule 30 (expresion -> ID expresion .)
    LLAVEL          reduce using rule 30 (expresion -> ID expresion .)
    RPAREN          reduce using rule 30 (expresion -> ID expresion .)
    COMA            reduce using rule 30 (expresion -> ID expresion .)


state 74

    (56) Igual -> ID IGUAL . ID
    (58) Igual -> ID IGUAL . INTEGER

    ID              shift and go to state 119
    INTEGER         shift and go to state 120


state 75

    (60) Diferente -> ID DIFERENTE . ID
    (62) Diferente -> ID DIFERENTE . INTEGER

    ID              shift and go to state 121
    INTEGER         shift and go to state 122


state 76

    (64) Mayor -> ID MAYOR . ID
    (66) Mayor -> ID MAYOR . INTEGER

    ID              shift and go to state 123
    INTEGER         shift and go to state 124


state 77

    (68) Menor -> ID MENOR . ID
    (70) Menor -> ID MENOR . INTEGER

    ID              shift and go to state 125
    INTEGER         shift and go to state 126


state 78

    (72) Mayorigual -> ID MAYORIGUAL . ID
    (74) Mayorigual -> ID MAYORIGUAL . INTEGER

    ID              shift and go to state 127
    INTEGER         shift and go to state 128


state 79

    (76) Menorigual -> ID MENORIGUAL . ID
    (78) Menorigual -> ID MENORIGUAL . INTEGER

    ID              shift and go to state 129
    INTEGER         shift and go to state 130


state 80

    (31) expresion -> condicion expresion .

    FIN             reduce using rule 31 (expresion -> condicion expresion .)
    LLAVER          reduce using rule 31 (expresion -> condicion expresion .)
    INTEGER         reduce using rule 31 (expresion -> condicion expresion .)
    STRING          reduce using rule 31 (expresion -> condicion expresion .)
    ID              reduce using rule 31 (expresion -> condicion expresion .)
    SUMA            reduce using rule 31 (expresion -> condicion expresion .)
    RESTA           reduce using rule 31 (expresion -> condicion expresion .)
    MULTIPLICA      reduce using rule 31 (expresion -> condicion expresion .)
    DIVIDE          reduce using rule 31 (expresion -> condicion expresion .)
    POTENCIA        reduce using rule 31 (expresion -> condicion expresion .)
    MAIN            reduce using rule 31 (expresion -> condicion expresion .)
    OPERA           reduce using rule 31 (expresion -> condicion expresion .)
    MOVE            reduce using rule 31 (expresion -> condicion expresion .)
    DELAY           reduce using rule 31 (expresion -> condicion expresion .)
    IF              reduce using rule 31 (expresion -> condicion expresion .)
    WHILE           reduce using rule 31 (expresion -> condicion expresion .)
    FOR             reduce using rule 31 (expresion -> condicion expresion .)
    LOOP            reduce using rule 31 (expresion -> condicion expresion .)
    PRINTLN         reduce using rule 31 (expresion -> condicion expresion .)
    ELSE            reduce using rule 31 (expresion -> condicion expresion .)
    LLAVEL          reduce using rule 31 (expresion -> condicion expresion .)
    RPAREN          reduce using rule 31 (expresion -> condicion expresion .)
    COMA            reduce using rule 31 (expresion -> condicion expresion .)


state 81

    (32) expresion -> operador expresion .

    FIN             reduce using rule 32 (expresion -> operador expresion .)
    LLAVER          reduce using rule 32 (expresion -> operador expresion .)
    INTEGER         reduce using rule 32 (expresion -> operador expresion .)
    STRING          reduce using rule 32 (expresion -> operador expresion .)
    ID              reduce using rule 32 (expresion -> operador expresion .)
    SUMA            reduce using rule 32 (expresion -> operador expresion .)
    RESTA           reduce using rule 32 (expresion -> operador expresion .)
    MULTIPLICA      reduce using rule 32 (expresion -> operador expresion .)
    DIVIDE          reduce using rule 32 (expresion -> operador expresion .)
    POTENCIA        reduce using rule 32 (expresion -> operador expresion .)
    MAIN            reduce using rule 32 (expresion -> operador expresion .)
    OPERA           reduce using rule 32 (expresion -> operador expresion .)
    MOVE            reduce using rule 32 (expresion -> operador expresion .)
    DELAY           reduce using rule 32 (expresion -> operador expresion .)
    IF              reduce using rule 32 (expresion -> operador expresion .)
    WHILE           reduce using rule 32 (expresion -> operador expresion .)
    FOR             reduce using rule 32 (expresion -> operador expresion .)
    LOOP            reduce using rule 32 (expresion -> operador expresion .)
    PRINTLN         reduce using rule 32 (expresion -> operador expresion .)
    ELSE            reduce using rule 32 (expresion -> operador expresion .)
    LLAVEL          reduce using rule 32 (expresion -> operador expresion .)
    RPAREN          reduce using rule 32 (expresion -> operador expresion .)
    COMA            reduce using rule 32 (expresion -> operador expresion .)


state 82

    (23) variableDef1 -> LET ID . PUNTOCOMA
    (24) variableDef2 -> LET ID . EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> LET ID . EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> LET ID . EQUAL STRING PUNTOCOMA

    PUNTOCOMA       shift and go to state 131
    EQUAL           shift and go to state 132


state 83

    (49) condicion -> Igual expresion .

    INTEGER         reduce using rule 49 (condicion -> Igual expresion .)
    STRING          reduce using rule 49 (condicion -> Igual expresion .)
    ID              reduce using rule 49 (condicion -> Igual expresion .)
    SUMA            reduce using rule 49 (condicion -> Igual expresion .)
    RESTA           reduce using rule 49 (condicion -> Igual expresion .)
    MULTIPLICA      reduce using rule 49 (condicion -> Igual expresion .)
    DIVIDE          reduce using rule 49 (condicion -> Igual expresion .)
    POTENCIA        reduce using rule 49 (condicion -> Igual expresion .)
    MAIN            reduce using rule 49 (condicion -> Igual expresion .)
    OPERA           reduce using rule 49 (condicion -> Igual expresion .)
    MOVE            reduce using rule 49 (condicion -> Igual expresion .)
    DELAY           reduce using rule 49 (condicion -> Igual expresion .)
    IF              reduce using rule 49 (condicion -> Igual expresion .)
    WHILE           reduce using rule 49 (condicion -> Igual expresion .)
    FOR             reduce using rule 49 (condicion -> Igual expresion .)
    LOOP            reduce using rule 49 (condicion -> Igual expresion .)
    PRINTLN         reduce using rule 49 (condicion -> Igual expresion .)
    ELSE            reduce using rule 49 (condicion -> Igual expresion .)
    FIN             reduce using rule 49 (condicion -> Igual expresion .)
    LLAVER          reduce using rule 49 (condicion -> Igual expresion .)
    LLAVEL          reduce using rule 49 (condicion -> Igual expresion .)
    RPAREN          reduce using rule 49 (condicion -> Igual expresion .)
    COMA            reduce using rule 49 (condicion -> Igual expresion .)


state 84

    (50) condicion -> Diferente expresion .

    INTEGER         reduce using rule 50 (condicion -> Diferente expresion .)
    STRING          reduce using rule 50 (condicion -> Diferente expresion .)
    ID              reduce using rule 50 (condicion -> Diferente expresion .)
    SUMA            reduce using rule 50 (condicion -> Diferente expresion .)
    RESTA           reduce using rule 50 (condicion -> Diferente expresion .)
    MULTIPLICA      reduce using rule 50 (condicion -> Diferente expresion .)
    DIVIDE          reduce using rule 50 (condicion -> Diferente expresion .)
    POTENCIA        reduce using rule 50 (condicion -> Diferente expresion .)
    MAIN            reduce using rule 50 (condicion -> Diferente expresion .)
    OPERA           reduce using rule 50 (condicion -> Diferente expresion .)
    MOVE            reduce using rule 50 (condicion -> Diferente expresion .)
    DELAY           reduce using rule 50 (condicion -> Diferente expresion .)
    IF              reduce using rule 50 (condicion -> Diferente expresion .)
    WHILE           reduce using rule 50 (condicion -> Diferente expresion .)
    FOR             reduce using rule 50 (condicion -> Diferente expresion .)
    LOOP            reduce using rule 50 (condicion -> Diferente expresion .)
    PRINTLN         reduce using rule 50 (condicion -> Diferente expresion .)
    ELSE            reduce using rule 50 (condicion -> Diferente expresion .)
    FIN             reduce using rule 50 (condicion -> Diferente expresion .)
    LLAVER          reduce using rule 50 (condicion -> Diferente expresion .)
    LLAVEL          reduce using rule 50 (condicion -> Diferente expresion .)
    RPAREN          reduce using rule 50 (condicion -> Diferente expresion .)
    COMA            reduce using rule 50 (condicion -> Diferente expresion .)


state 85

    (51) condicion -> Mayor expresion .

    INTEGER         reduce using rule 51 (condicion -> Mayor expresion .)
    STRING          reduce using rule 51 (condicion -> Mayor expresion .)
    ID              reduce using rule 51 (condicion -> Mayor expresion .)
    SUMA            reduce using rule 51 (condicion -> Mayor expresion .)
    RESTA           reduce using rule 51 (condicion -> Mayor expresion .)
    MULTIPLICA      reduce using rule 51 (condicion -> Mayor expresion .)
    DIVIDE          reduce using rule 51 (condicion -> Mayor expresion .)
    POTENCIA        reduce using rule 51 (condicion -> Mayor expresion .)
    MAIN            reduce using rule 51 (condicion -> Mayor expresion .)
    OPERA           reduce using rule 51 (condicion -> Mayor expresion .)
    MOVE            reduce using rule 51 (condicion -> Mayor expresion .)
    DELAY           reduce using rule 51 (condicion -> Mayor expresion .)
    IF              reduce using rule 51 (condicion -> Mayor expresion .)
    WHILE           reduce using rule 51 (condicion -> Mayor expresion .)
    FOR             reduce using rule 51 (condicion -> Mayor expresion .)
    LOOP            reduce using rule 51 (condicion -> Mayor expresion .)
    PRINTLN         reduce using rule 51 (condicion -> Mayor expresion .)
    ELSE            reduce using rule 51 (condicion -> Mayor expresion .)
    FIN             reduce using rule 51 (condicion -> Mayor expresion .)
    LLAVER          reduce using rule 51 (condicion -> Mayor expresion .)
    LLAVEL          reduce using rule 51 (condicion -> Mayor expresion .)
    RPAREN          reduce using rule 51 (condicion -> Mayor expresion .)
    COMA            reduce using rule 51 (condicion -> Mayor expresion .)


state 86

    (52) condicion -> Menor expresion .

    INTEGER         reduce using rule 52 (condicion -> Menor expresion .)
    STRING          reduce using rule 52 (condicion -> Menor expresion .)
    ID              reduce using rule 52 (condicion -> Menor expresion .)
    SUMA            reduce using rule 52 (condicion -> Menor expresion .)
    RESTA           reduce using rule 52 (condicion -> Menor expresion .)
    MULTIPLICA      reduce using rule 52 (condicion -> Menor expresion .)
    DIVIDE          reduce using rule 52 (condicion -> Menor expresion .)
    POTENCIA        reduce using rule 52 (condicion -> Menor expresion .)
    MAIN            reduce using rule 52 (condicion -> Menor expresion .)
    OPERA           reduce using rule 52 (condicion -> Menor expresion .)
    MOVE            reduce using rule 52 (condicion -> Menor expresion .)
    DELAY           reduce using rule 52 (condicion -> Menor expresion .)
    IF              reduce using rule 52 (condicion -> Menor expresion .)
    WHILE           reduce using rule 52 (condicion -> Menor expresion .)
    FOR             reduce using rule 52 (condicion -> Menor expresion .)
    LOOP            reduce using rule 52 (condicion -> Menor expresion .)
    PRINTLN         reduce using rule 52 (condicion -> Menor expresion .)
    ELSE            reduce using rule 52 (condicion -> Menor expresion .)
    FIN             reduce using rule 52 (condicion -> Menor expresion .)
    LLAVER          reduce using rule 52 (condicion -> Menor expresion .)
    LLAVEL          reduce using rule 52 (condicion -> Menor expresion .)
    RPAREN          reduce using rule 52 (condicion -> Menor expresion .)
    COMA            reduce using rule 52 (condicion -> Menor expresion .)


state 87

    (53) condicion -> Mayorigual expresion .

    INTEGER         reduce using rule 53 (condicion -> Mayorigual expresion .)
    STRING          reduce using rule 53 (condicion -> Mayorigual expresion .)
    ID              reduce using rule 53 (condicion -> Mayorigual expresion .)
    SUMA            reduce using rule 53 (condicion -> Mayorigual expresion .)
    RESTA           reduce using rule 53 (condicion -> Mayorigual expresion .)
    MULTIPLICA      reduce using rule 53 (condicion -> Mayorigual expresion .)
    DIVIDE          reduce using rule 53 (condicion -> Mayorigual expresion .)
    POTENCIA        reduce using rule 53 (condicion -> Mayorigual expresion .)
    MAIN            reduce using rule 53 (condicion -> Mayorigual expresion .)
    OPERA           reduce using rule 53 (condicion -> Mayorigual expresion .)
    MOVE            reduce using rule 53 (condicion -> Mayorigual expresion .)
    DELAY           reduce using rule 53 (condicion -> Mayorigual expresion .)
    IF              reduce using rule 53 (condicion -> Mayorigual expresion .)
    WHILE           reduce using rule 53 (condicion -> Mayorigual expresion .)
    FOR             reduce using rule 53 (condicion -> Mayorigual expresion .)
    LOOP            reduce using rule 53 (condicion -> Mayorigual expresion .)
    PRINTLN         reduce using rule 53 (condicion -> Mayorigual expresion .)
    ELSE            reduce using rule 53 (condicion -> Mayorigual expresion .)
    FIN             reduce using rule 53 (condicion -> Mayorigual expresion .)
    LLAVER          reduce using rule 53 (condicion -> Mayorigual expresion .)
    LLAVEL          reduce using rule 53 (condicion -> Mayorigual expresion .)
    RPAREN          reduce using rule 53 (condicion -> Mayorigual expresion .)
    COMA            reduce using rule 53 (condicion -> Mayorigual expresion .)


state 88

    (54) condicion -> Menorigual expresion .

    INTEGER         reduce using rule 54 (condicion -> Menorigual expresion .)
    STRING          reduce using rule 54 (condicion -> Menorigual expresion .)
    ID              reduce using rule 54 (condicion -> Menorigual expresion .)
    SUMA            reduce using rule 54 (condicion -> Menorigual expresion .)
    RESTA           reduce using rule 54 (condicion -> Menorigual expresion .)
    MULTIPLICA      reduce using rule 54 (condicion -> Menorigual expresion .)
    DIVIDE          reduce using rule 54 (condicion -> Menorigual expresion .)
    POTENCIA        reduce using rule 54 (condicion -> Menorigual expresion .)
    MAIN            reduce using rule 54 (condicion -> Menorigual expresion .)
    OPERA           reduce using rule 54 (condicion -> Menorigual expresion .)
    MOVE            reduce using rule 54 (condicion -> Menorigual expresion .)
    DELAY           reduce using rule 54 (condicion -> Menorigual expresion .)
    IF              reduce using rule 54 (condicion -> Menorigual expresion .)
    WHILE           reduce using rule 54 (condicion -> Menorigual expresion .)
    FOR             reduce using rule 54 (condicion -> Menorigual expresion .)
    LOOP            reduce using rule 54 (condicion -> Menorigual expresion .)
    PRINTLN         reduce using rule 54 (condicion -> Menorigual expresion .)
    ELSE            reduce using rule 54 (condicion -> Menorigual expresion .)
    FIN             reduce using rule 54 (condicion -> Menorigual expresion .)
    LLAVER          reduce using rule 54 (condicion -> Menorigual expresion .)
    LLAVEL          reduce using rule 54 (condicion -> Menorigual expresion .)
    RPAREN          reduce using rule 54 (condicion -> Menorigual expresion .)
    COMA            reduce using rule 54 (condicion -> Menorigual expresion .)


state 89

    (91) main -> MAIN LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 133


state 90

    (8) expresion_if -> funcion_if expresion .

    FIN             reduce using rule 8 (expresion_if -> funcion_if expresion .)
    LLAVER          reduce using rule 8 (expresion_if -> funcion_if expresion .)


state 91

    (79) Opera -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 134

state 92

    (80) Move -> MOVE LPAREN . ID RPAREN PUNTOCOMA
    (13) Move_if -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 135


state 93

    (81) Delay -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA
    (14) Delay_if -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 136


state 94

    (82) If -> IF condicion . LLAVEL cuerpo_if LLAVER

    LLAVEL          shift and go to state 137


state 95

    (55) Igual -> INTEGER . IGUAL INTEGER
    (57) Igual -> INTEGER . IGUAL ID
    (59) Diferente -> INTEGER . DIFERENTE INTEGER
    (61) Diferente -> INTEGER . DIFERENTE ID
    (63) Mayor -> INTEGER . MAYOR INTEGER
    (65) Mayor -> INTEGER . MAYOR ID
    (67) Menor -> INTEGER . MENOR INTEGER
    (69) Menor -> INTEGER . MENOR ID
    (71) Mayorigual -> INTEGER . MAYORIGUAL INTEGER
    (73) Mayorigual -> INTEGER . MAYORIGUAL ID
    (75) Menorigual -> INTEGER . MENORIGUAL INTEGER
    (77) Menorigual -> INTEGER . MENORIGUAL ID

    IGUAL           shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65


state 96

    (56) Igual -> ID . IGUAL ID
    (58) Igual -> ID . IGUAL INTEGER
    (60) Diferente -> ID . DIFERENTE ID
    (62) Diferente -> ID . DIFERENTE INTEGER
    (64) Mayor -> ID . MAYOR ID
    (66) Mayor -> ID . MAYOR INTEGER
    (68) Menor -> ID . MENOR ID
    (70) Menor -> ID . MENOR INTEGER
    (72) Mayorigual -> ID . MAYORIGUAL ID
    (74) Mayorigual -> ID . MAYORIGUAL INTEGER
    (76) Menorigual -> ID . MENORIGUAL ID
    (78) Menorigual -> ID . MENORIGUAL INTEGER

    IGUAL           shift and go to state 74
    DIFERENTE       shift and go to state 75
    MAYOR           shift and go to state 76
    MENOR           shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79


state 97

    (84) While -> WHILE LPAREN . condicion RPAREN LLAVEL cuerpo LLAVER
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 95
    ID              shift and go to state 96

    condicion                      shift and go to state 138
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 98

    (85) For -> FOR ID . IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    IN              shift and go to state 139


state 99

    (86) Loop -> LOOP LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 140
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 100

    (87) Println -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (88) Println -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (89) Println -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (90) Println -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA
    (16) Println_if -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (17) Println_if -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (19) Println_if -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 141
    INTEGER         shift and go to state 142
    ID              shift and go to state 143
    BOOLEAN         shift and go to state 144


state 101

    (83) Else -> ELSE LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    cuerpo                         shift and go to state 145
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 102

    (55) Igual -> INTEGER IGUAL INTEGER .

    INTEGER         reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    STRING          reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    ID              reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    SUMA            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    RESTA           reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    MULTIPLICA      reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    DIVIDE          reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    POTENCIA        reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    MAIN            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    OPERA           reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    MOVE            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    DELAY           reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    IF              reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    WHILE           reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    FOR             reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    LOOP            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    PRINTLN         reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    ELSE            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    FIN             reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    LLAVER          reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    LLAVEL          reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    RPAREN          reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)
    COMA            reduce using rule 55 (Igual -> INTEGER IGUAL INTEGER .)


state 103

    (57) Igual -> INTEGER IGUAL ID .

    INTEGER         reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    STRING          reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    ID              reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    SUMA            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    RESTA           reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    MULTIPLICA      reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    DIVIDE          reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    POTENCIA        reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    MAIN            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    OPERA           reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    MOVE            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    DELAY           reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    IF              reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    WHILE           reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    FOR             reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    LOOP            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    PRINTLN         reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    ELSE            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    FIN             reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    LLAVER          reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    LLAVEL          reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    RPAREN          reduce using rule 57 (Igual -> INTEGER IGUAL ID .)
    COMA            reduce using rule 57 (Igual -> INTEGER IGUAL ID .)


state 104

    (59) Diferente -> INTEGER DIFERENTE INTEGER .

    INTEGER         reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    STRING          reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    ID              reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    SUMA            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    RESTA           reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MULTIPLICA      reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    DIVIDE          reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    POTENCIA        reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MAIN            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    OPERA           reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    MOVE            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    DELAY           reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    IF              reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    WHILE           reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    FOR             reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LOOP            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    PRINTLN         reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    ELSE            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    FIN             reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LLAVER          reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    LLAVEL          reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    RPAREN          reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)
    COMA            reduce using rule 59 (Diferente -> INTEGER DIFERENTE INTEGER .)


state 105

    (61) Diferente -> INTEGER DIFERENTE ID .

    INTEGER         reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    STRING          reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    ID              reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    SUMA            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    RESTA           reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    MULTIPLICA      reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    DIVIDE          reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    POTENCIA        reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    MAIN            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    OPERA           reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    MOVE            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    DELAY           reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    IF              reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    WHILE           reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    FOR             reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    LOOP            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    PRINTLN         reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    ELSE            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    FIN             reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    LLAVER          reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    LLAVEL          reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    RPAREN          reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)
    COMA            reduce using rule 61 (Diferente -> INTEGER DIFERENTE ID .)


state 106

    (63) Mayor -> INTEGER MAYOR INTEGER .

    INTEGER         reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    STRING          reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    ID              reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    SUMA            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    RESTA           reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    MULTIPLICA      reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    DIVIDE          reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    POTENCIA        reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    MAIN            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    OPERA           reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    MOVE            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    DELAY           reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    IF              reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    WHILE           reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    FOR             reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    LOOP            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    PRINTLN         reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    ELSE            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    FIN             reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    LLAVER          reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    LLAVEL          reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    RPAREN          reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)
    COMA            reduce using rule 63 (Mayor -> INTEGER MAYOR INTEGER .)


state 107

    (65) Mayor -> INTEGER MAYOR ID .

    INTEGER         reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    STRING          reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    ID              reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    SUMA            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    RESTA           reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    MULTIPLICA      reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    DIVIDE          reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    POTENCIA        reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    MAIN            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    OPERA           reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    MOVE            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    DELAY           reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    IF              reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    WHILE           reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    FOR             reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    LOOP            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    PRINTLN         reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    ELSE            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    FIN             reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    LLAVER          reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    LLAVEL          reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    RPAREN          reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)
    COMA            reduce using rule 65 (Mayor -> INTEGER MAYOR ID .)


state 108

    (67) Menor -> INTEGER MENOR INTEGER .

    INTEGER         reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    STRING          reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    ID              reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    SUMA            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    RESTA           reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    MULTIPLICA      reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    DIVIDE          reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    POTENCIA        reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    MAIN            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    OPERA           reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    MOVE            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    DELAY           reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    IF              reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    WHILE           reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    FOR             reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    LOOP            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    PRINTLN         reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    ELSE            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    FIN             reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    LLAVER          reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    LLAVEL          reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    RPAREN          reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)
    COMA            reduce using rule 67 (Menor -> INTEGER MENOR INTEGER .)


state 109

    (69) Menor -> INTEGER MENOR ID .

    INTEGER         reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    STRING          reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    ID              reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    SUMA            reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    RESTA           reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    MULTIPLICA      reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    DIVIDE          reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    POTENCIA        reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    MAIN            reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    OPERA           reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    MOVE            reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    DELAY           reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    IF              reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    WHILE           reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    FOR             reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    LOOP            reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    PRINTLN         reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    ELSE            reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    FIN             reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    LLAVER          reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    LLAVEL          reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    RPAREN          reduce using rule 69 (Menor -> INTEGER MENOR ID .)
    COMA            reduce using rule 69 (Menor -> INTEGER MENOR ID .)


state 110

    (71) Mayorigual -> INTEGER MAYORIGUAL INTEGER .

    INTEGER         reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    STRING          reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    ID              reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    SUMA            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    RESTA           reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    DIVIDE          reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    POTENCIA        reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MAIN            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    OPERA           reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    MOVE            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    DELAY           reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    IF              reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    WHILE           reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    FOR             reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LOOP            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    PRINTLN         reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    ELSE            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    FIN             reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LLAVER          reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    LLAVEL          reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    RPAREN          reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)
    COMA            reduce using rule 71 (Mayorigual -> INTEGER MAYORIGUAL INTEGER .)


state 111

    (73) Mayorigual -> INTEGER MAYORIGUAL ID .

    INTEGER         reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    STRING          reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    ID              reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    SUMA            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    RESTA           reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MULTIPLICA      reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    DIVIDE          reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    POTENCIA        reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MAIN            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    OPERA           reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    MOVE            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    DELAY           reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    IF              reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    WHILE           reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    FOR             reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LOOP            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    PRINTLN         reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    ELSE            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    FIN             reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LLAVER          reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    LLAVEL          reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    RPAREN          reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)
    COMA            reduce using rule 73 (Mayorigual -> INTEGER MAYORIGUAL ID .)


state 112

    (75) Menorigual -> INTEGER MENORIGUAL INTEGER .

    INTEGER         reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    STRING          reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    ID              reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    SUMA            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    RESTA           reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    DIVIDE          reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    POTENCIA        reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MAIN            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    OPERA           reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    MOVE            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    DELAY           reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    IF              reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    WHILE           reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    FOR             reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LOOP            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    PRINTLN         reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    ELSE            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    FIN             reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LLAVER          reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    LLAVEL          reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    RPAREN          reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)
    COMA            reduce using rule 75 (Menorigual -> INTEGER MENORIGUAL INTEGER .)


state 113

    (77) Menorigual -> INTEGER MENORIGUAL ID .

    INTEGER         reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    STRING          reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    ID              reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    SUMA            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    RESTA           reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    MULTIPLICA      reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    DIVIDE          reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    POTENCIA        reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    MAIN            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    OPERA           reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    MOVE            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    DELAY           reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    IF              reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    WHILE           reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    FOR             reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    LOOP            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    PRINTLN         reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    ELSE            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    FIN             reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    LLAVER          reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    LLAVEL          reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    RPAREN          reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)
    COMA            reduce using rule 77 (Menorigual -> INTEGER MENORIGUAL ID .)


state 114

    (34) expresion -> empty empty .

    FIN             reduce using rule 34 (expresion -> empty empty .)
    LLAVER          reduce using rule 34 (expresion -> empty empty .)
    INTEGER         reduce using rule 34 (expresion -> empty empty .)
    STRING          reduce using rule 34 (expresion -> empty empty .)
    ID              reduce using rule 34 (expresion -> empty empty .)
    SUMA            reduce using rule 34 (expresion -> empty empty .)
    RESTA           reduce using rule 34 (expresion -> empty empty .)
    MULTIPLICA      reduce using rule 34 (expresion -> empty empty .)
    DIVIDE          reduce using rule 34 (expresion -> empty empty .)
    POTENCIA        reduce using rule 34 (expresion -> empty empty .)
    MAIN            reduce using rule 34 (expresion -> empty empty .)
    OPERA           reduce using rule 34 (expresion -> empty empty .)
    MOVE            reduce using rule 34 (expresion -> empty empty .)
    DELAY           reduce using rule 34 (expresion -> empty empty .)
    IF              reduce using rule 34 (expresion -> empty empty .)
    WHILE           reduce using rule 34 (expresion -> empty empty .)
    FOR             reduce using rule 34 (expresion -> empty empty .)
    LOOP            reduce using rule 34 (expresion -> empty empty .)
    PRINTLN         reduce using rule 34 (expresion -> empty empty .)
    ELSE            reduce using rule 34 (expresion -> empty empty .)
    LLAVEL          reduce using rule 34 (expresion -> empty empty .)
    RPAREN          reduce using rule 34 (expresion -> empty empty .)
    COMA            reduce using rule 34 (expresion -> empty empty .)


state 115

    (79) Opera -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 146

state 116

    (80) Move -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 147


state 117

    (81) Delay -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 148


state 118

    (87) Println -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (88) Println -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (89) Println -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (90) Println -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 149
    INTEGER         shift and go to state 150
    ID              shift and go to state 151
    BOOLEAN         shift and go to state 152


state 119

    (56) Igual -> ID IGUAL ID .

    INTEGER         reduce using rule 56 (Igual -> ID IGUAL ID .)
    STRING          reduce using rule 56 (Igual -> ID IGUAL ID .)
    ID              reduce using rule 56 (Igual -> ID IGUAL ID .)
    SUMA            reduce using rule 56 (Igual -> ID IGUAL ID .)
    RESTA           reduce using rule 56 (Igual -> ID IGUAL ID .)
    MULTIPLICA      reduce using rule 56 (Igual -> ID IGUAL ID .)
    DIVIDE          reduce using rule 56 (Igual -> ID IGUAL ID .)
    POTENCIA        reduce using rule 56 (Igual -> ID IGUAL ID .)
    MAIN            reduce using rule 56 (Igual -> ID IGUAL ID .)
    OPERA           reduce using rule 56 (Igual -> ID IGUAL ID .)
    MOVE            reduce using rule 56 (Igual -> ID IGUAL ID .)
    DELAY           reduce using rule 56 (Igual -> ID IGUAL ID .)
    IF              reduce using rule 56 (Igual -> ID IGUAL ID .)
    WHILE           reduce using rule 56 (Igual -> ID IGUAL ID .)
    FOR             reduce using rule 56 (Igual -> ID IGUAL ID .)
    LOOP            reduce using rule 56 (Igual -> ID IGUAL ID .)
    PRINTLN         reduce using rule 56 (Igual -> ID IGUAL ID .)
    ELSE            reduce using rule 56 (Igual -> ID IGUAL ID .)
    FIN             reduce using rule 56 (Igual -> ID IGUAL ID .)
    LLAVER          reduce using rule 56 (Igual -> ID IGUAL ID .)
    LLAVEL          reduce using rule 56 (Igual -> ID IGUAL ID .)
    RPAREN          reduce using rule 56 (Igual -> ID IGUAL ID .)
    COMA            reduce using rule 56 (Igual -> ID IGUAL ID .)


state 120

    (58) Igual -> ID IGUAL INTEGER .

    INTEGER         reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    STRING          reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    ID              reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    SUMA            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    RESTA           reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    MULTIPLICA      reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    DIVIDE          reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    POTENCIA        reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    MAIN            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    OPERA           reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    MOVE            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    DELAY           reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    IF              reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    WHILE           reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    FOR             reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    LOOP            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    PRINTLN         reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    ELSE            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    FIN             reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    LLAVER          reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    LLAVEL          reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    RPAREN          reduce using rule 58 (Igual -> ID IGUAL INTEGER .)
    COMA            reduce using rule 58 (Igual -> ID IGUAL INTEGER .)


state 121

    (60) Diferente -> ID DIFERENTE ID .

    INTEGER         reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    STRING          reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    ID              reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    SUMA            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    RESTA           reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    MULTIPLICA      reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    DIVIDE          reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    POTENCIA        reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    MAIN            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    OPERA           reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    MOVE            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    DELAY           reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    IF              reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    WHILE           reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    FOR             reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    LOOP            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    PRINTLN         reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    ELSE            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    FIN             reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    LLAVER          reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    LLAVEL          reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    RPAREN          reduce using rule 60 (Diferente -> ID DIFERENTE ID .)
    COMA            reduce using rule 60 (Diferente -> ID DIFERENTE ID .)


state 122

    (62) Diferente -> ID DIFERENTE INTEGER .

    INTEGER         reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    STRING          reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    ID              reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    SUMA            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    RESTA           reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    MULTIPLICA      reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    DIVIDE          reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    POTENCIA        reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    MAIN            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    OPERA           reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    MOVE            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    DELAY           reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    IF              reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    WHILE           reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    FOR             reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    LOOP            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    PRINTLN         reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    ELSE            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    FIN             reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    LLAVER          reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    LLAVEL          reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    RPAREN          reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)
    COMA            reduce using rule 62 (Diferente -> ID DIFERENTE INTEGER .)


state 123

    (64) Mayor -> ID MAYOR ID .

    INTEGER         reduce using rule 64 (Mayor -> ID MAYOR ID .)
    STRING          reduce using rule 64 (Mayor -> ID MAYOR ID .)
    ID              reduce using rule 64 (Mayor -> ID MAYOR ID .)
    SUMA            reduce using rule 64 (Mayor -> ID MAYOR ID .)
    RESTA           reduce using rule 64 (Mayor -> ID MAYOR ID .)
    MULTIPLICA      reduce using rule 64 (Mayor -> ID MAYOR ID .)
    DIVIDE          reduce using rule 64 (Mayor -> ID MAYOR ID .)
    POTENCIA        reduce using rule 64 (Mayor -> ID MAYOR ID .)
    MAIN            reduce using rule 64 (Mayor -> ID MAYOR ID .)
    OPERA           reduce using rule 64 (Mayor -> ID MAYOR ID .)
    MOVE            reduce using rule 64 (Mayor -> ID MAYOR ID .)
    DELAY           reduce using rule 64 (Mayor -> ID MAYOR ID .)
    IF              reduce using rule 64 (Mayor -> ID MAYOR ID .)
    WHILE           reduce using rule 64 (Mayor -> ID MAYOR ID .)
    FOR             reduce using rule 64 (Mayor -> ID MAYOR ID .)
    LOOP            reduce using rule 64 (Mayor -> ID MAYOR ID .)
    PRINTLN         reduce using rule 64 (Mayor -> ID MAYOR ID .)
    ELSE            reduce using rule 64 (Mayor -> ID MAYOR ID .)
    FIN             reduce using rule 64 (Mayor -> ID MAYOR ID .)
    LLAVER          reduce using rule 64 (Mayor -> ID MAYOR ID .)
    LLAVEL          reduce using rule 64 (Mayor -> ID MAYOR ID .)
    RPAREN          reduce using rule 64 (Mayor -> ID MAYOR ID .)
    COMA            reduce using rule 64 (Mayor -> ID MAYOR ID .)


state 124

    (66) Mayor -> ID MAYOR INTEGER .

    INTEGER         reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    STRING          reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    ID              reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    SUMA            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    RESTA           reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    MULTIPLICA      reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    DIVIDE          reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    POTENCIA        reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    MAIN            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    OPERA           reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    MOVE            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    DELAY           reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    IF              reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    WHILE           reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    FOR             reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    LOOP            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    PRINTLN         reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    ELSE            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    FIN             reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    LLAVER          reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    LLAVEL          reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    RPAREN          reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)
    COMA            reduce using rule 66 (Mayor -> ID MAYOR INTEGER .)


state 125

    (68) Menor -> ID MENOR ID .

    INTEGER         reduce using rule 68 (Menor -> ID MENOR ID .)
    STRING          reduce using rule 68 (Menor -> ID MENOR ID .)
    ID              reduce using rule 68 (Menor -> ID MENOR ID .)
    SUMA            reduce using rule 68 (Menor -> ID MENOR ID .)
    RESTA           reduce using rule 68 (Menor -> ID MENOR ID .)
    MULTIPLICA      reduce using rule 68 (Menor -> ID MENOR ID .)
    DIVIDE          reduce using rule 68 (Menor -> ID MENOR ID .)
    POTENCIA        reduce using rule 68 (Menor -> ID MENOR ID .)
    MAIN            reduce using rule 68 (Menor -> ID MENOR ID .)
    OPERA           reduce using rule 68 (Menor -> ID MENOR ID .)
    MOVE            reduce using rule 68 (Menor -> ID MENOR ID .)
    DELAY           reduce using rule 68 (Menor -> ID MENOR ID .)
    IF              reduce using rule 68 (Menor -> ID MENOR ID .)
    WHILE           reduce using rule 68 (Menor -> ID MENOR ID .)
    FOR             reduce using rule 68 (Menor -> ID MENOR ID .)
    LOOP            reduce using rule 68 (Menor -> ID MENOR ID .)
    PRINTLN         reduce using rule 68 (Menor -> ID MENOR ID .)
    ELSE            reduce using rule 68 (Menor -> ID MENOR ID .)
    FIN             reduce using rule 68 (Menor -> ID MENOR ID .)
    LLAVER          reduce using rule 68 (Menor -> ID MENOR ID .)
    LLAVEL          reduce using rule 68 (Menor -> ID MENOR ID .)
    RPAREN          reduce using rule 68 (Menor -> ID MENOR ID .)
    COMA            reduce using rule 68 (Menor -> ID MENOR ID .)


state 126

    (70) Menor -> ID MENOR INTEGER .

    INTEGER         reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    STRING          reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    ID              reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    SUMA            reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    RESTA           reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    MULTIPLICA      reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    DIVIDE          reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    POTENCIA        reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    MAIN            reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    OPERA           reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    MOVE            reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    DELAY           reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    IF              reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    WHILE           reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    FOR             reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    LOOP            reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    PRINTLN         reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    ELSE            reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    FIN             reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    LLAVER          reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    LLAVEL          reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    RPAREN          reduce using rule 70 (Menor -> ID MENOR INTEGER .)
    COMA            reduce using rule 70 (Menor -> ID MENOR INTEGER .)


state 127

    (72) Mayorigual -> ID MAYORIGUAL ID .

    INTEGER         reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    STRING          reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    ID              reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    SUMA            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    RESTA           reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    MULTIPLICA      reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    DIVIDE          reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    POTENCIA        reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    MAIN            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    OPERA           reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    MOVE            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    DELAY           reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    IF              reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    WHILE           reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    FOR             reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    LOOP            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    PRINTLN         reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    ELSE            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    FIN             reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    LLAVER          reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    LLAVEL          reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    RPAREN          reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)
    COMA            reduce using rule 72 (Mayorigual -> ID MAYORIGUAL ID .)


state 128

    (74) Mayorigual -> ID MAYORIGUAL INTEGER .

    INTEGER         reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    STRING          reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    ID              reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    SUMA            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    RESTA           reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    DIVIDE          reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    POTENCIA        reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MAIN            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    OPERA           reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    MOVE            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    DELAY           reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    IF              reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    WHILE           reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    FOR             reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LOOP            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    PRINTLN         reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    ELSE            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    FIN             reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LLAVER          reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    LLAVEL          reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    RPAREN          reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)
    COMA            reduce using rule 74 (Mayorigual -> ID MAYORIGUAL INTEGER .)


state 129

    (76) Menorigual -> ID MENORIGUAL ID .

    INTEGER         reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    STRING          reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    ID              reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    SUMA            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    RESTA           reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    MULTIPLICA      reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    DIVIDE          reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    POTENCIA        reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    MAIN            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    OPERA           reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    MOVE            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    DELAY           reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    IF              reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    WHILE           reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    FOR             reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    LOOP            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    PRINTLN         reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    ELSE            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    FIN             reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    LLAVER          reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    LLAVEL          reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    RPAREN          reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)
    COMA            reduce using rule 76 (Menorigual -> ID MENORIGUAL ID .)


state 130

    (78) Menorigual -> ID MENORIGUAL INTEGER .

    INTEGER         reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    STRING          reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    ID              reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    SUMA            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    RESTA           reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    MULTIPLICA      reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    DIVIDE          reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    POTENCIA        reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    MAIN            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    OPERA           reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    MOVE            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    DELAY           reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    IF              reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    WHILE           reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    FOR             reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    LOOP            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    PRINTLN         reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    ELSE            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    FIN             reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    LLAVER          reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    LLAVEL          reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    RPAREN          reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)
    COMA            reduce using rule 78 (Menorigual -> ID MENORIGUAL INTEGER .)


state 131

    (23) variableDef1 -> LET ID PUNTOCOMA .

    INTEGER         reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    STRING          reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    ID              reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    LET             reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    SUMA            reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    RESTA           reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    MULTIPLICA      reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    DIVIDE          reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    POTENCIA        reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    MAIN            reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    OPERA           reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    MOVE            reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    DELAY           reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    IF              reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    WHILE           reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    FOR             reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    LOOP            reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    PRINTLN         reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    ELSE            reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    FIN             reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)
    LLAVER          reduce using rule 23 (variableDef1 -> LET ID PUNTOCOMA .)


state 132

    (24) variableDef2 -> LET ID EQUAL . INTEGER PUNTOCOMA
    (25) variableDef2 -> LET ID EQUAL . BOOLEAN PUNTOCOMA
    (26) variableDef2 -> LET ID EQUAL . STRING PUNTOCOMA

    INTEGER         shift and go to state 153
    BOOLEAN         shift and go to state 154
    STRING          shift and go to state 155


state 133

    (91) main -> MAIN LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 156


state 134

    (79) Opera -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 157


state 135

    (80) Move -> MOVE LPAREN ID . RPAREN PUNTOCOMA
    (13) Move_if -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 158


state 136

    (81) Delay -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA
    (14) Delay_if -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 159


state 137

    (82) If -> IF condicion LLAVEL . cuerpo_if LLAVER
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (8) expresion_if -> . funcion_if expresion
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    LET             shift and go to state 19
    LLAVER          reduce using rule 92 (empty -> .)
    MOVE            shift and go to state 163
    DELAY           shift and go to state 164
    OPERA           shift and go to state 165
    PRINTLN         shift and go to state 166

    cuerpo_if                      shift and go to state 160
    variable                       shift and go to state 161
    expresion_if                   shift and go to state 18
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 162
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 138

    (84) While -> WHILE LPAREN condicion . RPAREN LLAVEL cuerpo LLAVER

    RPAREN          shift and go to state 167


state 139

    (85) For -> FOR ID IN . INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER

    INTEGER         shift and go to state 168


state 140

    (86) Loop -> LOOP LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 169


state 141

    (87) Println -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA
    (16) Println_if -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 170


state 142

    (88) Println -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA
    (17) Println_if -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 171


state 143

    (89) Println -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA
    (18) Println_if -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 172


state 144

    (90) Println -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA
    (19) Println_if -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 173


state 145

    (83) Else -> ELSE LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 174


state 146

    (79) Opera -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 175


state 147

    (80) Move -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 176


state 148

    (81) Delay -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 177


state 149

    (87) Println -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 178


state 150

    (88) Println -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 179


state 151

    (89) Println -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 180


state 152

    (90) Println -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 181


state 153

    (24) variableDef2 -> LET ID EQUAL INTEGER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 182


state 154

    (25) variableDef2 -> LET ID EQUAL BOOLEAN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 183


state 155

    (26) variableDef2 -> LET ID EQUAL STRING . PUNTOCOMA

    PUNTOCOMA       shift and go to state 184


state 156

    (91) main -> MAIN LPAREN RPAREN PUNTOCOMA .

    FIN             reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    ID              reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    IF              reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)
    COMA            reduce using rule 91 (main -> MAIN LPAREN RPAREN PUNTOCOMA .)


state 157

    (79) Opera -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 185
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 158

    (80) Move -> MOVE LPAREN ID RPAREN . PUNTOCOMA
    (13) Move_if -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 186


state 159

    (81) Delay -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA
    (14) Delay_if -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 187


state 160

    (82) If -> IF condicion LLAVEL cuerpo_if . LLAVER

    LLAVER          shift and go to state 188


state 161

    (6) cuerpo_if -> variable .

    LLAVER          reduce using rule 6 (cuerpo_if -> variable .)


state 162

    (22) variable -> empty . empty
    (92) empty -> .

    LLAVER          reduce using rule 92 (empty -> .)

    empty                          shift and go to state 189

state 163

    (13) Move_if -> MOVE . LPAREN ID RPAREN PUNTOCOMA

    LPAREN          shift and go to state 190


state 164

    (14) Delay_if -> DELAY . LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA

    LPAREN          shift and go to state 191


state 165

    (15) Opera_if -> OPERA . LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA

    LPAREN          shift and go to state 192


state 166

    (16) Println_if -> PRINTLN . LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> PRINTLN . LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> PRINTLN . LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> PRINTLN . LPAREN BOOLEAN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 193


state 167

    (84) While -> WHILE LPAREN condicion RPAREN . LLAVEL cuerpo LLAVER

    LLAVEL          shift and go to state 194


state 168

    (85) For -> FOR ID IN INTEGER . PUNTOS INTEGER LLAVEL expresion LLAVER

    PUNTOS          shift and go to state 195


state 169

    (86) Loop -> LOOP LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 86 (Loop -> LOOP LLAVEL cuerpo LLAVER .)


state 170

    (87) Println -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA
    (16) Println_if -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 196


state 171

    (88) Println -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA
    (17) Println_if -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 197


state 172

    (89) Println -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA
    (18) Println_if -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 198


state 173

    (90) Println -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA
    (19) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 199


state 174

    (83) Else -> ELSE LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 83 (Else -> ELSE LLAVEL cuerpo LLAVER .)


state 175

    (79) Opera -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 200
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 176

    (80) Move -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 201


state 177

    (81) Delay -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 202


state 178

    (87) Println -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 203


state 179

    (88) Println -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 204


state 180

    (89) Println -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 205


state 181

    (90) Println -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 206


state 182

    (24) variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .

    INTEGER         reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    STRING          reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    ID              reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LET             reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    SUMA            reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    RESTA           reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MULTIPLICA      reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    DIVIDE          reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    POTENCIA        reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MAIN            reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    OPERA           reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    MOVE            reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    DELAY           reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    IF              reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    WHILE           reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    FOR             reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LOOP            reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    PRINTLN         reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    ELSE            reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    FIN             reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)
    LLAVER          reduce using rule 24 (variableDef2 -> LET ID EQUAL INTEGER PUNTOCOMA .)


state 183

    (25) variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .

    INTEGER         reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    STRING          reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    ID              reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LET             reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    SUMA            reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    RESTA           reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    DIVIDE          reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    POTENCIA        reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MAIN            reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    OPERA           reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    MOVE            reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    DELAY           reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    IF              reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    WHILE           reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    FOR             reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LOOP            reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    PRINTLN         reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    ELSE            reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    FIN             reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)
    LLAVER          reduce using rule 25 (variableDef2 -> LET ID EQUAL BOOLEAN PUNTOCOMA .)


state 184

    (26) variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .

    INTEGER         reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    STRING          reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    ID              reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LET             reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    SUMA            reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    RESTA           reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MULTIPLICA      reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    DIVIDE          reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    POTENCIA        reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MAIN            reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    OPERA           reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    MOVE            reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    DELAY           reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    IF              reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    WHILE           reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    FOR             reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LOOP            reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    PRINTLN         reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    ELSE            reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    FIN             reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)
    LLAVER          reduce using rule 26 (variableDef2 -> LET ID EQUAL STRING PUNTOCOMA .)


state 185

    (79) Opera -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 207


state 186

    (80) Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .
    (13) Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .) ]


state 187

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA
    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 208


state 188

    (82) If -> IF condicion LLAVEL cuerpo_if LLAVER .

    INTEGER         reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    STRING          reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    ID              reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    SUMA            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    RESTA           reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MULTIPLICA      reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    DIVIDE          reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    POTENCIA        reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MAIN            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    OPERA           reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    MOVE            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    DELAY           reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    IF              reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    WHILE           reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    FOR             reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LOOP            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    PRINTLN         reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    ELSE            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    FIN             reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LLAVER          reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    LLAVEL          reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    RPAREN          reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)
    COMA            reduce using rule 82 (If -> IF condicion LLAVEL cuerpo_if LLAVER .)


state 189

    (22) variable -> empty empty .

    LLAVER          reduce using rule 22 (variable -> empty empty .)


state 190

    (13) Move_if -> MOVE LPAREN . ID RPAREN PUNTOCOMA

    ID              shift and go to state 209


state 191

    (14) Delay_if -> DELAY LPAREN . INTEGER COMA STRING RPAREN PUNTOCOMA

    INTEGER         shift and go to state 210


state 192

    (15) Opera_if -> OPERA LPAREN . operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA

    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39

    operador                       shift and go to state 211

state 193

    (16) Println_if -> PRINTLN LPAREN . STRING RPAREN PUNTOCOMA
    (17) Println_if -> PRINTLN LPAREN . INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> PRINTLN LPAREN . ID RPAREN PUNTOCOMA
    (19) Println_if -> PRINTLN LPAREN . BOOLEAN RPAREN PUNTOCOMA

    STRING          shift and go to state 212
    INTEGER         shift and go to state 213
    ID              shift and go to state 214
    BOOLEAN         shift and go to state 215


state 194

    (84) While -> WHILE LPAREN condicion RPAREN LLAVEL . cuerpo LLAVER
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . cuerpo_if
    (20) variable -> . variableDef1 cuerpo
    (21) variable -> . variableDef2 cuerpo
    (22) variable -> . empty empty
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (6) cuerpo_if -> . variable
    (7) cuerpo_if -> . expresion_if
    (23) variableDef1 -> . LET ID PUNTOCOMA
    (24) variableDef2 -> . LET ID EQUAL INTEGER PUNTOCOMA
    (25) variableDef2 -> . LET ID EQUAL BOOLEAN PUNTOCOMA
    (26) variableDef2 -> . LET ID EQUAL STRING PUNTOCOMA
    (92) empty -> .
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (8) expresion_if -> . funcion_if expresion
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER
    (9) funcion_if -> . Move_if
    (10) funcion_if -> . Delay_if
    (11) funcion_if -> . Opera_if
    (12) funcion_if -> . Println_if
    (13) Move_if -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (14) Delay_if -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (15) Opera_if -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (16) Println_if -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (17) Println_if -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (18) Println_if -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (19) Println_if -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    LET             shift and go to state 19
    LLAVER          reduce using rule 92 (empty -> .)
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    OPERA           shift and go to state 42
    MOVE            shift and go to state 43
    DELAY           shift and go to state 44
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 49
    ELSE            shift and go to state 50

    condicion                      shift and go to state 15
    cuerpo                         shift and go to state 216
    variable                       shift and go to state 5
    expresion                      shift and go to state 6
    cuerpo_if                      shift and go to state 7
    variableDef1                   shift and go to state 8
    variableDef2                   shift and go to state 9
    empty                          shift and go to state 10
    funcion                        shift and go to state 13
    operador                       shift and go to state 16
    main                           shift and go to state 17
    expresion_if                   shift and go to state 18
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34
    funcion_if                     shift and go to state 41
    Move_if                        shift and go to state 51
    Delay_if                       shift and go to state 52
    Opera_if                       shift and go to state 53
    Println_if                     shift and go to state 54

state 195

    (85) For -> FOR ID IN INTEGER PUNTOS . INTEGER LLAVEL expresion LLAVER

    INTEGER         shift and go to state 217


state 196

    (87) Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .
    (16) Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .) ]


state 197

    (88) Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .
    (17) Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    STRING          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ID              reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    IF              reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FOR             reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FIN             reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .) ]


state 198

    (89) Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .
    (18) Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .) ]


state 199

    (90) Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .
    (19) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ID              reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    IF              reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FIN             reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .) ]


state 200

    (79) Opera -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 218


state 201

    (80) Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    COMA            reduce using rule 80 (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA .)


state 202

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 219


state 203

    (87) Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    COMA            reduce using rule 87 (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)


state 204

    (88) Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    STRING          reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ID              reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    IF              reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FOR             reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FIN             reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    COMA            reduce using rule 88 (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)


state 205

    (89) Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FIN             reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    COMA            reduce using rule 89 (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)


state 206

    (90) Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ID              reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    IF              reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FIN             reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    COMA            reduce using rule 90 (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)


state 207

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 220
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 208

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA
    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 221


state 209

    (13) Move_if -> MOVE LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 222


state 210

    (14) Delay_if -> DELAY LPAREN INTEGER . COMA STRING RPAREN PUNTOCOMA

    COMA            shift and go to state 223


state 211

    (15) Opera_if -> OPERA LPAREN operador . COMA expresion COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 224


state 212

    (16) Println_if -> PRINTLN LPAREN STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 225


state 213

    (17) Println_if -> PRINTLN LPAREN INTEGER . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 226


state 214

    (18) Println_if -> PRINTLN LPAREN ID . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 227


state 215

    (19) Println_if -> PRINTLN LPAREN BOOLEAN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 228


state 216

    (84) While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo . LLAVER

    LLAVER          shift and go to state 229


state 217

    (85) For -> FOR ID IN INTEGER PUNTOS INTEGER . LLAVEL expresion LLAVER

    LLAVEL          shift and go to state 230


state 218

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 231
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 219

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 232


state 220

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 233


state 221

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .
    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .) ]


state 222

    (13) Move_if -> MOVE LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 234


state 223

    (14) Delay_if -> DELAY LPAREN INTEGER COMA . STRING RPAREN PUNTOCOMA

    STRING          shift and go to state 235


state 224

    (15) Opera_if -> OPERA LPAREN operador COMA . expresion COMA expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    COMA            reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 236
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 225

    (16) Println_if -> PRINTLN LPAREN STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 237


state 226

    (17) Println_if -> PRINTLN LPAREN INTEGER RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 238


state 227

    (18) Println_if -> PRINTLN LPAREN ID RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 228

    (19) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 240


state 229

    (84) While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .

    INTEGER         reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    STRING          reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    ID              reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    SUMA            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    RESTA           reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MULTIPLICA      reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    DIVIDE          reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    POTENCIA        reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MAIN            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    OPERA           reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    MOVE            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    DELAY           reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    IF              reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    WHILE           reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    FOR             reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LOOP            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    PRINTLN         reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    ELSE            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    FIN             reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LLAVER          reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    LLAVEL          reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    RPAREN          reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)
    COMA            reduce using rule 84 (While -> WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER .)


state 230

    (85) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL . expresion LLAVER
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    LLAVER          reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    expresion                      shift and go to state 241
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    operador                       shift and go to state 16
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 231

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 242


state 232

    (81) Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FIN             reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    COMA            reduce using rule 81 (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)


state 233

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA
    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 234

    (13) Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 13 (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA .)


state 235

    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 244


state 236

    (15) Opera_if -> OPERA LPAREN operador COMA expresion . COMA expresion RPAREN PUNTOCOMA

    COMA            shift and go to state 245


state 237

    (16) Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 16 (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA .)


state 238

    (17) Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    STRING          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ID              reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    IF              reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    FOR             reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 17 (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA .)


state 239

    (18) Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    STRING          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ID              reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    IF              reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    FOR             reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 18 (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA .)


state 240

    (19) Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    STRING          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ID              reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    IF              reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 19 (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA .)


state 241

    (85) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion . LLAVER

    LLAVER          shift and go to state 246


state 242

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 247


state 243

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .
    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

  ! reduce/reduce conflict for INTEGER resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ID resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for SUMA resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MULTIPLICA resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MAIN resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for OPERA resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for MOVE resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for DELAY resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LOOP resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for FIN resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    INTEGER         reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    STRING          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ID              reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    IF              reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FOR             reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FIN             reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)

  ! INTEGER         [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! ID              [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! SUMA            [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! MULTIPLICA      [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! DIVIDE          [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! POTENCIA        [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! MAIN            [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! OPERA           [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! MOVE            [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! DELAY           [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! IF              [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! LOOP            [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! PRINTLN         [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! FIN             [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .) ]


state 244

    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 248


state 245

    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA . expresion RPAREN PUNTOCOMA
    (27) expresion -> . INTEGER expresion
    (28) expresion -> . STRING expresion
    (29) expresion -> . funcion expresion
    (30) expresion -> . ID expresion
    (31) expresion -> . condicion expresion
    (32) expresion -> . operador expresion
    (33) expresion -> . main
    (34) expresion -> . empty empty
    (40) funcion -> . Opera
    (41) funcion -> . Move
    (42) funcion -> . Delay
    (43) funcion -> . If
    (44) funcion -> . While
    (45) funcion -> . For
    (46) funcion -> . Loop
    (47) funcion -> . Println
    (48) funcion -> . Else
    (49) condicion -> . Igual expresion
    (50) condicion -> . Diferente expresion
    (51) condicion -> . Mayor expresion
    (52) condicion -> . Menor expresion
    (53) condicion -> . Mayorigual expresion
    (54) condicion -> . Menorigual expresion
    (35) operador -> . SUMA
    (36) operador -> . RESTA
    (37) operador -> . MULTIPLICA
    (38) operador -> . DIVIDE
    (39) operador -> . POTENCIA
    (91) main -> . MAIN LPAREN RPAREN PUNTOCOMA
    (92) empty -> .
    (79) Opera -> . OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA
    (80) Move -> . MOVE LPAREN ID RPAREN PUNTOCOMA
    (81) Delay -> . DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA
    (82) If -> . IF condicion LLAVEL cuerpo_if LLAVER
    (84) While -> . WHILE LPAREN condicion RPAREN LLAVEL cuerpo LLAVER
    (85) For -> . FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER
    (86) Loop -> . LOOP LLAVEL cuerpo LLAVER
    (87) Println -> . PRINTLN LPAREN STRING RPAREN PUNTOCOMA
    (88) Println -> . PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA
    (89) Println -> . PRINTLN LPAREN ID RPAREN PUNTOCOMA
    (90) Println -> . PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA
    (83) Else -> . ELSE LLAVEL cuerpo LLAVER
    (55) Igual -> . INTEGER IGUAL INTEGER
    (56) Igual -> . ID IGUAL ID
    (57) Igual -> . INTEGER IGUAL ID
    (58) Igual -> . ID IGUAL INTEGER
    (59) Diferente -> . INTEGER DIFERENTE INTEGER
    (60) Diferente -> . ID DIFERENTE ID
    (61) Diferente -> . INTEGER DIFERENTE ID
    (62) Diferente -> . ID DIFERENTE INTEGER
    (63) Mayor -> . INTEGER MAYOR INTEGER
    (64) Mayor -> . ID MAYOR ID
    (65) Mayor -> . INTEGER MAYOR ID
    (66) Mayor -> . ID MAYOR INTEGER
    (67) Menor -> . INTEGER MENOR INTEGER
    (68) Menor -> . ID MENOR ID
    (69) Menor -> . INTEGER MENOR ID
    (70) Menor -> . ID MENOR INTEGER
    (71) Mayorigual -> . INTEGER MAYORIGUAL INTEGER
    (72) Mayorigual -> . ID MAYORIGUAL ID
    (73) Mayorigual -> . INTEGER MAYORIGUAL ID
    (74) Mayorigual -> . ID MAYORIGUAL INTEGER
    (75) Menorigual -> . INTEGER MENORIGUAL INTEGER
    (76) Menorigual -> . ID MENORIGUAL ID
    (77) Menorigual -> . INTEGER MENORIGUAL ID
    (78) Menorigual -> . ID MENORIGUAL INTEGER

    INTEGER         shift and go to state 11
    STRING          shift and go to state 12
    ID              shift and go to state 14
    SUMA            shift and go to state 35
    RESTA           shift and go to state 36
    MULTIPLICA      shift and go to state 37
    DIVIDE          shift and go to state 38
    POTENCIA        shift and go to state 39
    MAIN            shift and go to state 40
    RPAREN          reduce using rule 92 (empty -> .)
    OPERA           shift and go to state 67
    MOVE            shift and go to state 68
    DELAY           shift and go to state 69
    IF              shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    LOOP            shift and go to state 48
    PRINTLN         shift and go to state 70
    ELSE            shift and go to state 50

    operador                       shift and go to state 16
    expresion                      shift and go to state 249
    funcion                        shift and go to state 13
    condicion                      shift and go to state 15
    main                           shift and go to state 17
    empty                          shift and go to state 66
    Opera                          shift and go to state 20
    Move                           shift and go to state 21
    Delay                          shift and go to state 22
    If                             shift and go to state 23
    While                          shift and go to state 24
    For                            shift and go to state 25
    Loop                           shift and go to state 26
    Println                        shift and go to state 27
    Else                           shift and go to state 28
    Igual                          shift and go to state 29
    Diferente                      shift and go to state 30
    Mayor                          shift and go to state 31
    Menor                          shift and go to state 32
    Mayorigual                     shift and go to state 33
    Menorigual                     shift and go to state 34

state 246

    (85) For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .

    INTEGER         reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    STRING          reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    ID              reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    SUMA            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    RESTA           reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MULTIPLICA      reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    DIVIDE          reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    POTENCIA        reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MAIN            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    OPERA           reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    MOVE            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    DELAY           reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    IF              reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    WHILE           reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    FOR             reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LOOP            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    PRINTLN         reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    ELSE            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    FIN             reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LLAVER          reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    LLAVEL          reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    RPAREN          reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)
    COMA            reduce using rule 85 (For -> FOR ID IN INTEGER PUNTOS INTEGER LLAVEL expresion LLAVER .)


state 247

    (79) Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    STRING          reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ID              reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    IF              reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FOR             reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FIN             reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVEL          reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    COMA            reduce using rule 79 (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)


state 248

    (14) Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    STRING          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ID              reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    IF              reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    FOR             reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 14 (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA .)


state 249

    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 250


state 250

    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 251


state 251

    (15) Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .

    INTEGER         reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    STRING          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ID              reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    SUMA            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    RESTA           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MULTIPLICA      reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DIVIDE          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    POTENCIA        reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MAIN            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    OPERA           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    MOVE            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    DELAY           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    IF              reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    FOR             reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    PRINTLN         reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)
    LLAVER          reduce using rule 15 (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTEGER in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 11 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 11 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 11 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 11 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 11 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 11 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 12 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 12 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 12 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 12 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 12 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 12 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for FOR in state 12 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 12 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 12 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 13 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 13 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 13 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 13 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 13 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 13 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 13 resolved as shift
WARNING: shift/reduce conflict for FOR in state 13 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 13 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 13 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 13 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 14 resolved as shift
WARNING: shift/reduce conflict for STRING in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 14 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 14 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 14 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 14 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 14 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 14 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for FOR in state 14 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 14 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 14 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 15 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 15 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 15 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 15 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 15 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 15 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 15 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 15 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 16 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 16 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 16 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 16 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 16 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 16 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 16 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 16 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 16 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 16 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 29 resolved as shift
WARNING: shift/reduce conflict for STRING in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 29 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 29 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 29 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 29 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 29 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 29 resolved as shift
WARNING: shift/reduce conflict for IF in state 29 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 29 resolved as shift
WARNING: shift/reduce conflict for FOR in state 29 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 29 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 29 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 29 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 30 resolved as shift
WARNING: shift/reduce conflict for STRING in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 30 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 30 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 30 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 30 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 30 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 30 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 30 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 30 resolved as shift
WARNING: shift/reduce conflict for FOR in state 30 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 30 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 30 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 30 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 31 resolved as shift
WARNING: shift/reduce conflict for STRING in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 31 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 31 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 31 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 31 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 31 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 31 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 31 resolved as shift
WARNING: shift/reduce conflict for IF in state 31 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for FOR in state 31 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 31 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 31 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 31 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 32 resolved as shift
WARNING: shift/reduce conflict for STRING in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 32 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 32 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 32 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 32 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 32 resolved as shift
WARNING: shift/reduce conflict for IF in state 32 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 32 resolved as shift
WARNING: shift/reduce conflict for FOR in state 32 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 32 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 32 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 32 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 33 resolved as shift
WARNING: shift/reduce conflict for STRING in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 33 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 33 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 33 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 33 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 33 resolved as shift
WARNING: shift/reduce conflict for FOR in state 33 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 33 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 33 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 33 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 34 resolved as shift
WARNING: shift/reduce conflict for STRING in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 34 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 34 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICA in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 34 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 34 resolved as shift
WARNING: shift/reduce conflict for OPERA in state 34 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 34 resolved as shift
WARNING: shift/reduce conflict for DELAY in state 34 resolved as shift
WARNING: shift/reduce conflict for IF in state 34 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 34 resolved as shift
WARNING: shift/reduce conflict for FOR in state 34 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 34 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 34 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 34 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (cuerpo -> variable)
WARNING: rejected rule (cuerpo_if -> variable) in state 5
WARNING: reduce/reduce conflict in state 58 resolved using rule (variable -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 58
WARNING: reduce/reduce conflict in state 186 resolved using rule (Move_if -> MOVE LPAREN ID RPAREN PUNTOCOMA)
WARNING: rejected rule (Move -> MOVE LPAREN ID RPAREN PUNTOCOMA) in state 186
WARNING: reduce/reduce conflict in state 196 resolved using rule (Println_if -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA)
WARNING: rejected rule (Println -> PRINTLN LPAREN STRING RPAREN PUNTOCOMA) in state 196
WARNING: reduce/reduce conflict in state 197 resolved using rule (Println_if -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA)
WARNING: rejected rule (Println -> PRINTLN LPAREN INTEGER RPAREN PUNTOCOMA) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (Println_if -> PRINTLN LPAREN ID RPAREN PUNTOCOMA)
WARNING: rejected rule (Println -> PRINTLN LPAREN ID RPAREN PUNTOCOMA) in state 198
WARNING: reduce/reduce conflict in state 199 resolved using rule (Println_if -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA)
WARNING: rejected rule (Println -> PRINTLN LPAREN BOOLEAN RPAREN PUNTOCOMA) in state 199
WARNING: reduce/reduce conflict in state 221 resolved using rule (Delay_if -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA)
WARNING: rejected rule (Delay -> DELAY LPAREN INTEGER COMA STRING RPAREN PUNTOCOMA) in state 221
WARNING: reduce/reduce conflict in state 243 resolved using rule (Opera_if -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA)
WARNING: rejected rule (Opera -> OPERA LPAREN operador COMA expresion COMA expresion RPAREN PUNTOCOMA) in state 243
